(function () {
  'use strict';

  let _WINDOW = {};
  let _DOCUMENT = {};
  try {
    if (typeof window !== 'undefined') _WINDOW = window;
    if (typeof document !== 'undefined') _DOCUMENT = document;
  } catch (e) {}
  const {
    userAgent = ''
  } = _WINDOW.navigator || {};
  const WINDOW = _WINDOW;
  const DOCUMENT = _DOCUMENT;
  const IS_BROWSER = !!WINDOW.document;
  const IS_DOM = !!DOCUMENT.documentElement && !!DOCUMENT.head && typeof DOCUMENT.addEventListener === 'function' && typeof DOCUMENT.createElement === 'function';
  const IS_IE = ~userAgent.indexOf('MSIE') || ~userAgent.indexOf('Trident/');

  function _defineProperty(e, r, t) {
    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
      value: t,
      enumerable: !0,
      configurable: !0,
      writable: !0
    }) : e[r] = t, e;
  }
  function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
      var o = Object.getOwnPropertySymbols(e);
      r && (o = o.filter(function (r) {
        return Object.getOwnPropertyDescriptor(e, r).enumerable;
      })), t.push.apply(t, o);
    }
    return t;
  }
  function _objectSpread2(e) {
    for (var r = 1; r < arguments.length; r++) {
      var t = null != arguments[r] ? arguments[r] : {};
      r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {
        _defineProperty(e, r, t[r]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {
        Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
      });
    }
    return e;
  }
  function _toPrimitive(t, r) {
    if ("object" != typeof t || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
      var i = e.call(t, r || "default");
      if ("object" != typeof i) return i;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
  }
  function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == typeof i ? i : i + "";
  }

  var S = {
      classic: {
        fa: "solid",
        fas: "solid",
        "fa-solid": "solid",
        far: "regular",
        "fa-regular": "regular",
        fal: "light",
        "fa-light": "light",
        fat: "thin",
        "fa-thin": "thin",
        fab: "brands",
        "fa-brands": "brands"
      },
      duotone: {
        fa: "solid",
        fad: "solid",
        "fa-solid": "solid",
        "fa-duotone": "solid",
        fadr: "regular",
        "fa-regular": "regular",
        fadl: "light",
        "fa-light": "light",
        fadt: "thin",
        "fa-thin": "thin"
      },
      sharp: {
        fa: "solid",
        fass: "solid",
        "fa-solid": "solid",
        fasr: "regular",
        "fa-regular": "regular",
        fasl: "light",
        "fa-light": "light",
        fast: "thin",
        "fa-thin": "thin"
      },
      "sharp-duotone": {
        fa: "solid",
        fasds: "solid",
        "fa-solid": "solid",
        fasdr: "regular",
        "fa-regular": "regular",
        fasdl: "light",
        "fa-light": "light",
        fasdt: "thin",
        "fa-thin": "thin"
      }
    };
  var s = "classic";
  var G = {
      classic: {
        900: "fas",
        400: "far",
        normal: "far",
        300: "fal",
        100: "fat"
      },
      duotone: {
        900: "fad",
        400: "fadr",
        300: "fadl",
        100: "fadt"
      },
      sharp: {
        900: "fass",
        400: "fasr",
        300: "fasl",
        100: "fast"
      },
      "sharp-duotone": {
        900: "fasds",
        400: "fasdr",
        300: "fasdl",
        100: "fasdt"
      }
    };
  var xt = {
      classic: {
        solid: "fas",
        regular: "far",
        light: "fal",
        thin: "fat",
        brands: "fab"
      },
      duotone: {
        solid: "fad",
        regular: "fadr",
        light: "fadl",
        thin: "fadt"
      },
      sharp: {
        solid: "fass",
        regular: "fasr",
        light: "fasl",
        thin: "fast"
      },
      "sharp-duotone": {
        solid: "fasds",
        regular: "fasdr",
        light: "fasdl",
        thin: "fasdt"
      }
    };
  var St = {
      kit: {
        fak: "kit",
        "fa-kit": "kit"
      },
      "kit-duotone": {
        fakd: "kit-duotone",
        "fa-kit-duotone": "kit-duotone"
      }
    };
  var Ct = {
    kit: {
      "fa-kit": "fak"
    },
    "kit-duotone": {
      "fa-kit-duotone": "fakd"
    }
  };
  var Wt = {
      kit: {
        fak: "fa-kit"
      },
      "kit-duotone": {
        fakd: "fa-kit-duotone"
      }
    };
  var Et = {
      kit: {
        kit: "fak"
      },
      "kit-duotone": {
        "kit-duotone": "fakd"
      }
    };

  var ua = {
      classic: {
        "fa-brands": "fab",
        "fa-duotone": "fad",
        "fa-light": "fal",
        "fa-regular": "far",
        "fa-solid": "fas",
        "fa-thin": "fat"
      },
      duotone: {
        "fa-regular": "fadr",
        "fa-light": "fadl",
        "fa-thin": "fadt"
      },
      sharp: {
        "fa-solid": "fass",
        "fa-regular": "fasr",
        "fa-light": "fasl",
        "fa-thin": "fast"
      },
      "sharp-duotone": {
        "fa-solid": "fasds",
        "fa-regular": "fasdr",
        "fa-light": "fasdl",
        "fa-thin": "fasdt"
      }
    },
    ga = {
      classic: {
        fab: "fa-brands",
        fad: "fa-duotone",
        fal: "fa-light",
        far: "fa-regular",
        fas: "fa-solid",
        fat: "fa-thin"
      },
      duotone: {
        fadr: "fa-regular",
        fadl: "fa-light",
        fadt: "fa-thin"
      },
      sharp: {
        fass: "fa-solid",
        fasr: "fa-regular",
        fasl: "fa-light",
        fast: "fa-thin"
      },
      "sharp-duotone": {
        fasds: "fa-solid",
        fasdr: "fa-regular",
        fasdl: "fa-light",
        fasdt: "fa-thin"
      }
    };

  const NAMESPACE_IDENTIFIER = '___FONT_AWESOME___';
  const PRODUCTION = (() => {
    try {
      return "production" === 'production';
    } catch (e$$1) {
      return false;
    }
  })();
  function familyProxy(obj) {
    // Defaults to the classic family if family is not available
    return new Proxy(obj, {
      get(target, prop) {
        return prop in target ? target[prop] : target[s];
      }
    });
  }
  const _PREFIX_TO_STYLE = _objectSpread2({}, S);

  // We changed FACSSClassesToStyleId in the icons repo to be canonical and as such, "classic" family does not have any
  // duotone styles.  But we do still need duotone in _PREFIX_TO_STYLE below, so we are manually adding
  // {'fa-duotone': 'duotone'}
  _PREFIX_TO_STYLE[s] = _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, {
    'fa-duotone': 'duotone'
  }), S[s]), St['kit']), St['kit-duotone']);
  const PREFIX_TO_STYLE = familyProxy(_PREFIX_TO_STYLE);
  const _STYLE_TO_PREFIX = _objectSpread2({}, xt);

  // We changed FAStyleIdToShortPrefixId in the icons repo to be canonical and as such, "classic" family does not have any
  // duotone styles.  But we do still need duotone in _STYLE_TO_PREFIX below, so we are manually adding {duotone: 'fad'}
  _STYLE_TO_PREFIX[s] = _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, {
    duotone: 'fad'
  }), _STYLE_TO_PREFIX[s]), Et['kit']), Et['kit-duotone']);
  const STYLE_TO_PREFIX = familyProxy(_STYLE_TO_PREFIX);
  const _PREFIX_TO_LONG_STYLE = _objectSpread2({}, ga);
  _PREFIX_TO_LONG_STYLE[s] = _objectSpread2(_objectSpread2({}, _PREFIX_TO_LONG_STYLE[s]), Wt['kit']);
  const PREFIX_TO_LONG_STYLE = familyProxy(_PREFIX_TO_LONG_STYLE);
  const _LONG_STYLE_TO_PREFIX = _objectSpread2({}, ua);
  _LONG_STYLE_TO_PREFIX[s] = _objectSpread2(_objectSpread2({}, _LONG_STYLE_TO_PREFIX[s]), Ct['kit']);
  const LONG_STYLE_TO_PREFIX = familyProxy(_LONG_STYLE_TO_PREFIX);
  const _FONT_WEIGHT_TO_PREFIX = _objectSpread2({}, G);
  const FONT_WEIGHT_TO_PREFIX = familyProxy(_FONT_WEIGHT_TO_PREFIX);

  function bunker(fn) {
    try {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }
      fn(...args);
    } catch (e) {
      if (!PRODUCTION) {
        throw e;
      }
    }
  }

  const w = WINDOW || {};
  if (!w[NAMESPACE_IDENTIFIER]) w[NAMESPACE_IDENTIFIER] = {};
  if (!w[NAMESPACE_IDENTIFIER].styles) w[NAMESPACE_IDENTIFIER].styles = {};
  if (!w[NAMESPACE_IDENTIFIER].hooks) w[NAMESPACE_IDENTIFIER].hooks = {};
  if (!w[NAMESPACE_IDENTIFIER].shims) w[NAMESPACE_IDENTIFIER].shims = [];
  var namespace = w[NAMESPACE_IDENTIFIER];

  function normalizeIcons(icons) {
    return Object.keys(icons).reduce((acc, iconName) => {
      const icon = icons[iconName];
      const expanded = !!icon.icon;
      if (expanded) {
        acc[icon.iconName] = icon.icon;
      } else {
        acc[iconName] = icon;
      }
      return acc;
    }, {});
  }
  function defineIcons(prefix, icons) {
    let params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    const {
      skipHooks = false
    } = params;
    const normalized = normalizeIcons(icons);
    if (typeof namespace.hooks.addPack === 'function' && !skipHooks) {
      namespace.hooks.addPack(prefix, normalizeIcons(icons));
    } else {
      namespace.styles[prefix] = _objectSpread2(_objectSpread2({}, namespace.styles[prefix] || {}), normalized);
    }

    /**
     * Font Awesome 4 used the prefix of `fa` for all icons. With the introduction
     * of new styles we needed to differentiate between them. Prefix `fa` is now an alias
     * for `fas` so we'll ease the upgrade process for our users by automatically defining
     * this as well.
     */
    if (prefix === 'fas') {
      defineIcons('fa', icons);
    }
  }

  var icons = {
    
    "baseball": [512,512,[],"e068","M239.4 512h0C108.2 503.4 4.8 396.8 0 265.6C122.2 291.8 216.6 389.1 239.4 512h0zm35.8-.3h0C251.5 369.9 142.4 257.3 1.3 229.8C13.8 106.2 113 9.6 236.8 0c23.7 142.1 132.8 254.4 273.9 282.2c-12.8 123.5-112 220.2-235.5 229.4h0zM512 246.4h0C389.8 220.2 295.4 122.9 272.6 0C403.8 8.6 507.2 115.2 512 246.4h0z"],
    "basketball": [512,512,[],"e067","M360.6 489.6h0c23.7-73.3 17-130.9-20.2-170.9c-1.3-1.6-2.9-2.9-4.2-4.5c10.6-12.5 20.8-25.3 30.1-38.1c38.1 37.8 71.7 79.7 100.5 124.8c-26.6 38.7-63.4 69.1-106.2 88.3h0zm-.3-267.2h-.6s-4.8-4.8-4.8-4.8C311 179.5 263 146.9 211.5 120C170.2 98.2 126.7 81 81.9 68.5C128 25.3 188.5 1 251.5 0c24 54.1 55.7 105 93.4 150.4c10.9 12.8 22.7 25 35.2 36.2c-3.2 6.1-6.1 11.8-9 17c-3.5 6.4-7.4 12.8-11.2 18.9h0zM146.2 258.2c32.6-.3 65.3 2.9 97 9.9c23 4.8 44.8 13.1 65 24.6c11.2-13.1 22.1-26.6 32.3-41c-1.9-1.6-5.1-4.2-8-7c-41.6-36.2-87.4-67.2-136-92.8c-45.1-24-92.8-41.9-142.1-53.8c-35.2 44.8-54.4 100.5-54.4 157.8c0 5.8 .3 11.5 .6 17c42.6-8.3 85.8-13.1 129-14.4c5.8 0 11.2 0 16.6 0zm168.6 81.3l-1-.6c-5.1 5.4-10.9 11.2-16.3 16.6c-50.6 48.3-107.2 89.6-169.3 122.2c37.4 21.8 81.3 34.2 127.7 34.2c20.8 0 41.6-2.6 61.8-7.7l2.6-6.7c27.5-71.4 25.6-124.2-5.1-157.8h0zm-29.4-21.8c-42.9-19.5-89.9-28.5-137-25.9h-15c-42.9 1.3-86.1 6.1-128.3 14.7c11.8 59.5 44.5 111.7 89.9 148.5c65-32.3 124.5-73.9 177-123.8c4.8-4.8 9.3-9.3 13.4-13.4zm148.2-92.5s-1.3-.6-1.9-1h-.3s-.6-.6-.6-.6c-7.4-4.5-14.7-9.3-22.4-14.4c-1.3 2.2-2.6 4.8-3.8 7.4h-.3s-1 2.6-1 2.6c-5.4 9.3-10.9 18.6-16.6 27.5c37.4 36.8 70.7 77.1 100.2 120.6c11.5-24.3 19.2-50.2 23-76.8c1.9-13.4 2.6-26.6 1.9-39.4c-27.8-3.2-54.1-11.8-78.1-25.9zm13.8-30.4s1.6 1 2.6 1.6c18.2 10.6 38.1 17.6 58.9 20.8c-6.7-46.4-26.6-89.3-56-124.5c-6.7 29.8-16.6 58.6-29.4 86.4c7.7 5.8 15.7 10.9 24 15.7zM422.1 64.6v-3.2c-35.8-31-81-52.5-131.8-59.2c21.4 45.8 48.6 88.6 81 127.7c8 9 16 17.6 24 25.3c12.8-28.8 21.8-59.2 26.9-90.6z"],
    "boxing": [512,512,[],"e064","M157.4 512c-12.5 0-24-5.4-32.3-14.7L16.3 388.2c-14.7-12.2-20.2-32.3-13.8-50.6c9.3-21.8 23-41.6 40.3-57.6c18.9 41.6 45.4 79.4 77.8 111.7c32.6 32.3 70.1 58.9 111 79c-31.7 28.5-54.4 41-74.2 41zm101.1-66.9h0c-42.2-19.2-80.6-45.4-113.6-77.8c-33-33-58.9-72.3-76.5-115.5c-5.8-40.3-5.4-81.6 1.3-121.9c4.2-27.5 16-53.4 33.6-75.2c16.6-19.5 41.3-30.7 67.2-30.7c8 0 16 1 23.7 2.9c1 .3 1.9 .6 2.9 1c20.5 6.4 36.5 23 41.9 44.2c4.5 12.5 2.2 26.6-5.8 37.4c-9.9 8.6-23 12.8-36.2 11.5c-13.1 0-25.9-2.2-38.7-5.4c-9.3-1.9-18.6 3.8-20.8 13.4c-1.9 9 3.5 17.9 12.2 20.5c14.7 3.8 29.8 6.1 44.8 6.4c1 1.6 1.9 2.9 3.2 4.2l142.7 143.4c6.7 7 17.6 7 24.6 .6c7-6.7 7-17.6 .6-24.6c0 0-.3-.3-.6-.6L235.8 148.8c8.3-3.5 16-8.6 22.1-15c17.3-19.2 22.7-46.7 14.4-71c-4.5-15.4-12.5-29.8-23.4-41.6c7.7-7 17-12.5 26.9-16.3c10.9-2.9 21.8-4.2 33-4.5c54.1 0 95.4 36.8 129.9 71.4l2.6 2.6c22.1 19.8 40.6 42.9 56 68.2c15 29.1 18.6 62.7 9.9 94.4c-8.3 36.8-38.7 73.9-92.8 113.9c-48.3 33.9-98.6 64.3-151 91.5l-4.5 2.2h-.3s0 .6 0 .6h0z"],
    "cricket": [512,512,[],"e060","M256 512c-29.1 0-58.2-4.8-86.1-14.7c1.6-56 13.8-111.4 35.8-163.2c25.3-58.2 61.1-111.4 105.6-156.8c37.8-39 80-73 126.1-101.4c99.5 100.2 99.2 262.4-1.3 361.9c-48 47.7-113 74.2-180.5 74.2h0zM135.4 481.9h0c-10.9-5.8-21.1-12.2-31-19.5c-.6-57.6 10.2-115.2 32-168.3c24.6-58.6 60.8-111.4 106.2-155.8c41.6-41.3 88.6-76.2 139.8-104.6c9.3 5.4 18.6 11.2 27.2 17.9c-44.5 28.8-85.8 62.4-122.9 100.5c-47.7 48.6-86.1 105.3-113.3 167.7c-22.1 51.5-34.9 106.2-38.1 162.2h0zM69.8 431.7h0C-27.2 329-22.7 167 80.3 69.8C150.4 3.5 252.5-17.6 343.4 15.4c-45.1 27.2-87 59.8-124.5 97c-49 47.7-87.7 104.6-114.6 167.7c-20.2 48.3-31.7 99.8-34.2 152h0z"],
    "darts": [512,512,[],"e071","M2.9 512h0l75.2-100.8 25 25.3L2.9 512h0zm137.6-99.5h0l-37.4-37.8 98.2-89 25.6 30.4-86.1 96.3h0zm255-182.1h0l-76.8-17.3-12.8 14.4-21.1-17.6 15.7-14.1-17.6-78.7L399.4 0l92.2 20.8-187.8 188.8 86.1-10.9 90.9-91.5 10.9-86.4 20.5 92.5-116.2 116.8h0zM509.1 512h0l-100.2-75.5 25-25.3 75.2 100.8zM409 374.4l-37.4 37.8-178.2-199-76.8 17.3L0 113.3 20.5 20.8l10.9 86.4 90.9 91.5 86.1 10.9L20.5 20.8l92.2-20.8 116.5 117.1-17.6 79 197.4 178.6h0z"],
    "entertainm": [512,512,[],"e063","M91.8 512l33-70.7H62.1c-19.5 0-35.2-15.7-35.2-35.2V247c0-19.5 15.7-35.2 35.2-35.2h282.6c19.5 0 35.2 15.7 35.2 35.2v159c0 19.5-15.7 35.2-35.2 35.2H202.9l-33 70.7H91.8zM79.4 300.2H256V265H79.4v35.2zm406.1 88.3l-70.7-17.6v-88.3l70.7-17.6v123.5h0zM97 176.6c-34.2 0-61.8-27.5-61.8-61.8s27.5-61.8 61.8-61.8 61.8 27.5 61.8 61.8c0 9.3-1.9 18.2-6.1 26.6h67.8c-11.5-15.4-17.6-33.9-17.6-53.1c0-48.6 39.7-88.3 88.3-88.3s88.3 39.7 88.3 88.3-39.7 88.3-88.3 88.3H97zM238.4 88.3c0 29.1 23.7 53.1 53.1 53.1s53.1-23.7 53.1-53.1-23.7-53.1-53.1-53.1c-29.1 0-52.8 23.7-52.8 53.1h0zM70.7 114.9c0 14.7 11.8 26.6 26.6 26.6s26.6-11.8 26.6-26.6-11.8-26.6-26.6-26.6s-26.6 11.8-26.6 26.6h0z"],
    "esports": [512,512,[],"e061","M443.5 441.3h-1.9c-25.6 0-45.1-36.2-57-66.2c-8.3-21.4-15-43.8-19.8-66.2H146.9c-5.1 22.7-11.5 44.8-19.8 66.2c-11.8 30.1-31.4 66.2-57 66.2h-1.9c-17.6 1-34.6-6.1-46.4-19.2C7 404.8 0 376 0 333.8c1.3-37.4 4.8-74.6 10.6-111.7c1.6-10.2 2.9-19.5 3.8-28.2c2.2-35.2 16-68.8 39-95.7c17.9-18.2 42.6-28.2 67.8-27.5h269.1c25.6-.6 50.2 9.3 67.8 27.5c23 26.9 36.8 60.5 39 95.7c1.3 9 2.6 18.2 3.8 28.2h0c6.1 37.1 9.6 74.2 10.6 111.7c0 42.2-7 71-22.1 88.6c-11.8 13.1-28.8 20.2-46.4 19.2zm-73-317.8c-39 0-70.7 31.7-70.7 70.7s31.7 70.7 70.7 70.7 70.7-31.7 70.7-70.7-31.7-70.7-70.7-70.7zM88 176.6c-9.6 0-17.6 8-17.6 17.6s8 17.6 17.6 17.6h35.2V247c0 9.6 8 17.6 17.6 17.6s17.6-8 17.6-17.6v-35.2h35.2c9.6 0 17.6-8 17.6-17.6s-8-17.6-17.6-17.6h-35.2v-35.2c0-9.6-8-17.6-17.6-17.6s-17.6 8-17.6 17.6v35.2H88zm282.6 52.8c-19.5 0-35.2-15.7-35.2-35.2s15.7-35.2 35.2-35.2 35.2 15.7 35.2 35.2-15.7 35.2-35.2 35.2z"],
    "football": [512,512,[],"e070","M149.4 512h0c-37.8 0-75.2-5.8-111.4-17.6c-9.9-3.2-17.9-10.9-21.1-21.1C.6 420.8-4.2 365.1 3.8 310.4c19.2 40 45.1 76.2 76.2 107.8c36.2 36.2 78.1 66.6 123.5 89.6c-17.9 2.9-35.8 4.2-53.8 4.2zm111.4-17.6h0c-58.6-22.7-111.7-57-155.8-101.4c-39.7-40-69.8-89-87-143C54.1 138.2 142.4 50.9 254.7 16.3v1.3s0 0 0 0c16 3.2 31.7 8.3 46.7 15c37.1 16 71 38.7 99.8 67.2c43.8 45.1 76.2 100.2 93.4 160.6h0c-17.9 56-49 106.2-90.6 147.2c-40.3 39.4-89.3 69.1-143 86.4h0zM127 235.2c-4.8 0-9.3 1.9-12.5 5.4c-7 7-7 18.2 0 25.3l17.6 17.6c-7 9-14.4 18.6-21.8 28.8c-5.8 8-4.2 18.9 3.8 25c2.9 2.2 6.7 3.5 10.6 3.5c5.8 0 10.9-2.6 14.4-7.4c6.1-8.6 12.5-16.6 18.6-24.6l18.6 18.6c7 7 17.9 7 25 0c0 0 0 0 0 0c7-7 7-18.2 0-25.3l-21.1-21.4c5.1-6.1 9.9-11.8 14.7-17.3l16 16c6.7 7 17.9 7 25 0c0 0 0 0 0 0c7-7 7-18.2 0-25.3l-17-17c5.1-5.4 10.2-10.6 15.4-15.7l17.9 17.9c7 7 17.9 7 25 0c0 0 0 0 0 0c7-7 7-18.2 0-25.3l-17.3-17.6c5.4-5.1 11.2-10.2 17-15l21.8 22.1c7 7 17.9 7 25 0c0 0 0 0 0 0c7-7 7-18.2 0-25.3L304 158.7c9.9-7.7 20.2-15.4 30.1-22.7c8-5.8 9.9-16.6 4.5-25c-3.2-4.8-8.6-7.7-14.4-7.7c-3.5 0-7 1.3-10.2 3.2c-11.8 8.3-23.7 17.3-35.2 26.2l-16.6-16.6c-6.7-7-17.9-7-25 0c0 0 0 0 0 0c-7 7-7 18.2 0 25.3l14.4 14.4c-5.8 5.1-11.5 10.2-17 15.4L215.7 152c-7-7-17.9-7-25 0c0 0 0 0 0 0c-7 7-7 18.2 0 25.3l18.2 18.6c-4.8 5.1-9.9 10.2-15.4 15.7L174.4 192c-7-7-17.9-7-25 0c0 0 0 0 0 0c-7 7-7 18.2 0 25.3l20.2 20.5c-4.8 5.4-9.9 11.2-14.7 17.3l-15-15c-3.2-3.2-7.7-5.1-12.5-5.1zm382.1-38.7h0c-20.2-45.4-48.3-86.7-83.2-122.2c-30.4-30.1-65.6-54.4-104.6-72c48.6-5.4 97.9-1.3 144.6 12.8c14.7 4.5 26.2 16 30.7 30.7c14.7 49 18.9 100.2 12.5 150.7h0z"],
    "futsal": [512,512,[],"e06a","M256 512c-51.5 0-101.8-15.4-144.3-44.5c1.9-9.6 4.2-20.2 6.7-30.7c14.7 1.6 29.4 2.2 44.2 2.2c30.7 0 61.8-2.9 91.8-8.3l47 32c-7.4 17-16.6 33.3-27.2 48.6c-6.1 .3-12.2 .6-18.2 .6zm64.3-8h0l.6-1 1.6-2.6c6.7-12.8 12.2-24.6 15.4-32l69.4-46.4c12.5 1.9 25.3 3.2 38.1 2.9h3.8c-33.9 38.7-78.4 66.6-128.3 79.4h0zM80.6 442.6h0C48 411.8 24 373.1 10.9 329.9h22.4l52.5 89.6c-1.9 7.4-3.5 15.4-5.1 23h0zm242.9-7.7h0l-43.2-29.4 30.4-65.3h71.7l3.2 53.1-62.1 41.6h0zm-161-31.4c-15.7 0-31-1-46.7-2.6l-53.8-91.5c9.3-41 27.2-79.7 52.5-113.3l83.8-2.9 80.3 130.9-33.6 72.6c-27.5 4.8-55.4 7-83.2 7h0zm282.2-14.1c-8.3 0-16.3-.3-24.3-1.3l-3.5-57.9c22.4-31.4 39.7-65.6 51.5-102.4l43.5 19.5c0 2.9 0 6.1 0 9c0 46.1-12.5 91.5-36.2 131.2c-10.2 1.3-20.8 1.9-31 1.9h0zM391.7 305h-82.6l-79.7-129.9 39.4-66.9c9.9-1 30.1-2.6 55-2.6c18.6 0 36.5 1 53.4 2.6l61.4 97.3c-10.6 35.2-26.2 68.8-46.7 99.5h0zM29.4 294.7H2.9C1 281.9 0 268.8 0 256c0-49.3 14.1-97.6 41-138.9c2.6 0 5.4 0 8.3 0c13.1 0 26.2 1.9 39 5.4v49.6c-28.2 36.2-48 78.1-59.2 122.6h0zm478.1-84.8h0l-37.4-19.8-63-100.2 11.5-31.7c46.4 38.4 78.1 91.8 89 151.4h0zm-384-49.6h0v-41l65.9-42.9 44.2 21.4-35.2 60.2-74.6 2.6h0zM103.7 89.9h0c-11.8-3.5-24-5.8-36.2-7.4C101.1 46.1 144.6 20.2 192.6 8c-1.3 2.2-2.6 4.2-4.2 6.7c-7.7 12.8-13.4 24.6-16 30.4l-68.8 44.8h0zM264 73h0L210.9 47c2.9-5.8 5.8-10.6 8.3-14.7c16-27.5 25-31.4 25.9-31.7h0C249 0 252.5 0 256 0c47.4 0 93.8 13.1 134.1 37.8l-13.8 34.9c-17-1.6-34.9-2.2-53.1-2.2c-26.9 0-48.6 1.9-58.9 2.9h0z"],
    "golf": [512,512,[],"e06d","M256 512C114.6 512 0 397.4 0 256S114.6 0 256 0s256 114.6 256 256c0 67.8-26.9 133.1-74.9 181.1c-48 48.3-113 75.2-181.1 74.9zm0-79.4c-14.7 0-26.6 11.8-26.6 26.6s11.8 26.6 26.6 26.6 26.6-11.8 26.6-26.6-11.8-26.6-26.6-26.6zm97-26.6c-14.7 0-26.6 11.8-26.6 26.6s11.8 26.6 26.6 26.6 26.6-11.8 26.6-26.6-11.8-26.6-26.6-26.6zm-193.9 0c-14.7 0-26.6 11.8-26.6 26.6s11.8 26.6 26.6 26.6 26.6-11.8 26.6-26.6-11.8-26.6-26.6-26.6zm256-61.8c-14.7 0-26.6 11.8-26.6 26.6s11.8 26.6 26.6 26.6 26.6-11.8 26.6-26.6-11.8-26.6-26.6-26.6zM97 344.3c-14.7 0-26.6 11.8-26.6 26.6s11.8 26.6 26.6 26.6 26.6-11.8 26.6-26.6-11.8-26.6-26.6-26.6zm212.2-9c-14.7 0-26.6 11.8-26.6 26.6s11.8 26.6 26.6 26.6 26.6-11.8 26.6-26.6-11.8-26.6-26.6-26.6zm-106.2 0c-14.7 0-26.6 11.8-26.6 26.6s11.8 26.6 26.6 26.6 26.6-11.8 26.6-26.6-11.8-26.6-26.6-26.6zM450.2 256c-14.7 0-26.6 11.8-26.6 26.6s11.8 26.6 26.6 26.6 26.6-11.8 26.6-26.6-11.8-26.6-26.6-26.6zm-88.3 0c-14.7 0-26.6 11.8-26.6 26.6s11.8 26.6 26.6 26.6 26.6-11.8 26.6-26.6-11.8-26.6-26.6-26.6zm-211.8 0c-14.7 0-26.6 11.8-26.6 26.6s11.8 26.6 26.6 26.6 26.6-11.8 26.6-26.6-11.8-26.6-26.6-26.6zm-88.3 0c-14.7 0-26.6 11.8-26.6 26.6s11.8 26.6 26.6 26.6 26.6-11.8 26.6-26.6-11.8-26.6-26.6-26.6zm370.9-88.3c-14.7 0-26.6 11.8-26.6 26.6s11.8 26.6 26.6 26.6 26.6-11.8 26.6-26.6-11.8-26.6-26.6-26.6zm-353.3 0c-14.7 0-26.6 11.8-26.6 26.6s11.8 26.6 26.6 26.6 26.6-11.8 26.6-26.6-11.8-26.6-26.6-26.6z"],
    "handball": [512,512,[],"e05e","M494.7 163.2l-49.3-7.4-21.4 72 .6 2.6 19.2 98.9 53.8 13.1h0c20.8-58.2 19.5-121.6-2.6-179.2zm-420.5 23l-60.2-13.1C-4.5 226.9-5.1 287.4 16.3 345l43.5 8 29.8-87.7-15.4-79zM136 30.1C88.3 55.4 51.2 94.4 27.8 140.2l56.6 12.2 65.3-65.3-14.1-57zM342.7 15C286.7-5.1 225-5.1 169 15.4l14.7 59.8 85.1 14.7 82.6-28.2-8.3-46.4zM382.1 33l5.4 30.1 57 57 31.7 4.8h0c-22.7-38.4-55.4-70.1-93.8-91.8zM367.4 93.1l-70.4 24 21.8 75.8 73 18.6h0l21.8-72.3-46.1-46.1zm-105 31.4l-85.1-14.4-68.8 68.8 16 82.9 81.3 20.8 79-79-22.7-78.7zM391.7 248l-81.3-20.8-79 79 22.7 78.7 85.1 14.7 68.8-68.5-16.3-82.9zM197.8 316.5l-81.3-20.8-25 73.6 46.1 46.1 81.6-24.6-21.1-74.2zM118.1 446.1l-57-56.6-26.9-4.8c21.4 36.8 51.5 67.8 88 89.9h0s-4.2-28.5-4.2-28.5zm309.1-84.5l-68.5 68.5 12.2 55c6.4-3.2 13.1-7 19.5-10.9c39-24.3 71-58.6 92.5-99.2l-55.4-13.4zm-104 71l-81.3-14.1 .6 1.9-88.3 26.6 7 46.4c30.1 12.2 62.4 18.2 95 18.2c27.5 0 55-4.5 81.3-13.1l-14.1-65.9z"],
    "ice-hock": [512,512,[],"e06f","M96 445.8l-54.1-91.8c51.2 31.7 153.3 15.7 248.6-38.4S451.2 182.1 449 122.9L503 215c33.6 57.3-30.4 155.8-142.7 219.5c-52.2 31.4-111 49-171.8 51.5c-43.2 0-77.1-13.1-92.8-39.7zM9 297.6C-24.6 240.3 39 142.1 151.7 78.1S382.4 9 416 66.2 385.9 221.8 273.3 285.8c-52.2 31.4-111 49-171.8 51.5c-43.2 0-77.1-13.1-92.8-39.7H9z"],
    "ico-2chevronleft": [448,512,[],"e084","M184.6 414.4L26.2 256 184.6 97.6l45.1 45.1-113.3 113.3 113.3 113.3-45.1 45.1zm192 0L218.2 256 376.6 97.6 421.8 142.7 308.5 256 421.8 369.3 376.6 414.4z"],
    "ico-2chevronright": [448,512,[],"e085","M71.4 97.6L229.8 256 71.4 414.4 26.2 369.3 139.5 256 26.2 142.7l45.1-45.1zm192 0L421.8 256 263.4 414.4 218.2 369.3 331.5 256 218.2 142.7 263.4 97.6z"],
    "ico-account": [448,512,[],"e00c","M122.2 426.2c-30.7-21.8-55.7-50.9-72.6-84.5c-3.8-7.7-1-17.3 6.7-21.4c104.3-57.3 230.7-57.3 335.4 0c7.7 4.2 10.6 13.8 6.7 21.4c-17 33.6-41.9 62.7-72.6 84.5c-60.8 43.5-142.7 43.5-203.5 0h0zM86.1 341.1c37.8 76.2 129.9 107.5 206.1 69.8c30.4-15 54.7-39.4 69.8-69.8c-87-42.2-188.8-42.2-275.8 0zm47.4-186.6c0-49.9 40.6-90.6 90.6-90.6s90.6 40.6 90.6 90.6-40.6 90.6-90.6 90.6h0c-49.9 0-90.6-40.6-90.6-90.6zm32 0c0 32.3 26.2 58.6 58.6 58.6s58.6-26.2 58.6-58.6s-26.2-58.6-58.6-58.6s-58.6 26.2-58.6 58.6z"],
    "ico-activity": [448,512,[],"e007","M224 400h-1.3c-7-.6-12.8-5.4-14.4-12.5L154.2 153.6 89 284.5c-2.6 5.4-8.3 9-14.4 9h-64v-32h54.1l81-161.9c3.8-8 13.4-11.2 21.4-7c4.2 2.2 7.4 6.1 8.3 10.6l52.5 227.5 66.2-166.1c3.2-8.3 12.5-12.2 20.8-9c3.2 1.3 6.1 3.5 7.7 6.7l59.2 98.9h55v32h-64c-5.8 0-10.9-2.9-13.8-7.7l-47.4-79-73.3 183.4c-2.6 6.1-8.3 9.9-14.7 9.9z"],
    "ico-addfunds": [640,512,[],"e02f","M220.5 476.5C98.6 476.5 0 377.6 0 256C0 134.1 98.9 35.5 220.5 35.5c58.6 0 114.6 23.4 155.8 64.6c3.8 3.8 7.7 8 11.2 12.2c-14.1 10.9-26.6 23.7-37.4 38.1c-58.6-71.7-164.2-82.6-235.8-24.3c-71.7 58.6-82.6 164.2-24.3 235.8c58.6 71.7 164.2 82.6 235.8 24.3c6.1-4.8 11.8-10.2 17.3-16c9.6 15 21.4 28.5 34.9 40.3l-1.3 1.3h-.3c-41.3 41.9-97.3 65.3-155.8 65zm-13.8-91.8v-41.3h-50.6v-27.5h105.6v-46.1h-96.6c-7.7 0-13.8-6.1-13.8-13.8h0v-73.6c0-7.7 6.1-13.8 13.8-13.8h41.3v-41.3h27.5v41.3h50.6v27.5H178.9v46.1h96.6c7.7 0 13.8 6.1 13.8 13.8v73.6c0 7.7-6.1 13.8-13.8 13.8h-41.3v41.3h-27.5zM602.9 174.7c-51.8-55.7-139.2-58.9-194.9-6.7c-25.9 25.9-40.3 60.8-40.3 97.3c0 76.2 61.8 137.9 137.6 137.9c36.5 0 71.7-14.4 97.3-40.3c49.3-52.8 49.3-135 0-187.8zM574.4 282.6h-51.8v51.8H488v-51.8h-51.8V248H488v-51.8h34.6V248h51.8v34.6z"],
    "ico-arrowdown": [320,512,[],"e047","M1.6 285.1L46.7 240 128 321.3V81.6h64v239.7l81.3-81.3 45.4 45.1-158.4 158.4L1.6 285.1z"],
    "ico-arrowtop": [320,512,[],"e003","M136 445.4V258.6l-69.4 69.4-33.6-33.6 127-127 127 127-33.6 33.6-69.4-69.4v186.9h-47.7zM5.1 135.7V88h310.1v47.7H5.1z"],
    "ico-arrowup": [384,512,[],"e00f","M160 430.4V191l-81.3 81.3-45.4-45.1L192 68.5l158.4 158.4-45.1 45.1-81.3-81.3v239.7h-64z"],
    "ico-betslip": [512,512,[],"e01a","M464 0H48C30.4 0 16 14.4 16 32v480l120-64 120 64 120-64 120 64V32c0-17.6-14.4-32-32-32zM336 320H112v-48h224v48zm64-128H112v-48h288v48z"],
    "ico-betslipoff": [512,512,[],"e08e","M464 0H48C30.4 0 16 14.4 16 32v480l120-64 120 64 120-64 120 64V32c0-17.6-14.4-32-32-32zM448 432l-49.3-26.2-22.7-12.2-22.7 12.2-97.3 51.8-97.6-51.8-22.7-12.2-22.7 12.2-49.6 26.2V48h384v384zM336 320H112v-48h224v48zm64-128H112v-48h288v48z"],
    "ico-breadcrumb": [256,512,[],"e014","M235.5 261.1L54.4 441.9 20.5 408 167.7 260.8 20.5 113.9 54.4 80 201.6 226.9h0s33.9 33.9 33.9 33.9z"],
    "ico-burger": [512,512,[],"e02e","M0 128V64h512v64H0zM0 288v-64h512v64H0zM0 448v-64h512v64H0z"],
    "ico-call": [512,512,[],"e059","M158.7 353.6C77.1 272.6 31.7 162.6 32 48c0-5.4 0-10.6 0-16h127.7l32 128-62.4 41.6c37.1 80 101.1 144 180.8 181.1l41.6-62.4 128 32V480c-5.4 0-10.6 0-16 0c-114.6 0-224.6-45.1-305.6-126.4z"],
    "ico-chat": [512,512,[],"e05b","M512 480h0l-102.4-64H32c-17.6 0-32-14.4-32-32V64c0-17.6 14.4-32 32-32h448c17.6 0 32 14.4 32 32v416zM64 256h0v48h256v-48H64zm0-96h0v48h384v-48H64z"],
    "ico-check": [448,512,[],"e020","M178.9 430.1L9 260.2l67.8-67.8 101.8 101.8 192.3-192.3 67.8 67.8L178.9 430.1z"],
    "ico-chevrondown": [320,512,[],"e022","M318.4 208.6L160 367 1.6 208.6l45.1-45.1 113.3 113.3 113.3-113.3 45.1 45.1z"],
    "ico-chevronleft": [256,512,[],"e021","M184.6 422.7L26.2 264.3 184.6 105.9l45.1 45.1-113.3 113.3 113.3 113.3-45.1 45.1z"],
    "ico-chevronright": [256,512,[],"e04c","M71.4 89.3L229.8 247.7 71.4 406.1 26.2 361 139.5 247.7 26.2 134.7l45.1-45.1z"],
    "ico-chevronsright": [192,512,[],"e01b","M17 194.6l45.1-45.1 112.6 112.6-112.6 112.6-45.1-45.1 67.5-67.5L17 194.6z"],
    "ico-chevronup": [320,512,[],"e023","M1.6 318.4L160 160 318.4 318.4 273.3 363.5 160 250.2 46.7 363.5 1.6 318.4z"],
    "ico-clear": [384,512,[],"e051","M352 384H138.6L10.6 263.4l128-113.9H352c11.8 0 21.4 9.6 21.4 21.4v192c0 11.8-9.6 21.4-21.4 21.4zM249.3 289.3h0l34.6 34.6 22.7-22.7-34.6-34.6 34.6-34.6-22.7-22.7-34.6 34.6-34.6-34.6-22.7 22.7 34.6 34.6-34.6 34.6 22.7 22.7 34.6-34.6h0z"],
    "ico-cleartxt": [448,512,[],"e00d","M224 464c-114.9 0-208-93.1-208-208s93.1-208 208-208s208 93.1 208 208s-93.1 208-208 208zM156.2 143h0l-45.4 45.1 67.8 67.8-67.8 67.8 45.4 45.4 67.8-67.8 67.8 67.8 45.1-45.1-67.8-67.8 67.8-67.8-45.1-45.1-67.8 67.8-67.8-67.8z"],
    "ico-close": [320,512,[],"e028","M227.8 256l90.6 90.6-67.8 67.8-90.6-90.6-90.6 90.6L1.6 346.6 92.2 256 1.6 165.4l67.8-67.8 90.6 90.6 90.6-90.6 67.8 67.8-90.6 90.6z"],
    "ico-collapseall": [256,512,[],"e024","M128 372.2l-67.5 67.5-45.1-45.1 112.6-112.6 112.6 112.6-45.1 45.1-67.5-67.5zM15.4 112.6L60.5 67.5 128 135 195.5 67.5 240.6 112.6 128 225.3 15.4 112.6z"],
    "ico-communication": [448,512,[],"e005","M322.9 425.6l-105.3-66.6-59.2 45.4c-7 5.4-17 4.2-22.4-2.9c-2.2-2.9-3.5-6.4-3.2-9.9v-82.2s-1.3-1.9-1.6-3.2l-107.5-65c-7.7-4.5-9.9-14.4-5.4-22.1c1.9-3.2 5.1-5.8 8.6-6.7l384-127.7c5.4-1.9 11.8-.6 16 3.5s6.1 10.2 4.5 16L346.9 416c-1.3 4.8-4.8 9-9.6 10.6c-1.9 .6-3.8 1-5.8 1c-2.9 0-6.1-.6-8.6-2.2zm-97.6-99.5l96.3 60.8 66.9-246.1c-49.9 36.8-137.3 101.8-183.4 136l-26.6 19.8 43.2 27.8s2.6 1 3.8 1.6h0zm-60.5 33.3l23.7-18.2-23.7-15.4v33.6zM70.1 232l78.1 47.4c7.4-5.4 19.2-14.1 38.1-28.2l140.5-104L70.1 232z"],
    "ico-compass": [448,512,[],"e008","M16 256C16 141.1 109.1 48 224 48s208 93.1 208 208-93.1 208-208 208s-208-93.1-208-208zM245.4 410.6v20.2c33.6-4.2 65.3-17.9 91.2-39.4l-13.8-13.8 22.7-22.7 13.8 13.8c22.7-27.5 36.8-61.1 40-96.6h-37.1v-32h37.1c-3.2-35.5-17.3-69.1-40-96.6l-13.8 13.8-22.7-22.7 13.8-13.8C310.7 98.9 279 85.1 245.4 81v25.9h-42.6V81c-33.6 4.2-65.3 17.9-91.2 39.7l13.8 13.8-22.7 22.7-13.8-13.8c-22.7 27.2-36.8 61.1-40 96.6h37.1v32H49c3.2 35.5 17.3 69.1 40 96.6l13.8-13.8 22.7 22.7-13.8 13.8c25.9 21.8 57.6 35.5 91.2 39.7v-20.2h42.6zM134.1 349.1c-4.8-4.5-6.4-11.2-4.2-17.3L175 211.2c1.6-4.2 5.1-7.7 9.3-9.3L305 156.8c8.3-3.2 17.6 1 20.5 9.3c1.6 4.2 1.3 8.3-.3 12.5l-52.8 113c-1.6 3.5-4.5 6.1-7.7 7.7l-113 52.8c-5.8 2.9-12.8 1.6-17.6-2.9h0zm68.5-120l-28.8 77.1 72.3-33.9 33.9-72.3-77.1 29.1z"],
    "ico-date": [512,512,[],"e087","M456 48h-80V24h-48v24H184V24h-48v24H56c-22.1 0-40 17.9-40 40v352c0 22.1 17.9 40 40 40h400c22.1 0 40-17.9 40-40V88c0-22.1-17.9-40-40-40zM136 96v24h48V96h144v24h48V96h72v80H64V96h72zM64 432V224h384v208H64z"],
    "ico-dercollapse": [128,512,[],"e01c","M64 458.2l-43.2 43.2L.6 481.3l63.4-63.4 63.4 63.4-20.2 20.2-43.2-43.2zM.6 30.7L20.8 10.6 64 53.8l43.2-43.2L127.4 30.7 64 94.1 .6 30.7z"],
    "ico-derexpand": [128,512,[],"e01e","M.6 429.8l20.2-20.2 43.2 43.2 43.2-43.2 20.2 20.2-63.4 63.4L.6 429.8zM64 42.6L20.8 85.8 .6 65.9 64 2.6l63.4 63.4-20.2 20.2-43.2-43.2z"],
    "ico-detach": [384,512,[],"e072","M128 384H21.4V128h341.4v106.6h-42.6v-64H64v170.6h64v42.6zm42.6-106.6h192V384h-192V277.4z"],
    "ico-donut": [384,512,[],"e057","M192 448C86.1 448 0 361.9 0 256S86.1 64 192 64s192 86.1 192 192-86.1 192-192 192zm0-288c-52.8 0-96 43.2-96 96s43.2 96 96 96 96-43.2 96-96-43.2-96-96-96z"],
    "ico-edit": [512,512,[],"e029","M304 479.4v-72h192v72H304zm-288 0V332.5L316.2 32.6 463 179.5 162.9 479.4H16zM88 362.2v45.1h45.1L361 179.5 315.8 134.4 88 362.2z"],
    "ico-email": [512,512,[],"e05a","M480 448H32c-17.6 0-32-14.4-32-32V182.4l251.2 122.9c3.2 1.6 7 2.6 10.6 2.6c3.8 0 7.4-1 10.9-2.6L512 182.7v233.6c0 17.6-14.4 32-32 31.7zM261.4 256.6h0L0 128.6V96c0-17.6 14.4-32 32-32h448c17.6 0 32 14.4 32 32v32.6l-250.6 128h0z"],
    "ico-expandall": [256,512,[],"e025","M15.4 332.8l45.1-45.1 67.5 67.5 67.5-67.5 45.1 45.1-112.6 112.6L15.4 332.8zM128 152l-67.5 67.5-45.1-45.1L128 61.4l112.6 112.6-45.1 45.1-67.5-67.5z"],
    "ico-futures": [512,512,[],"e034","M18.9 512C8.3 512 0 503 0 492.2V157.4h512v334.7c0 10.9-8.6 19.8-18.9 19.8H18.9zm341.4-59.2H455v-39.4h-94.7v39.4zm-151.7 0h94.7v-39.4h-94.7v39.4zM57 452.8h94.7v-39.4H57v39.4zm303.4-98.2H455v-39.4h-94.7v39.4zm-151.7 0h94.7v-39.4h-94.7v39.4zM57 354.6h94.7v-39.4H57v39.4zm350.7-90.2h0l20.2 20.8 26.9-27.8-20.2-20.8 20.2-20.8-26.9-27.8-20.2 20.8-20.2-20.8-26.9 27.8 20.2 20.8-20.2 20.8 26.9 27.8 20.2-20.8h0zm-199-8.3h94.7v-39.4h-94.7V256zM57 256h94.7v-39.4H57V256zM512 118.1H0V19.8C0 9 8.6 0 18.9 0h473.9c10.6 0 18.9 9 18.9 19.8v98.6zM398.1 88.6h57V29.4h-57v59.2zM57 88.6h57V29.4H57v59.2z"],
    "ico-hide": [512,512,[],"e02a","M322.9 392.3c-75.2 18.9-154.9 5.1-219.2-38.1c-44.8-30.1-80.6-71.7-103.7-120.6c17-35.8 40.6-67.8 69.8-94.4L9.9 79.4l47.4-47 400.6 400.6-47.4 47.4-87.7-87.7zM76.5 233.6c17 25.9 38.7 48 64.3 65c16 10.9 33.6 19.2 52.2 25.3c-32.6-24.6-49.3-65-43.8-105.6l-31.7-31.7c-15.7 13.8-29.4 29.8-40.6 47h0zM441.9 328l-47.4-47.4c15.7-13.8 29.4-29.4 41-47c-17-25.9-38.7-48-64.3-65c-16-10.6-33.6-19.2-51.8-25.3c28.2 21.4 44.8 54.7 44.8 90.2c0 5.1-.3 10.2-1 15.4L189.1 75.2c75.2-18.9 154.9-5.1 219.2 38.1c44.8 30.1 80.6 71.7 103.7 120.6c-17 35.8-40.6 67.8-70.1 94.4h0z"],
    "ico-home": [512,512,[],"e019","M0 464h512v48H0v-48zM256 0L0 176v240h192V304h128v112h192V176L256 0z"],
    "ico-homeoff": [512,512,[],"e08c","M0 464h512v48H0v-48zM512 176v240H320V304H192v112H0V176L256 0l256 176zm-48 25.3l-208-143-208 143V368h96V256h224v112h96V201.3z"],
    "ico-inbox": [448,512,[],"e052","M32 421.4c-9 0-16-7-16-16V106.6c0-9 7-16 16-16h384c9 0 16 7 16 16v298.6c0 9-7 16-16 16H32zm16-32h352V203.5L233.9 332.8c-5.8 4.5-13.8 4.5-19.5 0L48 203.5v185.9zm176-89.6l176-137v-40.3H48v40.3l176 137z"],
    "ico-info": [512,512,[],"e011","M256 512C114.6 512 0 397.4 0 256S114.6 0 256 0s256 114.6 256 256s-114.6 256-256 256zM224 224v192h64V224h-64zm0-128v64h64V96h-64z"],
    "ico-leagues": [512,512,[],"e058","M64 96h48v48H64V96zm96 176h288v-48H160v48zm-96 0h48v-48H64v48zm0 128h48v-48H64v48zm96 0h288v-48H160v48zm0-304v48h288V96H160z"],
    "ico-legal": [448,512,[],"e048","M53.4 434.6v-32H208v-256h-88l54.7 131.2c2.9 7 .6 15-5.8 19.2c-22.1 13.4-47.4 20.5-73 20.2c-25.9 .3-51.2-6.7-73.3-20.2c-6.1-4.2-8.3-12.2-5.4-19.2L81 125.1c1.9-5.8 7-9.6 13.1-10.6H208V77.1h32v37.4h113.9c6.1 .6 11.2 4.8 13.1 10.6l63.7 152.6c2.9 7 .6 15-5.8 19.2c-22.1 13.4-47.4 20.5-73 20.2c-25.9 .3-51.2-6.7-73.3-20.2c-6.1-4.2-8.3-12.2-5.4-19.2L328 146.6h-88v256h154.6v32H53.4zm255-157.8c27.8 11.5 59.2 11.5 87 0L352 172.5 308.5 276.8zm-256 0c27.8 11.5 59.2 11.5 87 0L96 172.5 52.5 276.8z"],
    "ico-live": [512,512,[],"e033","M256 0C114.6 0 0 114.6 0 256s114.6 256 256 256c67.8 0 133.1-26.9 181.1-74.9s74.9-113.3 74.9-181.1C512 114.6 397.4 0 256 0zM121.3 396.5c-42.6-32-70.1-82.9-70.1-140.5s27.5-108.5 70.1-140.5l29.4 27.8C114.9 168 91.2 209.3 91.2 256s23.7 88 59.5 112.6l-29.4 27.8zm83.5-79.7L175.4 345c-26.9-20.5-44.2-52.8-44.2-89s17.3-68.5 44.2-89l29.4 28.2c-20.2 12.8-33.6 35.2-33.6 60.8s13.4 48 33.6 60.8zM256 304c-26.6 0-48-21.4-48-48s21.4-48 48-48 48 21.4 48 48-21.4 48-48 48zm80.6 41l-29.4-28.2c20.2-12.8 33.6-35.2 33.6-60.8s-13.4-48-33.6-60.8l29.4-28.2c26.9 20.5 44.2 52.8 44.2 89s-17.3 68.5-44.2 89zm54.1 51.5l-29.4-27.8c35.8-24.6 59.5-65.9 59.5-112.6s-23.7-88-59.5-112.6l29.4-27.8c42.6 32 70.1 82.9 70.1 140.5s-27.5 108.5-70.1 140.5z"],
    "ico-live1": [512,512,[],"e088","M256 512C114.6 512 0 397.4 0 256S114.6 0 256 0s256 114.6 256 256c0 67.8-26.9 133.1-74.9 181.1s-113 75.2-181.1 74.9zM203.2 137.6c-9.6 0-17.6 8-17.6 17.6v201c0 9.6 8 17.6 17.6 17.6c3.2 0 6.4-1 9.3-2.6l161-100.5c8.3-5.1 10.9-16 5.4-24.3c-1.3-2.2-3.2-4.2-5.4-5.4l-161-100.5c-2.9-1.6-6.1-2.6-9.3-2.6z"],
    "ico-locationoff": [512,512,[],"e00e","M273 512c-1.9-2.2-192-215.7-192-320c0-17.9 2.6-35.5 7.4-52.8L24 74.9 57.9 41 252.2 235.2h0l24 24 74.6 74.6h0l34.6 34.6h0l102.4 102.4-33.9 33.9-97-97c-42.2 57-81.9 101.8-84.2 104h0zM129 192c0 15.4 8.3 62.4 86.4 171.2c17.3 24 36.8 49.3 57.6 74.9c17.9-21.8 34.6-43.5 49.9-64L223 274.2c-13.1-8-24-18.9-32-32l-61.4-61.4c-.3 3.8-.6 7.4-.6 11.5h0zM412.2 327l-34.9-34.9c21.4-29.8 34.9-64 40-100.2c0-79.7-64.6-144-144-144c-37.1 0-73 14.4-99.8 40.3l-33.9-33.9c76.2-73.9 197.4-72.3 271.4 3.8c34.9 35.8 54.4 83.8 54.4 133.8c-6.1 48.6-24.3 95.4-52.8 135.4h0zm-69.4-69.1L308.8 224c17.6-19.8 15.7-50.2-4.5-67.8c-18.2-16-45.4-16-63.4 0L207 122.2c38.1-36.8 98.9-35.8 135.7 2.2c36.2 37.1 36.2 96.3 0 133.4h0z"],
    "ico-lock": [512,512,[],"e013","M48 504c-13.1 0-24-10.6-24-24h0V224c0-13.1 10.9-24 24-24h40v-24C88 83.2 163.2 8 256 8s168 75.2 168 168v24h40c13.1 0 24 10.9 24 24v256c0 13.1-10.9 24-24 24H48zm24-48h368V248H72v208zM376 200v-24c0-66.2-53.8-120-120-120s-120 53.8-120 120v24h240zM232 384v-64c0-13.1 10.9-24 24-24s24 10.9 24 24v64c0 13.1-10.9 24-24 24s-24-10.9-24-24z"],
    "ico-minus": [384,512,[],"e027","M368 304H16v-96h352v96z"],
    "ico-multibet": [512,512,[],"e030","M194.6 467.8c-4.5 0-9-.6-13.4-1.3c-4.5-1-9-2.2-13.4-3.8c-4.2-1.6-8-3.5-11.8-5.8c-3.2-1.9-6.1-4.5-8.6-7L3.5 277.8c-1.9-1.9-2.9-4.2-3.2-7c0-1.9 .6-4.2 1.9-5.4c1.9-1.9 4.2-3.2 6.7-3.8c3.5-1 7-1.3 10.6-1.3h11.8l98.6 117.1c2.6 2.9 5.4 5.1 8.6 7c3.8 2.2 7.7 4.2 11.8 5.8c4.5 1.6 9 2.9 13.4 3.8s9 1.3 13.4 1.3h0l284.2-1 47 53.8c1.9 1.9 3.2 4.5 3.8 7c.3 1.9 0 4.2-1.6 5.8c-1.6 1.9-3.8 3.2-6.4 3.8c-3.5 1-7 1.6-10.9 1.6l-298.2 1h0zm0-107.8c-4.5 0-9-.6-13.4-1.3c-4.5-1-9-2.2-13.4-3.8c-4.2-1.6-8-3.5-11.8-5.8c-3.2-1.9-6.1-4.5-8.6-7L3.5 169.9c-1.9-1.9-2.9-4.2-3.2-7c0-1.9 .6-4.2 1.9-5.4c1.9-1.9 4.2-3.2 6.7-3.8c3.5-1 7-1.3 10.6-1.3h11.8l98.6 117.1c2.6 2.9 5.4 5.1 8.6 7c3.8 2.2 7.7 4.2 11.8 5.8c4.5 1.6 9 2.9 13.4 3.8s9 1.3 13.4 1.3h0l284.2-1 47 53.8c1.9 1.9 3.2 4.5 3.8 7c.3 1.9 0 4.2-1.6 5.8c-1.6 1.9-3.8 3.2-6.4 3.8c-3.5 1-7 1.6-10.9 1.6l-298.2 1h0zM181.1 250.2c-4.5-1-9-2.2-13.4-3.8c-4.2-1.6-8-3.5-11.8-5.8c-3.2-1.9-6.1-4.5-8.6-7L3.5 61.8c-1.9-1.9-2.9-4.2-3.2-7c0-1.9 .6-4.2 1.9-5.4c1.9-1.9 4.2-3.2 6.7-3.8c3.5-1 7.4-1.3 10.9-1.3l293.8 1.6c4.5 0 8.6 .6 13.1 1.3c4.5 1 8.6 2.2 13.1 3.8c3.8 1.6 7.7 3.5 11.5 5.4c3.2 1.9 5.8 4.2 8.3 6.7l148.5 169.3c1.9 1.9 3.2 4.5 3.8 7c.3 1.9 0 4.2-1.6 5.8c-1.6 1.9-3.8 3.2-6.4 3.8c-3.5 1-7 1.6-10.9 1.6l-298.2 1h0c-4.5 0-9-.3-13.4-1.3h0z"],
    "ico-mute": [384,512,[],"e015","M163.5 384l-53.4-64H35.5c-11.8 0-21.4-9.6-21.4-21.4v-85.4c0-11.8 9.6-21.4 21.4-21.4h74.6l53.4-64H185v256h-21.4zm138.2-98.2l-37.8 37.8-30.1-30.1 37.8-37.8-37.8-37.8 30.1-30.1 37.8 37.8 37.8-37.8 30.1 30.1-37.8 37.8 37.8 37.8-30.1 30.1-37.8-37.8z"],
    "ico-mybets": [512,512,[],"e018","M256 512C114.6 512 0 397.4 0 256S114.6 0 256 0s256 114.6 256 256s-114.6 256-256 256zM88 232v48h192V120h-48v112H88z"],
    "ico-mybetsoff": [512,512,[],"e08d","M256 0C114.6 0 0 114.6 0 256s114.6 256 256 256s256-114.6 256-256S397.4 0 256 0zm0 464c-114.6 0-208-93.4-208-208S141.4 48 256 48s208 93.4 208 208s-93.4 208-208 208zM232 120h48v160H88v-48h144V120z"],
    "ico-pause": [256,512,[],"e017","M170.6 384c-11.8 0-21.4-9.6-21.4-21.4V149.1c0-11.8 9.6-21.4 21.4-21.4h42.6c11.8 0 21.4 9.6 21.4 21.4v213.4c0 11.8-9.6 21.4-21.4 21.4h-42.6zm-128 0c-11.8 0-21.4-9.6-21.4-21.4V149.1c0-11.8 9.6-21.4 21.4-21.4h42.6c11.8 0 21.4 9.6 21.4 21.4v213.4c0 11.8-9.6 21.4-21.4 21.4H42.6z"],
    "ico-pin": [512,512,[],"e04e","M174.4 381.8l-113 113-44.2-44.2 113-113L16 223.4l154.6-31.7L278.7 16 496 233.3 320.6 341.4 289 496 174.7 381.8zM209.3 247l-67.5 14.1 109.1 109.1 14.1-67.5 131.2-81-105.9-105.9-81 131.5z"],
    "ico-play": [256,512,[],"e016","M226.2 238.1c9.9 6.4 12.8 19.5 6.4 29.4c-1.6 2.6-3.8 4.8-6.4 6.4L52.8 384.3c-9.9 6.4-23 3.5-29.4-6.4c-2.2-3.5-3.2-7.4-3.2-11.5V145.6c0-11.8 9.6-21.4 21.4-21.4c4.2 0 8 1.3 11.5 3.2l173.4 110.4z"],
    "ico-playerprotection": [448,512,[],"e009","M324.2 159.7l23.4 21.8-138.6 149.4c-2.9 3.2-7.4 5.1-11.8 5.1c-3.2 0-6.7-1-9.3-2.9l-74.6-53.4 18.6-25.9 63.4 45.1 129-138.9zm66.6 162.9c-40.6 98.2-157.1 144-162.2 145.9c-2.9 1.3-6.4 1.3-9.3 0c-4.8-1.9-121.6-47.7-162.2-145.9c-39.7-96.6-20.8-218.9-19.8-224.3c1-7 6.7-12.5 14.1-12.8h345.6c7 0 13.1 5.8 14.1 12.8c1 5.1 19.8 127.7-20.2 224.3zm-6.4-206.1H63.7c-3.5 33-9.6 122.6 19.5 193.3c31.4 75.8 119.4 118.1 140.8 127.4c19.5-8.6 38.1-18.9 55.4-30.7c37.1-23.4 66.6-57 85.4-96.6c29.1-70.7 23-160.3 19.5-193.3z"],
    "ico-plus": [384,512,[],"e026","M368 304H240v128h-96V304H16v-96h128V80h96v128h128v96z"],
    "ico-privacy": [448,512,[],"e010","M373.4 128H288v-21.4c0-23.7-19.2-42.6-42.6-42.6h-42.6c-23.7 0-42.6 19.2-42.6 42.6V128H74.9c-23.7 0-42.6 19.2-42.6 42.6v234.6c0 23.7 19.2 42.6 42.6 42.6h298.6c23.7 0 42.6-19.2 42.6-42.6V170.6c0-23.7-19.2-42.6-42.6-42.6zM192 106.6c0-5.8 4.8-10.6 10.6-10.6h42.6c5.8 0 10.6 4.8 10.6 10.6V128h-64v-21.4zM74.6 160h298.6c5.8 0 10.6 4.8 10.6 10.6V192L313 262.7c-49.3 49.3-129.3 49.3-178.6 0L63.7 192v-21.4c0-5.8 4.8-10.6 10.6-10.6zM373.4 416H74.6c-5.8 0-10.6-4.8-10.6-10.6v-168l48 48c61.8 61.8 161.9 61.8 223.7 0l48-48v168c0 5.8-4.8 10.6-10.6 10.6z"],
    "ico-refresh": [512,512,[],"e02d","M172.8 480v-67.2h188.5V227.5l-37.4 37.8-47-47.7 117.4-118.7 117.4 118.7-47 47.7-37.4-37.8v218.9c0 18.6-15 33.6-33.3 33.6H172.5zM0 294.4l47-47.4 37.4 37.8V65.6c0-18.6 15-33.6 33.3-33.6h221.8v67.2H151v185.3l37.4-37.8 47 47.4-117.4 118.7-117.8-118.7z"],
    "ico-rules": [448,512,[],"e049","M362.6 90.6H85.4c-17.6 0-32 14.4-32 32v288c0 17.6 14.4 32 32 32h277.4c17.6 0 32-14.4 32-32v-288c0-17.6-14.4-32-32-32zm0 320H85.4v-288h277.4v288zM287.7 177.3L265 154.6l-56.3 56.3L183 185.3 160.3 208l48.3 48.3 79-79zm0 128L265 282.6l-56.3 56.3L183 313.3 160.3 336l48.3 48.3 79-79z"],
    "ico-search": [512,512,[],"e02b","M339.8 388.2c-92.5 65.6-220.5 43.8-286.1-48.3s-43.8-220.2 48.6-285.8c92.2-65.9 220.2-44.2 285.8 48.3c50.6 71 50.6 166.4 0 237.8L496 448 447.7 496.3 339.8 388.5zM84.5 221.1c0 75.5 61.1 136.6 136.6 136.6s136.6-61.1 136.6-136.6S296.6 84.5 221.1 84.5h0c-75.5 0-136.6 61.1-136.6 136.6h0z"],
    "ico-security": [448,512,[],"e006","M160 469.4c-70.7 0-128-57.3-128-128V234.9c0-23.7 19.2-42.6 42.6-42.6H96v-21.4c0-70.7 57.3-128 128-128s128 57.3 128 128v21.4h21.4c23.7 0 42.6 19.2 42.6 42.6v106.6c0 70.7-57.3 128-128 128H160zM64 234.6v106.6c0 53.1 42.9 96 96 96h128c53.1 0 96-42.9 96-96V234.6c0-5.8-4.8-10.6-10.6-10.6H74.6c-5.8 0-10.6 4.8-10.6 10.6zm64-64V192h192v-21.4c0-53.1-42.9-96-96-96s-96 42.9-96 96zM208 384V277.4h32V384h-32z"],
    "ico-settings": [448,512,[],"e001","M43.8 241.6c47.4 30.1 66.6 89.6 46.1 141.8c16.6 18.6 37.1 33.3 59.8 43.5c43.2-35.5 105.6-35.5 149.1 0c22.7-10.2 42.9-25 59.8-43.5c-20.5-52.2-1.3-111.4 46.1-141.8c-2.6-24.6-10.6-48.6-23-70.1c-56 3.5-106.6-33.3-120.6-87.7c-24.3-5.1-49.3-5.1-73.6 0c-14.1 54.4-64.6 90.9-120.6 87.7c-12.5 21.4-20.2 45.4-22.7 70.1M320 261.4c0 53.1-42.9 96-96 96s-96-42.9-96-96 42.9-96 96-96 96 42.9 96 96m-309.4-1h0c0-44.5 14.1-88 40.3-124.2c45.4 12.5 92.5-14.1 105-59.5c1.6-6.1 2.6-12.5 2.9-18.9c42.6-13.4 88-13.4 130.6 0c2.2 47 41.9 83.5 89.3 81.3c6.4 0 12.5-1.3 18.6-2.9c26.2 36.2 40.3 79.7 40.3 124.2c-44.2 16.6-66.2 65.9-49.6 110.1c2.2 5.8 5.1 11.5 8.6 16.6c-26.2 36.2-63 63-105.6 76.8c-29.4-36.8-83.2-42.9-120-13.4c-4.8 3.8-9.3 8.3-13.4 13.4c-42.2-13.8-79.4-40.6-105.6-76.8c25.9-39.4 15-92.2-24.3-118.1c-5.1-3.5-10.9-6.4-16.6-8.6h0zm277.4 1c0-35.2-28.8-64-64-64s-64 28.8-64 64 28.8 64 64 64s64-28.5 64-64c0 0 0 0 0 0h0z"],
    "ico-show": [512,512,[],"e04b","M256 67.2c-110.4 1.3-210.2 66.6-256 167c45.8 100.5 145.6 165.4 256 167c110.4-1.3 210.2-66.6 256-167c-45.8-100.5-145.6-165.4-256-167zm0 211.5c-23.7-1-42.2-20.8-41.3-44.5c-1-23.7 17.6-43.5 41.3-44.5c23.7 1 42.2 20.8 41.3 44.5c1 23.7-17.6 43.5-41.3 44.5zM76.5 234.2c17-25.9 38.7-48 64.3-65c16.3-10.9 33.9-19.2 52.5-25.3c-27.8 20.2-45.8 53.1-45.4 90.2c-.6 37.1 17.6 70.1 45.4 90.2c-18.2-5.8-36.2-14.1-52.5-25.3c-25.6-17.3-47.4-39.4-64.3-65zm294.7 65c-16.6 11.2-34.2 19.5-52.5 25.3c27.8-20.2 46.1-53.1 45.4-90.2c.6-37.1-17.6-70.1-45.4-90.2c18.6 5.8 36.2 14.4 52.5 25.3c25.6 17.3 47.4 39.4 64.3 65c-17 25.9-38.7 48-64.3 65z"],
    "ico-signout": [448,512,[],"e00a","M42.6 432c-9 0-16-7-16-16h0V96c0-9 7-16 16-16h192v32H58.6v288h176v32H42.6zM287 351l79.4-79H213.1v-32h153.3l-79.7-79 22.4-22.7 107.2 106.2h0c6.4 6.1 6.4 16.3 0 22.7h0S309.1 373.4 309.1 373.4L286.7 351z"],
    "ico-star": [384,512,[],"e01d","M192 142.4l-32 71.7-74.6 9.9 55 54.1-14.1 77.8 65.9-38.1 65.9 38.1-14.1-77.8 55-54.1-74.6-9.9-32-71.7M192 64l54.1 120.6 121.9 16-89.3 88.3 23.4 129.3-109.8-63.7-109.8 63.7 23.4-129.3L16.3 200.6l121.9-16 54.1-120.6z"],
    "ico-starsolid": [384,512,[],"e01f","M192 64l54.1 120.6 121.9 16-89.3 88.3 23.4 129.3-109.8-63.7-109.8 63.7 23.4-129.3L16.3 200.6l121.9-16 54.1-120.6z"],
    "ico-success": [512,512,[],"e012","M256 0C114.9 0 0 114.9 0 256s114.9 256 256 256 256-114.9 256-256S397.1 0 256 0zm0 464c-114.6 0-208-93.4-208-208S141.4 48 256 48s208 93.4 208 208-93.4 208-208 208zM359.4 157.8l33.9 33.9-162.6 162.6c-4.8 4.8-10.9 7-17 7c-5.8 0-11.5-1.9-16-6.1l-78.1-69.1 32-35.8 61.1 54.1 146.6-146.6z"],
    "ico-support": [512,512,[],"e053","M205.4 506.6L192.3 449h100.2v23c40-7.4 76.8-26.9 105.6-55.7c6.7-6.7 12.8-13.8 18.6-21.4l37.8 9.9c-9 13.4-19.2 25.9-30.4 37.4c-44.5 44.8-105 69.8-168 69.8c-17 0-33.9-1.9-50.6-5.4zM402.2 341.4V219.2h70.1C452.5 99.5 339.2 18.9 219.8 39C127.4 54.4 55 126.7 39.7 219.2h70.1v121.6L26.2 369c-62.4-127-9.9-280.3 117.1-342.7s280.3-9.9 342.4 117.1c34.9 71.4 34.9 154.6 0 225.9l-83.5-27.5z"],
    "ico-time": [512,512,[],"e086","M256 0C114.9 0 0 114.9 0 256s114.9 256 256 256 256-114.9 256-256S397.1 0 256 0zm0 464c-114.6 0-208-93.4-208-208S141.4 48 256 48s208 93.4 208 208-93.4 208-208 208zm24-224h104v48H232V136h48v104z"],
    "ico-transactions": [448,512,[],"e00b","M32 453.4c-9 0-16-7-16-16h0V96c0-9 7-16 16-16h80V53.4h32V80h160V53.4h32V80h80c9 0 16 7 16 16v341.4c0 9-7 16-16 16H32zm16-32h352V112h-64v26.6h-32V112H144v26.6h-32V112H48v309.4zM208 384v-37.4h-48v-32h90.6v-32h-69.4c-9 0-16-7-16-16v-64c0-9 7-16 16-16h26.6v-37.4h32v37.4h48v32h-90.6v32h69.4c9 0 16 7 16 16h0v64c0 9-7 16-16 16H240V384h-32z"],
    "ico-trash": [512,512,[],"e02c","M59.5 496V125.1H16V59.5h207.4V16H289v43.5h207.4v65.6h-43.5V496H59.5zm65.6-65.6h261.8V136H125.1v294.4zm152.6-43.5V179.5h65.6v207.4h-65.6zm-109.1 0V179.5h65.6v207.4h-65.6z"],
    "ico-unpin": [512,512,[],"e002","M288.6 496l-114.2-114.2-113 113-44.2-44.2 113-113L16.3 223.4l99.5-20.5L29.1 116.2l44.2-44.2 373.8 373.8-44.2 44.2-93.8-93.8-20.5 99.5h0zM141.8 261.1l109.1 109.1 5.4-26.6-88-88-26.6 5.4zm243.8 40.3l-45.1-45.1 56-34.6-105.9-105.9-34.6 56-45.1-45.1 68.2-110.4 217.3 217.3-110.4 68.2h0z"],
    "ico-upcoming": [512,512,[],"e031","M17.6 512C8 512 0 503.7 0 493.8V164.5h512v329.3c0 10.2-8 18.2-17.6 18.2H17.6zM512 128H0V18.2C0 8 8 0 17.6 0h476.8C504 0 512 8.3 512 18.2V128zM406.1 91.5h53.1V36.8h-53.1v54.7zm-353 0h53.1V36.8H53.1v54.7z"],
    "ico-user": [512,512,[],"e03c","M256 512C114.6 512 0 397.4 0 256S114.6 0 256 0s256 114.6 256 256c0 67.8-26.9 133.1-74.9 181.1c-48 48.3-113 75.2-181.1 74.9zm0-202.9c-64.6 0-127.7 20.8-179.5 59.5c62.1 99.2 193 129.3 292.2 66.9c27.2-17 49.9-40 66.9-66.9c-51.8-38.7-114.9-59.8-179.5-59.5zM256 87c-48.6 0-88.3 39.7-88.3 88.3s39.7 88.3 88.3 88.3 88.3-39.7 88.3-88.3s-39.7-88.3-88.3-88.3z"],
    "ico-useroff": [512,512,[],"e08b","M256 0C114.6 0 0 114.6 0 256s114.6 256 256 256h.6c67.5 0 132.5-26.9 180.2-74.9c48-48 74.9-113.3 74.9-181.1C512 114.6 397.4 0 256 0zm0 464c-56 0-107.2-22.4-144.6-58.9c40.3-30.7 90.2-49 144.6-49s104.6 18.6 144.6 49C362.2 442.6 310.1 464 256 464zm176.3-97.6c-50.9-37.1-112-57.3-174.7-57.3c-.6 0-1 0-1.6 0s-1 0-1.6 0c-62.7 0-123.8 20.2-174.7 57.3c-20.2-32-32-69.8-32-110.4c0-55.7 21.8-107.8 60.8-147.2S200 48 255.7 48c114.6 0 208 93.4 208 208c0 39.7-11.2 77.4-31.7 110.4zM256 87c-48.6 0-88.3 39.7-88.3 88.3s39.7 88.3 88.3 88.3 88.3-39.7 88.3-88.3s-39.7-88.3-88.3-88.3zm0 128.6c-22.1 0-40.3-17.9-40.3-40.3S233.6 135 256 135c22.1 0 40.3 18.2 40.3 40.3s-17.9 40.3-40.3 40.3z"],
    "ico-video": [192,512,[],"e04a","M176.3 242.2c7.7 4.5 10.2 14.4 5.8 21.8c-1.3 2.2-3.5 4.5-5.8 5.8L32 353.9c-7.7 4.5-17.3 1.9-21.8-5.8c-1.3-2.6-2.2-5.1-2.2-8V171.8c0-9 7-16 16-16c2.9 0 5.8 .6 8 2.2l144.3 84.2z"],
    "ico-volume": [384,512,[],"e055","M170.6 384l-53.4-64H42.6c-11.8 0-21.4-9.6-21.4-21.4v-85.4c0-11.8 9.6-21.4 21.4-21.4h74.6l53.4-64H192v256h-21.4zm64-42.6c47 0 85.4-38.1 85.4-85.4s-38.1-85.4-85.4-85.4V128c70.7 0 128 57.3 128 128s-57.3 128-128 128v-42.6zm0-128c23.7 0 42.6 19.2 42.6 42.6s-19.2 42.6-42.6 42.6v-85.4z"],
    "ico-wallet": [448,512,[],"e054","M103 432c-42.2 0-76.2-33.9-76.5-76.2V149.1c0-38.4 31-69.1 69.4-69.4h309.4c9 0 16 7 16 16v320c0 9-7 16-16 16H103zM58.6 355.8c0 24.3 20.2 44.2 44.5 43.8h286.1v-42.6h-58.6c-26.6 0-48-21.4-48-48s21.4-48 48-48h58.6v-42.6H96c-13.1 0-26.2-3.8-37.4-10.9v148.2zm256-46.4c0 9 7 16 16 16h58.6v-32h-58.6c-9 0-16 7-16 16h0s0 0 0 0zM96 186.6h293.4V112H103c-23 0-42.2 17.6-44.5 40.6c1.6 19.2 17.9 34.2 37.1 34.2z"],
    "ico-warning": [512,512,[],"e03d","M256 0C114.9 0 0 114.9 0 256s114.9 256 256 256 256-114.9 256-256S397.1 0 256 0zm0 464c-114.6 0-208-93.4-208-208S141.4 48 256 48s208 93.4 208 208-93.4 208-208 208zM232 128h48v160h-48V128zm0 208h48v64h-48v-64z"],
    "ico-x-point": [512,512,[],"e081","M496 385.9h-46.1l-83.8-83.8-46.1-46.1 46.1-46.1 83.8-83.8H496v46.1L412.2 256 496 339.8v46.1zM258.2 192l-46.1-46.1L82.2 16.3h46.1s46.1 0 46.1 0l83.8 83.8 84.2-83.8H433S304.3 146.6 304.3 146.6l-46.1 46.1zM192 255.7l-46.1 46.1-83.8 83.8H16v-46.1l83.8-83.8L16 171.5v-46.1h46.1l83.8 83.8 46.1 46.1zm66.2 64l46.1 46.1 130.2 130.2h-92.2l-83.8-83.8-83.8 83.8H82.6l130.2-130.2 46.1-46.1z"],
    "ilu-acc-blocked": [512,512,[],"e074","M144 300.8c-32-64-16-160-16-160l128-16 128 16s16 96-16 160-112 96-112 96s-80-32-112-96zm-4.5-148.5c-1.6 14.7-2.6 29.8-2.6 44.5c0 16.6 1.3 33.3 3.8 49.9s7.7 33 14.7 48.3c7.4 14.4 17 27.2 28.5 38.4c10.6 10.6 22.4 20.2 34.9 28.2c11.8 8 24.3 15 37.4 21.1c17-7.7 75.5-37.4 100.5-87.7c7.4-15.4 12.2-31.4 14.7-48c2.6-16.3 3.8-33 3.8-49.6c0-15-1-30.1-2.6-45.1l-116.5-14.7-116.8 14.7zM175 246.4c0-44.2 35.8-80 80-80s80 35.8 80 80-35.8 80-80 80h0c-44.2 0-80-35.8-80-80zm80 67.2c37.1 0 67.2-30.1 67.2-67.2c0-15-5.1-29.4-14.1-41.3l-94.4 94.4c11.8 9.3 26.2 14.1 41.3 14.1zM207.7 199c-25 25-26.2 65-3.2 91.8l94.7-94.7c-26.6-23.4-66.6-21.8-91.8 3.2h0z"],
    "ilu-android-face": [512,512,[],"e07f","M256 32C132.2 32 32 132.2 32 256s100.2 224 224 224h0c123.8 0 224-100.2 224-224S379.8 32 256 32zm0 431c-114.2 0-207-92.8-207-207h0c0-114.2 92.8-207 207-207s207 92.8 207 207s-92.8 207-207 207zm38.1-88.3c2.2 4.8 0 10.2-4.5 12.5c-21.4 9.9-42.9 11.8-60.5 3.8s-29.1-25.3-33-48.6l18.2-2.9c3.2 18.9 11.8 30.1 22.4 34.9c10.9 5.1 26.2 4.8 44.8-3.8c4.8-2.2 10.2 0 12.5 4.5c0 0 0 0 0 0zm-25.3-93.4v-38.1h17v55h-46.4v-17h29.4zM374.4 201c0 9.3-7.7 17-17 17s-17-7.7-17-17 7.7-17 17-17h0c9.3 0 17 7.7 17 17zm-202.9 0c0 9.3-7.7 17-17 17s-17-7.7-17-17s7.7-17 17-17h0c9.3 0 17 7.7 17 17z"],
    "ilu-android-finger": [512,512,[],"e07b","M386.2 87.4c-1.9 0-3.5-.3-5.1-1.3c-77.8-42.2-171.8-42.2-249.6 0c-5.4 2.9-12.2 1-15.4-4.5c-2.9-5.4-1-12.2 4.5-15.4c84.5-45.8 186.2-45.8 270.7 0c5.4 2.9 7.4 9.9 4.5 15.4c-1.9 3.5-5.8 5.8-9.6 5.8h0zM65.9 204.8c-2.2 0-4.5-.6-6.4-1.9c-5.1-3.5-6.4-10.6-2.9-15.7c0 0 0 0 0 0c21.8-31 50.6-56 83.8-73.3c72.6-36.5 158.1-36.5 231 0c33.6 17.3 62.4 42.2 83.8 73c3.5 5.1 2.2 12.2-2.9 15.7s-11.8 2.2-15.4-2.6c-19.5-27.8-45.8-50.2-75.8-65.9c-66.2-33-144.3-33-210.6 0c-30.4 15.7-56.3 38.4-76.2 66.2c-1.9 3.2-5.1 4.8-8.6 4.8zM205.8 475.2c-2.9 0-5.8-1.3-7.7-3.5c-18.2-17-33.3-37.1-45.1-59.2c-16-29.8-24-63.4-23.4-97.3c0-66.6 57-120.6 126.7-120.6S383 248.6 383 315.2c0 6.1-5.1 11.2-11.2 11.2s-11.2-5.1-11.2-11.2c0-54.1-46.7-98.2-104.3-98.2S152 261.1 152 315.2c-.6 30.1 6.7 59.8 20.8 86.1c10.9 20.2 24.6 38.4 41.3 54.1c4.2 4.5 4.2 11.5 0 16c-2.2 2.2-5.1 3.2-8.3 3.5zm160.6-41.3c-24.6 .6-49-6.4-69.4-19.8c-33-21.8-53.1-58.9-53.4-98.2c0-6.1 5.1-11.2 11.2-11.2s11.2 5.1 11.2 11.2h0c0 32.3 16.6 62.1 43.5 79.7c17 10.9 36.8 16.6 57 16c7.7 0 15.7-1 23.4-2.2c6.1-1.3 11.8 2.9 13.1 9s-2.9 11.8-9 13.1c0 0 0 0 0 0c-9 1.6-17.9 2.6-27.2 2.6zM321.3 480s-1.9 0-2.9-.3c-31.7-7.7-60.5-24-83.2-47c-31.4-30.7-48.6-73-48.6-116.8c1.9-38.1 34.2-67.5 72.3-65.6c35.5 1.6 64 30.1 65.6 65.6c1.9 25.6 24.3 45.1 49.9 43.2c23-1.6 41.3-20.2 43.2-43.2c0-84.5-72.6-153-162.2-153c-63.7 0-121.9 35.5-148.2 90.2c-9 19.5-13.4 41-13.1 62.7c0 27.5 5.1 55 15 81c2.2 5.8-.6 11.8-6.1 14.1c0 0 0 0-.3 0c-5.8 2.2-12.2-.6-14.4-6.4c0 0 0 0 0 0c-10.9-28.5-16.3-58.2-16.3-88.6c-.3-25 4.8-49.9 15.4-72.6c29.8-62.4 96-103 168.3-103c101.8 0 185 78.7 185 175.4c-1.9 38.1-34.2 67.5-72.3 65.6c-35.5-1.6-64-30.1-65.6-65.6c-1.9-25.6-24.3-45.1-49.9-43.2c-23 1.6-41.3 20.2-43.2 43.2c0 38.1 15 74.2 41.9 101.1c20.2 20.5 45.4 34.9 73.3 41.3c6.1 1.6 9.6 7.7 8 13.8c0 0 0 0 0 0c-1 4.8-5.4 8.6-10.6 8.6h0z"],
    "ilu-betslip-empty": [512,512,[],"e07c","M339.5 433.3l-55.4 50.6-55.7-50.6-58.2 50.6-53.8-48.3-54.4 48.3c-2.6 0-4.5-1.9-4.5-4.5h0V117.4c0-2.6 1.9-4.5 4.5-4.5h330.6c2.6 0 4.5 1.9 4.5 4.5v361.9c0 2.6-1.9 4.5-4.5 4.5l-52.8-50.6zM170.2 466.9l58.2-50.6 55.4 50.2 55.7-50.9 44.5 42.6V125.8H70.1v333.8l46.1-41 53.8 48.3zM214.4 343c0-7.7 6.4-14.1 14.1-14.1s14.1 6.4 14.1 14.1-6.4 14.1-14.1 14.1h0c-7.7 0-14.1-6.4-14.1-14.1h0zm37.4-57.9c-4.5-3.2-8.6-6.7-12.8-10.6l9.3-9c3.5 3.2 7 6.4 10.9 9.3c8 5.4 15.4 8.6 21.4 8.6c7.7 0 15.7-4.8 21.1-8.6c3.5-2.6 7-5.8 10.2-9l9.6 8.6c-3.8 3.8-7.7 7.4-12.2 10.6c-9.9 7.4-19.5 11.2-28.5 11.2s-18.6-3.8-29.1-10.9h0zm-104.3 0c-4.5-3.2-8.6-6.7-12.8-10.6l9.3-9c3.5 3.2 7 6.4 10.9 9.3c8 5.4 15.4 8.6 21.4 8.6c7.7 0 15.7-4.8 21.1-8.6c3.5-2.6 7-5.8 10.2-9l9.6 8.6c-3.8 3.8-7.7 7.4-12.2 10.6c-9.9 7.4-19.5 11.2-28.5 11.2s-18.6-3.8-29.1-10.9h0zm202.6-80.3V192h19.2v12.8h-19.2zm-38.4 0V192h19.2v12.8h-19.2zm-38.4 0V192h19.2v12.8h-19.2zm-38.4 0V192h19.2v12.8h-19.2zm-38.4 0V192h19.2v12.8h-19.2zm-38.4 0V192h19.2v12.8h-19.2zm-38.4 0V192h19.2v12.8h-19.2zm-38.4 0V192h19.2v12.8H81.3zM418.6 151l-4.5-10.9 20.8-20.8h-16.3v-12.8h31.7l4.5 10.9-20.8 20.8h16.3V151h-31.7zM359.7 79.7l-4.5-10.9 33.6-33.6h-29.1V22.4h44.5l4.5 10.9-33.6 33.6h29.1v12.8h-44.5z"],
    "ilu-biometric-default": [512,512,[],"e08f","M389.1 512a11.4 11.4 0 1 1 0-22.8h50.3a49.9 49.9 0 0 0 49.9-49.9V389.1a11.4 11.4 0 1 1 22.8 0v50.3A72.6 72.6 0 0 1 439.4 512zM72.6 512A72.7 72.7 0 0 1 0 439.4V389.1a11.4 11.4 0 1 1 22.8 0v50.3a50 50 0 0 0 49.9 49.9h50.3a11.4 11.4 0 1 1 0 22.8zm189.5-54.4V53.8a8.4 8.4 0 0 1 16.8 0v21.9a227.7 227.7 0 0 1 107.7 27.6 8.9 8.9 0 0 1 4.3 5.4 9.2 9.2 0 0 1 -.7 6.9 9 9 0 0 1 -7.7 4.7 7.3 7.3 0 0 1 -4.1-1 209.6 209.6 0 0 0 -99.5-25.4v25.6a205.9 205.9 0 0 1 46.3 5.5 208.5 208.5 0 0 1 45.4 16.4 188.8 188.8 0 0 1 37.3 25.2 181.9 181.9 0 0 1 30 33.3 9.1 9.1 0 0 1 -2.3 12.6 9 9 0 0 1 -5.1 1.6 9.1 9.1 0 0 1 -7.3-3.6 165.3 165.3 0 0 0 -27.3-30.1 177 177 0 0 0 -33.6-22.8 189.2 189.2 0 0 0 -83.5-19.8v24.8a155.6 155.6 0 0 1 28.8 2.9 151.4 151.4 0 0 1 53 21.2 149.9 149.9 0 0 1 22 17.2 146.5 146.5 0 0 1 18.1 20.9 139.8 139.8 0 0 1 13.7 23.9 133.5 133.5 0 0 1 11.7 54.7 55.4 55.4 0 0 1 -55 52.9l-2.8 0a55.3 55.3 0 0 1 -52.8-52.7 37.6 37.6 0 0 0 -36.7-34.7v26.1a9.1 9.1 0 0 1 7.1 8.8 75.7 75.7 0 0 0 9.3 36.4 77.9 77.9 0 0 0 25.6 27.6 80.4 80.4 0 0 0 43.4 12.8l2.3 0a124 124 0 0 0 18.8-1.8 9.6 9.6 0 0 1 1.8-.2 8.6 8.6 0 0 1 5.6 2.1 9.6 9.6 0 0 1 3.2 5.3 8.6 8.6 0 0 1 -1.4 6.7 9.6 9.6 0 0 1 -5.9 3.8 123.5 123.5 0 0 1 -21.8 2.1l-.3 0h-2.3a97.5 97.5 0 0 1 -27.9-4.1 95.1 95.1 0 0 1 -57.6-47.4v42a123.4 123.4 0 0 0 24.8 17.7 117.3 117.3 0 0 0 29.7 11.2 9 9 0 0 1 5.5 4.2 9.2 9.2 0 0 1 .9 6.9 8.9 8.9 0 0 1 -3 4.9 8.7 8.7 0 0 1 -5.5 2l-.8-.4a10.7 10.7 0 0 1 -2.3-.3 141.5 141.5 0 0 1 -26.3-9.2 143.2 143.2 0 0 1 -22.9-13.4v45a8.4 8.4 0 1 1 -16.8 0zM279 250.9h1.5a55.3 55.3 0 0 1 52.6 52.7 37.6 37.6 0 0 0 37.3 34.8c.9 0 1.9 0 2.8 0a37 37 0 0 0 23.7-10.9 38.2 38.2 0 0 0 11-23.7A116 116 0 0 0 397.6 256a121.2 121.2 0 0 0 -11.9-20.9 125.9 125.9 0 0 0 -15.8-18.1 129.9 129.9 0 0 0 -19.2-15 132.5 132.5 0 0 0 -22-11.3 136.3 136.3 0 0 0 -49.6-9.8v25.4a104.5 104.5 0 0 1 56.1 16.5 103.7 103.7 0 0 1 15.1 11.8 99.4 99.4 0 0 1 12.4 14.3 96 96 0 0 1 9.4 16.4 91.9 91.9 0 0 1 8 37.7 9 9 0 0 1 -18 0 81.4 81.4 0 0 0 -83.2-78.8zM192.2 431.3a154.3 154.3 0 0 1 -19.2-6.4 138 138 0 0 1 -19.6-10 105.6 105.6 0 0 1 -33.9-32.9 99.4 99.4 0 0 1 -11.1-24 118.8 118.8 0 0 1 -5-29.8 54.4 54.4 0 0 1 -12.3-8.8 52.4 52.4 0 0 1 -9.1-11.6 55.9 55.9 0 0 1 -5.7-14 63.7 63.7 0 0 1 -2-16 9.2 9.2 0 1 1 18.5 0 36.8 36.8 0 0 0 23 35.8l5.9 2.3v6.4c0 92.5 100.5 95.1 101.5 95.1a9.1 9.1 0 0 1 4.4 1.1v16.3a9.6 9.6 0 0 1 -4.4 1.1 130.2 130.2 0 0 1 -31.1-4.6zm-71-165.7a9.3 9.3 0 0 1 -8.7-9.6 72.6 72.6 0 0 1 26-49.3V171.6l4.8-2.8a9 9 0 0 1 4.5-1.3 23.8 23.8 0 0 1 11.3 4.9 281.2 281.2 0 0 0 25.2 14 246.4 246.4 0 0 0 43.4 16v19.2a263.9 263.9 0 0 1 -42.4-14.5 261.9 261.9 0 0 1 -28.3-14.5v23.5l-4.1 2.7a48 48 0 0 0 -12 11.7 53.8 53.8 0 0 0 -6.6 12.3 52.2 52.2 0 0 0 -3.2 13.9 9.2 9.2 0 0 1 -9.5 8.9zm-34.8-44V161.4a84.9 84.9 0 0 1 16.7-38.1 104.4 104.4 0 0 1 31.3-26.6A155.5 155.5 0 0 1 175 81 198.9 198.9 0 0 1 219.3 75.7h1.8c2.2 0 4.4 0 6.4 0V92.8c-2.2 0-4.4 0-6.4 0h-1.7c-50.3 .4-108.2 22.6-116.4 70.4l0 58.8a8.4 8.4 0 0 1 -16.8 0zm402.8-98.6V72.6A50 50 0 0 0 439.4 22.8H389.1a11.4 11.4 0 1 1 0-22.8h50.3A72.7 72.7 0 0 1 512 72.6v50.3a11.4 11.4 0 1 1 -22.8 0zM0 122.9V72.6A72.6 72.6 0 0 1 72.6 0h50.3a11.4 11.4 0 0 1 0 22.8H72.6A49.9 49.9 0 0 0 22.8 72.6v50.3a11.4 11.4 0 1 1 -22.7 0z"],
    "ilu-flag": [512,512,[],"e082","M119 211.2c-1.3-2.9-1-6.4 1-9c1-1.6 25.6-38.4 59.2-56.3s80-14.7 82.2-14.7c5.1 .3 9 4.5 9 9.6v34.6c15.7 5.1 32 8.3 48.6 9.3c23.7 0 62.1-11.5 62.7-11.5c5.1-1.6 10.6 1.3 11.8 6.4c.6 2.2 .6 4.8-.6 7c-12.5 24.6-29.8 46.4-50.6 64.6c-23.7 18.6-50.2 33.3-78.4 43.8c-5.1 1.9-10.6-.6-12.2-5.8c-.3-1-.6-2.2-.6-3.2v-24c-13.1 .6-25.9 3.5-38.4 8c-12.5 5.8-28.8 23-35.8 31.7l37.1 91.5-17.9 7.4-76.8-189.1zm69.1-48c-23 12.5-42.2 36.5-49.3 46.1l29.4 73c10.2-11.8 22.4-21.8 36.2-29.1c14.7-5.8 30.4-9 46.4-9.9v-92.5c-14.1 0-41.9 1.6-62.7 12.8h0zm81.9 108.5c21.4-9 41.3-20.8 59.5-35.2c13.1-11.2 24.6-24.3 34.2-39c-14.7 3.5-30.1 5.8-45.1 6.4c-16.3-.6-33-3.5-48.6-8.3v76.2z"],
    "ilu-inbox": [512,512,[],"e08a","M32 425.6c-5.4 0-9.6-4.2-9.6-9.6V96c0-5.4 4.2-9.6 9.6-9.6h448c5.4 0 9.6 4.2 9.6 9.6v320c0 5.4-4.2 9.6-9.6 9.6H32zm423.7-19.2L291.8 254.1 263 276.5c-1.6 1.3-3.8 1.9-5.8 1.9c-2.2 0-4.2-.6-5.8-1.9l-30.4-23.4L56.3 406.4h399zm14.7-12.5V115.5l-163.2 126.4 163.2 152zm-428.8 0l163.8-152.6L41.6 115.5v278.4zM257 256.6l194.9-151H60.2l196.8 151z"],
    "ilu-ios-face": [512,512,[],"e076","M54.7 154.9v-50.2c0-27.5 22.4-49.9 49.9-49.9h50.2c6.4 0 11.5-5.1 11.5-11.5s-5.1-11.5-11.5-11.5h-50.2c-40 0-72.6 32.6-72.6 72.6v50.2c0 6.4 5.1 11.5 11.5 11.5S55 161 55 154.6h0zM154.9 457.3c6.4 0 11.5 5.1 11.5 11.5s-5.1 11.5-11.5 11.5h-50.2c-40 0-72.6-32.6-72.6-72.6v-50.2c0-6.4 5.1-11.5 11.5-11.5S55 351 55 357.4v50.2c0 27.5 22.4 49.9 49.9 49.9h50.2zM480 357.1v50.2c0 40-32.6 72.6-72.6 72.6h-50.2c-6.4 0-11.5-5.1-11.5-11.5s5.1-11.5 11.5-11.5h50.2c27.5 0 49.9-22.4 49.9-49.9v-50.2c0-6.4 5.1-11.5 11.5-11.5s11.5 5.1 11.5 11.5zm0-252.5v50.2c0 6.4-5.1 11.5-11.5 11.5s-11.5-5.1-11.5-11.5v-50.2c0-27.5-22.4-49.9-49.9-49.9h-50.2c-6.4 0-11.5-5.1-11.5-11.5s5.1-11.5 11.5-11.5H407c40 0 72.6 32.6 72.6 72.6h0zM334.4 363.2c5.1-4.2 5.8-11.5 1.6-16.6s-11.5-5.8-16.6-1.6c0 0-.6 .6-1 .6c-35.2 32.6-89.6 32.6-124.8 0c-4.5-4.8-12.2-4.8-16.6 0c-4.8 4.5-4.8 12.2 0 16.6c0 0 .6 .6 1 .6c44.5 41 112.6 41 157.1 0h0zM279.7 201v84.2c0 16.6-13.4 30.1-30.1 30.1H240c-6.4 0-11.8-5.1-12.2-11.5s5.1-11.8 11.5-12.2c0 0 .3 0 .6 0h9.6c3.5 0 6.4-2.9 6.7-6.7v-84.2c0-6.4 5.4-11.8 12.2-11.5c6.4 0 11.5 5.1 11.5 11.5h0zm81.3 33v-33.6c0-6.1-5.1-11.2-11.2-11.2s-11.2 5.1-11.2 11.2h0v33.6c0 6.1 5.1 11.2 11.2 11.2s11.2-5.1 11.2-11.2h0zm-207.4 0c0 6.1 5.1 11.2 11.2 11.2s11.2-5.1 11.2-11.2h0v-33.6c0-6.1-5.1-11.2-11.2-11.2s-11.2 5.1-11.2 11.2h0v33.6z"],
    "ilu-ios-finger": [512,512,[],"e080","M303.4 38.7c-31.7-8-64.6-8.6-96.6-1.9c-2.6 .6-3.8 3.2-3.2 5.8c.6 2.2 2.9 3.8 5.1 3.5c30.7-6.4 62.4-5.8 92.5 1.9c72.6 17.9 131.2 72 154.9 143c8.6 28.2 13.1 57.6 13.4 87c0 2.6 1.9 4.5 4.5 4.5s4.5-1.9 4.5-4.5c0 0 0 0 0 0c0-30.1-4.8-60.2-13.8-89.3c-24.6-74.6-85.8-130.9-161.9-149.8zM183.7 52.5c2.6-.6 3.8-3.2 3.2-5.4c-.6-2.6-3.2-3.8-5.4-3.2c0 0 0 0 0 0c-33.6 9.3-81 41.3-110.1 84.2h0c-25.6 38.7-41.6 87.4-37.1 134.4h0c1 8.6 2.9 17.3 4.8 25.9c3.8 18.2 7.7 36.2 4.8 54.7c-.3 2.6 1.6 4.8 3.8 5.1c2.6 0 4.8-1.3 5.1-3.8c3.2-19.2-.6-38.1-4.5-57c-1.9-8.6-3.5-17.3-4.8-26.2c-4.2-44.5 10.9-90.9 35.8-128.3c28.2-41.3 73.6-71.7 105-80.3zm60.2 10.2c58.9-3.5 115.8 20.5 154.2 65.3c1.6 1.9 1.3 4.8-.6 6.4s-4.8 1.3-6.4-.6c-36.5-42.6-90.9-65.3-146.9-62.1h0c-71 4.2-133.1 49.9-158.4 116.5c-.6 2.6-3.5 3.8-5.8 2.9c-2.6-.6-3.8-3.5-2.9-5.8c0 0 0 0 0 0c26.6-70.1 91.8-118.1 166.7-122.6zm168.3 85.4c-1.3-2.2-4.2-2.9-6.4-1.6s-2.9 4.2-1.6 6.4c0 0 0 0 0 .3c21.4 32 30.4 66.9 33.9 108.2c0 2.6 2.6 4.5 5.1 4.2c2.6 0 4.5-2.6 4.2-5.1c-3.5-42.2-12.8-78.7-35.5-112.6zM444.5 280c2.6 0 4.8 1.9 4.8 4.2c1.9 27.5 1.6 55-1.3 82.2c-.3 2.6-2.9 4.2-5.4 3.8s-4.2-2.6-3.8-5.1c2.9-26.9 3.2-53.8 1.3-80.6c0-2.6 1.6-4.8 4.2-4.8zM79 210.9c.6-2.6-1-5.1-3.5-5.4c-2.6-.6-5.1 1-5.4 3.5c-3.5 14.1-5.1 28.5-5.1 42.9c.3 14.7 2.2 29.4 5.4 43.8c2.6 11.8 4.2 23.7 5.1 35.8c.6 16-2.2 32-8 46.7c-1 2.2 0 5.1 2.6 6.1c2.2 1 5.1 0 6.1-2.6c0 0 0 0 0 0c6.4-16 9.3-33.3 8.6-50.6c-1-11.8-2.6-23.7-5.1-35.5c-3.2-14.4-5.1-28.8-5.4-43.5c0-13.8 1.6-27.2 4.8-40.6zM199.7 108.5c1 2.2 0 5.1-2.6 6.1h0c-48.3 19.2-82.9 62.1-90.9 113.3c-1.9 21.1-1 42.6 3.5 63.4c1.9 11.8 3.8 23.7 4.5 35.5c2.9 27.8-3.5 56-18.2 80c-1.3 2.2-4.2 3.2-6.4 1.9s-3.2-4.2-1.9-6.4c0 0 0-.3 .3-.6c13.4-22.4 19.5-48.3 16.6-74.2c-.6-12.2-2.6-24-4.5-36.2c-4.5-21.4-5.4-43.2-3.5-65c8.6-54.4 45.1-100.5 96.3-120.6c2.2-1 5.1 0 6.1 2.6zm161.6 26.2c-38.4-34.6-91.2-48.3-141.8-36.8c-2.6 .3-4.2 2.6-3.8 5.1s2.6 4.2 5.1 3.8c0 0 .3 0 .6 0c47.4-10.9 97.3 1.9 133.4 34.2c29.8 27.8 46.7 68.2 51.5 112.3c0 2.6 2.2 4.5 4.8 4.2c2.6 0 4.5-2.2 4.2-4.8c0 0 0 0 0 0c-4.8-45.8-22.7-88.3-54.1-118.1zm53.1 139.8c2.6 0 4.8 1.6 5.1 4.2c0 0 0 0 0 0c4.2 44.2 2.6 89-4.2 132.8c-.3 2.6-2.9 4.2-5.4 3.8s-4.2-2.6-3.8-5.1c6.7-43.2 8-87 4.2-130.6c0-2.6 1.6-4.8 4.2-5.1zM254.1 125.4c-70.1-.6-127.4 55.7-127.7 125.8c0 7.4 .6 14.7 1.9 21.8c.3 2.6 2.6 4.2 5.1 3.8s4.2-2.6 3.8-5.1c0 0 0 0 0-.3c-1.3-6.7-1.9-13.4-1.9-20.2c.6-65 53.8-117.1 118.7-116.5c28.5 0 55.7 9.9 77.4 28.2c1.9 1.6 4.8 1.3 6.4-.6s1.3-4.8-.6-6.4h0c-23.4-19.8-52.8-30.4-83.5-30.4zm93.8 47.7c1.9-1.6 4.8-1.6 6.4 0c0 0 0 0 0 0c20.2 21.1 26.9 54.4 31 82.2c3.8 25.3 5.4 50.9 5.4 76.5c0 2.6-1.9 4.5-4.5 4.5s-4.5-1.9-4.5-4.5h0c0-25-1.9-50.2-5.4-74.9c-3.8-25.9-9.6-57.6-28.8-77.4c-1.6-1.9-1.6-4.8 0-6.4c0 0 0 0 0 0zm41.9 185.3c0-2.6-1.9-4.8-4.5-4.8s-4.5 1.6-4.8 4.2c-1.6 27.8-5.4 55.4-11.2 82.9c-.6 2.6 .6 5.1 3.2 5.8s5.1-.6 5.8-3.2c0 0 0 0 0-.3c5.8-27.8 9.6-55.7 11.5-84.2zM135.7 289.9c2.6-.6 4.8 1.3 5.4 3.5c9.6 49.3 2.9 94.4-22.7 133.4c-1.3 2.2-4.2 2.9-6.4 1.6s-2.9-4.2-1.6-6.4c0 0 0 0 0-.3c24.3-37.1 30.7-79.4 21.4-126.7c-.6-2.6 1-4.8 3.5-5.4c0 0 0 0 0 0zM254.1 155.5c-45.8 0-90.6 35.5-95.4 80c-1.3 19.5 0 38.7 3.5 57.9c2.9 16.6 4.5 33.6 4.2 50.6c-.6 34.9-12.2 69.1-32.6 97.3c-1.6 1.9-1.3 4.8 1 6.4s4.8 1.3 6.4-1c0 0 0 0 0 0c21.8-29.8 33.6-65.6 34.6-102.4c0-17-1.3-33.6-4.2-50.2c-3.5-18.9-4.8-38.4-3.5-57.6c4.2-39 44.2-71.7 86.1-71.7c19.5 0 70.1 10.6 86.1 62.7c9.9 32.6 12.8 77.1 10.2 120s-9.9 84.2-20.2 110.7c-1 2.2 0 5.1 2.6 6.1c2.2 1 5.1 0 6.1-2.6c0 0 0 0 0 0c10.6-27.5 18.2-69.8 20.8-113.6s0-89.3-10.9-123.5c-17.9-57.9-73.6-69.4-94.7-69.4zM183.4 427.2c2.2 1.3 2.9 4.2 1.3 6.4c-2.9 4.5-5.4 9-8 13.4s-5.1 9.3-8 13.4c-1.3 2.2-4.2 2.9-6.4 1.9c-2.2-1.3-2.9-4.2-1.9-6.4c0 0 0-.3 .3-.6c2.9-4.5 5.4-9 8-13.4s5.1-9.3 8-13.4c1.3-2.2 4.2-2.6 6.4-1.3zm39.4-224c2.2-1.3 2.6-4.2 1.3-6.4s-4.2-2.6-6.4-1.3c-18.6 11.2-29.8 31.7-29.4 53.4c0 13.1 1.9 26.2 5.1 38.7c4.2 18.2 6.4 36.8 6.1 55.4c-.3 21.8-5.1 43.5-13.8 63.7c-1 2.2 0 5.1 2.2 6.1s5.1 0 6.1-2.2c0 0 0 0 0 0c9-21.1 14.1-43.8 14.4-67.2c0-19.5-1.9-38.7-6.4-57.6c-3.2-12.2-4.8-24.3-5.1-36.8c-.6-18.9 9.3-36.2 25.3-45.8zm17.9-16.3c19.2-3.8 39.4 1 54.7 13.1c26.9 21.8 30.7 61.8 33.6 94.1v1.6c3.2 41.3 0 82.6-9 122.6c-.3 2.6-2.9 4.2-5.4 3.5c-2.6-.3-4.2-2.9-3.5-5.4c0 0 0 0 0 0c9-39.4 12.2-79.7 9-120c0-1.3 0-2.6-.3-4.2h0c-2.6-29.1-5.8-65.6-29.8-85.1c-13.4-10.6-30.4-14.7-47-11.2c-2.6 .6-4.8-1.3-5.4-3.5c-.3-2.6 1-4.8 3.5-5.4h0zm72.6 254.4c.6-2.6-1-4.8-3.5-5.4c-2.2-.6-4.8 1-5.4 3.2c-2.6 10.6-7 20.5-12.5 29.8c-1.3 2.2-.6 5.1 1.3 6.4c2.2 1.3 5.1 .6 6.4-1.3c0 0 0 0 0 0c6.1-9.9 10.6-20.8 13.4-32.3zm-22.4-66.6c2.6 0 4.5 2.6 4.2 5.1c0 0 0 0 0 0c-3.5 34.2-13.8 67.5-29.8 97.9c-1.3 2.2-4.2 2.9-6.4 1.9c-2.2-1.3-2.9-4.2-1.9-6.4h0c15.7-29.4 25.6-61.4 28.8-94.4c0-2.6 2.6-4.2 5.1-4.2c0 0 0 0 0 0zm-1-128c-3.2-17.3-17.9-29.8-35.5-30.1c-20.5 .6-36.8 17.9-36.2 38.4c0 2.9 .6 5.4 1.3 8.3c9.9 37.4 11.5 76.8 4.8 115.2h0c-5.4 31.4-16.3 61.1-32.6 88.3c-1.3 2.2-.6 5.1 1.6 6.4s4.8 .6 6.1-1.6c17-28.2 28.5-59.2 33.9-91.5c7-39.7 5.1-80.3-5.1-119h0c-4.2-15 4.8-30.4 19.8-34.2c1.9-.6 4.2-1 6.1-1c13.1 0 24.3 9.6 26.6 22.4c6.7 34.9 9.3 70.4 7.7 105.9c0 2.6 1.9 4.8 4.5 4.8s4.5-1.6 4.8-4.2c1.9-36.2-.6-72.6-7.7-108.2h0zm-49.3 199c2.2 1.3 3.2 3.8 1.9 6.1l-12.2 23.7c-1.3 2.2-3.8 3.2-6.1 1.9s-3.2-3.8-1.9-6.1c0 0 0 0 0 0l12.2-23.7c1.3-2.2 3.8-3.2 6.1-1.9c0 0 0 0 0 0zm17-194.9c-.6-2.6-3.2-4.2-5.4-3.5s-4.2 3.2-3.5 5.4h0c15.4 65.9 13.4 124.2-5.4 173.4c-1 2.2 0 5.1 2.6 6.1s5.1 0 6.1-2.6c0 0 0 0 0 0c19.8-51.5 21.8-111.4 5.8-178.9z"],
    "ilu-kyc": [512,512,[],"e073","M197.8 368c-11.5-4.2-22.1-9.9-31.7-17.3s-17.6-16.3-24.3-26.2c-6.7-10.2-11.8-21.4-15-33.3c16.3-8.3 33.9-14.7 51.8-18.9c18.6-4.5 37.4-6.7 56.6-6.7c15.7 0 31.4 1.6 46.7 4.5c-1.6 3.8-2.9 8-3.8 12.2c-14.1-2.6-28.5-4.2-42.9-4.2c-17.9 0-35.8 2.2-53.4 6.4c-13.4 3.2-26.6 7.7-39 13.4c2.6 6.7 6.1 13.1 9.9 19.2c5.8 9 13.1 16.6 21.8 23.4s17.9 11.8 28.2 15.4c10.6 3.8 21.8 5.4 32.6 5.4c11.2 0 22.1-1.9 32.6-5.4c10.2-3.5 19.8-8.6 28.2-15.4c.3 0 .6-.6 1-1c3.2 2.9 7 5.4 10.9 7.7c-9.9 8.3-21.1 15-33.3 19.8c-12.5 4.8-25.9 7-39.4 7c-12.5 0-25-2.2-37.1-6.4zm91.5-73.6c0-26.6 21.4-48 48-48s48 21.4 48 48-21.4 48-48 48-48-21.4-48-48h0s0 0 0 0zm23-25c-6.7 6.7-10.2 15.7-10.2 25s3.8 18.2 10.2 25c6.7 6.7 15.7 10.2 25 10.2s18.2-3.8 25-10.2c6.7-6.7 10.2-15.7 10.2-25s-3.8-18.2-10.2-25c-6.7-6.7-15.7-10.2-25-10.2s-18.2 3.8-25 10.2h0zm-1 26.6l9-9 12.5 12.5 21.4-21.4 9 9-30.4 30.4-21.4-21.4zM180.5 188.8c0-30.1 24.3-54.4 54.4-54.4s54.4 24.3 54.4 54.4-24.3 54.4-54.4 54.4-54.4-24.3-54.4-54.4h0s0 0 0 0zm25-29.4c-7.7 7.7-12.2 18.2-12.2 29.4s4.5 21.8 12.2 29.4s18.2 12.2 29.4 12.2c10.9 0 21.8-4.5 29.4-12.2s12.2-18.2 12.2-29.4s-4.5-21.8-12.2-29.4s-18.2-12.2-29.4-12.2c-10.9 0-21.8 4.5-29.4 12.2h0z"],
    "ilu-location-error": [512,512,[],"e077","M209.6 364.5c-6.1-1.9-11.8-5.1-16.6-9.3c-8-5.8-9.9-17.3-4.2-25.3c1.3-1.6 2.6-2.9 4.2-4.2c5.1-4.2 10.6-7.4 16.6-9.3c2.2-1 4.5-1.6 7-2.2c2.9 3.5 6.1 7 9.6 10.9c-4.2 1-8 2.2-11.8 3.5c-8 2.9-16 7.7-16 12.2s8 9.3 16 12.2c30.1 9.6 62.7 9.6 92.8 0c8-2.9 16-8 16-12.2s-8-9.3-16-12.2c-3.8-1.3-8-2.6-11.8-3.5c3.2-3.5 6.4-7 9.6-10.9c2.6 .6 4.8 1.6 7 2.2c6.1 2.2 11.8 5.1 16.6 9.3c8 5.8 9.9 17.3 4.2 25.3c-1.3 1.6-2.6 2.9-4.2 4.2c-5.1 4.2-10.6 7.4-16.6 9.3c-33 10.6-68.8 10.6-101.8 0zm50.9-25.3l-4.2-3.5c-11.8-10.6-23-21.8-33.6-33.9c-9-10.2-16.6-21.1-23.4-32.6c-7.4-13.1-11.2-25.3-11.2-35.8c0-10.2 1.9-20.5 5.8-30.4c1.9-4.5 4.2-8.6 7-12.8l-27.5-27.5 9-9 26.9 26.9 33.9 33.9 45.1 45.1 50.2 50.2-9 9-25-25c-1.9 2.6-4.2 5.1-6.4 8c-10.2 12.2-21.4 23.4-33.6 33.9l-4.2 3.5h0zM201.3 233.3c0 15.4 10.9 36.5 31.4 60.2c8.6 10.2 17.9 19.8 27.8 28.8c9.9-9 19.2-18.6 28.2-28.8c2.6-2.9 4.8-5.8 7-8.6l-17.9-17.9c-19.5 8.6-42.2-.3-50.6-19.8c-4.2-9.9-4.2-21.1 0-30.7l-16.6-16.6c-6.1 10.2-9.3 21.8-9 33.9h0zm35.2-1.6c0 14.1 11.5 25.6 25.6 25.6c1.9 0 3.5 0 5.4-.6l-30.4-30.4c-.3 1.9-.6 3.5-.6 5.4h0zm83.2 41l-9.3-9.3c6.4-11.5 9.6-21.4 9.6-30.1c0-17.9-6.1-33.3-17.3-43.8c-5.4-5.1-11.8-9-18.6-11.5c-15-5.4-31.7-5.4-46.7 0c-2.9 1-5.8 2.2-8.3 3.8l-9.3-9.3c4.2-2.6 8.6-4.8 13.1-6.4c17.9-6.4 37.4-6.4 55.4 0c8.6 3.2 16.3 8 23 14.1c6.7 6.4 12.2 14.1 15.7 22.7c3.8 9.6 5.8 19.8 5.8 30.4s-3.8 22.7-10.9 35.8c-.6 1-1.3 2.2-1.9 3.5h0zm-23.4-23.4l-9.6-9.6c4.5-13.4-2.9-27.8-16.3-32.3c-5.1-1.6-10.6-1.6-15.7 0l-9.9-9.9c18.9-9.6 41.9-2.2 51.8 16.6c2.9 5.4 4.2 11.5 4.2 17.6s-1.6 12.2-4.2 17.6h0z"],
    "ilu-no-content": [512,512,[],"e089","M181.4 453.4c-22.7-9.6-43.5-23.4-60.8-41c-17.6-17.3-31.4-38.1-41-60.8c-9.9-23.7-15-49-15-74.6s5.1-50.9 15-74.6c9.6-22.7 23.4-43.2 41-60.8c17.3-17.6 38.1-31.4 60.8-41c19.5-8.3 40.3-13.1 61.8-14.7V62.4h-38.4V43.2h96v19.2h-38.4v23.4c23.4 .6 46.4 5.8 68.2 15c14.4 6.1 28.2 14.1 40.6 23.4l7.7-9.3-14.7-12.2 12.5-14.7 44.2 37.1-12.5 14.7-14.7-12.5-7.7 9.3c1.9 1.6 3.8 3.5 5.4 5.4c17.6 17.3 31.4 38.1 41 60.8c9.9 23.7 15 49 15 74.6s-5.1 50.9-15 74.6c-9.6 22.7-23.4 43.2-41 60.8c-17.3 17.6-38.1 31.4-60.8 41c-23.7 9.9-49 15-74.6 15s-50.9-5.1-74.6-15zm7.7-334.7c-20.5 8.6-39 21.1-54.7 36.8s-28.2 34.2-36.8 54.7c-9 21.1-13.4 43.8-13.4 66.9s4.5 45.8 13.4 66.9c8.6 20.5 21.1 39 36.8 54.7s34.2 28.2 54.7 36.8c21.1 9 43.8 13.4 66.9 13.4s45.8-4.5 66.9-13.4c20.5-8.6 39-21.1 54.7-36.8s28.2-34.2 36.8-54.7c9-21.1 13.4-43.8 13.4-66.9s-4.5-45.8-13.4-66.9c-8.6-20.5-21.1-39-36.8-54.7s-34.2-28.2-54.7-36.8c-21.1-9-43.8-13.4-66.9-13.4s-45.8 4.5-66.9 13.4zm89.3 222.4v-128h19.2v128h-19.2zm-67.2 0v-128h19.2v128h-19.2z"],
    "ilu-no-results": [512,512,[],"e079","M464 483.2L353.9 373.1c-16.6 15-35.5 26.9-56.3 35.5c-22.7 9.3-47.4 14.1-72 14.1s-49-4.8-72-14.1c-23.7-9.6-45.1-24-63.4-41.9s-32.3-39.7-41.9-63.4c-9.3-22.7-14.1-47.4-14.1-72s4.8-49 14.1-72c9.6-23.7 24-45.1 41.9-63.4s39.7-32.3 63.4-41.9c22.7-9.3 47.4-14.1 72-14.1s49 4.8 72 14.1c23.7 9.6 45.1 24 63.4 41.9s32.3 39.7 41.9 63.4c9.3 22.7 14.1 47.4 14.1 72s-4.8 49-14.1 72c-8.3 20.8-20.5 39.7-35.5 56.3l110.1 110.1-13.4 13.4zM66.2 166.4c-8.3 20.5-12.5 42.6-12.5 64.6s4.2 44.2 12.5 64.6c8.6 21.4 21.4 40.6 37.8 57s35.5 29.1 57 37.8c20.5 8.3 42.6 12.5 64.6 12.5s44.2-4.2 64.6-12.5c21.4-8.6 40.6-21.4 57-37.8s29.1-35.5 37.8-57c8.3-20.5 12.5-42.6 12.5-64.6s-4.2-44.2-12.5-64.6c-8.6-21.4-21.4-40.6-37.8-57s-35.5-29.1-57-37.8c-20.5-8.3-42.6-12.5-64.6-12.5s-44.2 4.2-64.6 12.5c-21.4 8.6-40.6 21.4-57 37.8s-29.1 35.5-37.8 57h0zM277.1 296.3l-51.5-51.5-51.5 51.5-13.4-13.4 51.5-51.5-51.5-51.5 13.4-13.4 51.5 51.5 51.5-51.5 13.4 13.4-51.5 51.5 51.5 51.5-13.4 13.4z"],
    "ilu-sent": [512,512,[],"e075","M384.3 150.7c-1.6-1.6-4.2-2.2-6.4-1.3l-247.7 82.2c-2.2 .6-4.2 2.9-4.5 5.4c0 2.6 1 4.8 3.2 6.1l70.7 42.9s.6 1.9 1.3 2.6c0 0 .3 .3 .6 .6v54.4c0 2.6 1.3 4.8 3.5 5.8s4.8 1 6.7-.6l40.3-31 70.1 44.5s2.2 1 3.5 1c.6 0 1.6 0 2.2-.3c1.9-.6 3.2-2.2 3.8-4.2l54.7-201c.6-2.2 0-4.8-1.9-6.4zM147.2 239.4l196.8-65.3-110.1 81.9-26.6 19.8-59.8-36.2zm66.6 53.8l26.6 17-26.6 20.5v-37.4zm107.5 53.4l-65.6-41.3h0s-35.8-23.4-35.8-23.4l21.1-15.7 127.4-94.7-47.4 175z"],
    "ilu-stream-error": [512,512,[],"e078","M256 256c9 0 18.6 3.8 29.1 10.9c4.5 3.2 8.6 6.7 12.5 10.6l-9.3 9c-3.5-3.2-7-6.4-10.9-9.3c-8-5.4-15.4-8.6-21.4-8.6c-7.7 0-15.7 4.8-21.1 8.6c-3.5 2.6-7 5.8-10.2 9l-9.6-8.6c3.8-3.8 7.7-7.4 12.2-10.6c9.9-7.4 19.5-11.2 28.5-11.2zm52.5-51.8c7.7 0 14.1 6.4 14.1 14.1s-6.4 14.1-14.1 14.1-14.1-6.4-14.1-14.1 6.4-14.1 14.1-14.1zm-104.6 0c7.7 0 14.1 6.4 14.1 14.1s-6.4 14.1-14.1 14.1-14.1-6.4-14.1-14.1 6.4-14.1 14.1-14.1zM419.2 348.8H92.8c-3.5 0-6.4-2.9-6.4-6.4V128c0-3.5 2.9-6.4 6.4-6.4h326.4c3.5 0 6.4 2.9 6.4 6.4v214.4c0 3.5-2.9 6.4-6.4 6.4zM99.2 336h313.6V134.4H99.2V336zm230.4 51.2H182.4V400h147.2v-12.8z"],
    "ilu-stream-loader": [512,512,[],"e07a","M256 339.2V352c-52.8 0-96-43.2-96-96h12.8c0 45.8 37.4 83.2 83.2 83.2zM339.2 256H352c0-52.8-43.2-96-96-96v12.8c45.8 0 83.2 37.4 83.2 83.2z"],
    "jaialai": [512,512,[],"e06b","M73.3 407c-31.7-69.1 12.2-120.3 1-152.3S0 28.2 0 28.2L27.2 0 153.6 304s92.2 190.4 336 73.9c8.3-3.5 17.9 .6 21.4 9c3.2 7.7 0 17-7.7 20.8c-56.6 23.4-167.4 104.6-271 104.6c-59.2 0-115.8-26.2-159-105zM371.2 299.2c0-24.3 19.8-44.2 44.2-44.2s44.2 19.8 44.2 44.2-19.8 44.2-44.2 44.2s-44.2-19.8-44.2-44.2h0z"],
    "mma": [512,512,[],"e05f","M394.9 512H117.1c2.9-69.8 13.1-139.2 30.4-207h89l-48 97.6 31.7 15.7 36.5-74.2 57.9 117.8 31.7-15.7-55.7-113-13.8-28.2h87.4c17.3 67.8 27.5 137.3 30.4 207h0zM365.4 269.4H189.1L356.2 0h20.5c28.8 0 64 38.4 88.6 70.7c17 22.7 32.6 46.4 47 70.7l-64.6 74.2-70.7-59.2-11.2 113h0zm-217.6 0h-1.3l-11.2-113.3-70.7 59.2L0 141.4h0C14.1 116.8 29.8 93.1 46.7 70.7C71.4 38.4 106.6 0 135.4 0h32.3c25.6 44.8 57.6 100.5 70.4 123.5l-90.2 146.2h0zM259.5 89.3h0c-11.2-19.8-27.8-49-50.9-89.3h105.9l-55 89h0z"],
    "motorsport": [512,512,[],"e069","M412.2 511.7c-12.8 0-25.3-1.6-37.8-3.8l-260.5-90.2C17 369.6 0 343.4 0 243.5c0-32.6 6.7-65 19.5-94.7c12.5-29.1 30.7-55.4 53.4-77.4c23-22.4 49.9-40 79.4-52.2c78.4-32 167.4-23.4 238.1 23.4c40.3 26.6 71.7 64.6 90.2 109.1c4.5 7.7 8 16 10.6 24.6H279c-10.2 2.6-19.8 6.7-28.5 12.2c-18.9 11.8-30.4 33-30.1 55c1 33.3 24.3 61.4 56.6 69.1L512 405.8v8c0 38.7-9.9 65-29.4 80.3c-21.1 13.1-45.8 19.2-70.4 17.3zM150.1 211.8c-14.7 0-26.6 11.8-26.6 26.6s11.8 26.6 26.6 26.6 26.6-11.8 26.6-26.6-11.8-26.6-26.6-26.6zM511.7 368.3h0L289 280h-1s-1.3-.6-1.3-.6c-6.1-1.9-11.8-4.8-17-8.3c-9-6.1-14.1-16-14.1-26.9c-.3-10.2 4.8-19.8 13.4-25.3c4.8-3.2 9.9-5.4 15.4-7h215.4c3.8 21.8 6.4 43.5 8 65.6c2.2 26.9 3.2 56.3 3.8 90.9h0z"],
    "racetrack": [512,512,[],"e092","M348.5 118.4c-11.5 0-23 4.5-32 13.1l-185 185c-17.6 17.6-17.6 46.4 0 64c9 9 20.5 13.1 32 13.1s23-4.5 32-13.1l185-185c17.6-17.6 17.6-46.4 0-64c-9-9-20.5-13.1-32-13.1zM466.2 45.8c-59.8-59.8-157.4-59.8-217.3 0L45.8 249c-59.8 59.8-59.8 157.4 0 217.3s157.4 59.8 217.3 0L466.2 263c59.8-59.8 59.8-157.4 0-217.3zm-63 172.5l-185 185c-14.7 14.7-33.9 22.7-54.7 22.7s-40-8-54.7-22.7c-30.1-30.1-30.1-79 0-109.1l185-185c14.7-14.7 33.9-22.7 54.7-22.7s40 8 54.7 22.7s22.7 33.9 22.7 54.7s-8 40-22.7 54.7zM192.6 57L124.8 34.2 34.2 124.8 57 192.6 192.6 57z"],
    "rugby": [512,512,[],"e06e","M149.8 512h0c-37.8 0-75.2-5.8-111-17.6h0c26.6-60.5 60.2-117.4 99.8-169.9c4.8-6.7 9.9-13.4 15-19.8l22.7 22.7c7 7 17.9 7 25 0c0 0 0 0 0 0c7-7 7-18.2 0-25.3l-25-25.3c5.4-6.1 10.2-11.8 15-17l19.5 19.8c6.7 7 17.9 7 25 0c0 0 0 0 0 0c7-7 7-18.2 0-25.3l-20.2-20.5c5.1-5.1 10.2-10.2 15.4-15.4l21.1 21.1c7 7 17.9 7 25 0c0 0 0 0 0 0c7-7 7-18.2 0-25.3L257 193.9c6.1-5.4 11.8-10.6 17.3-15l24.6 24.6c6.7 7 17.9 7 25 0c0 0 0 0 0 0c6.7-7 6.7-18.2 0-25.3l-22.1-22.1c59.5-46.7 124.8-85.1 194.6-113.9c.3 1 .6 2.2 1 3.2c44.5 148.2-9.9 308.2-135.7 398.1c-61.8 44.2-135.7 68.2-211.5 68.2zM14.1 462.1h0c-55-192.3 56.3-393 248.6-448c66.6-19.2 137-18.6 203.2 1.3c.6 0 1.6 .3 2.2 .6c-68.8 30.1-133.4 68.8-192.3 115.5l-14.1-14.4c-7-7-17.9-7-25 0c0 0 0 0 0 0c-6.7 7-6.7 18.2 0 25.3l11.8 11.8c-5.4 4.8-11.2 9.9-17 15l-16-16.3c-7-7-17.9-7-25 0c0 0 0 0 0 0c-7 7-7 18.2 0 25.3l15.4 15.4c-4.8 4.8-9.9 9.6-15.4 15.4l-16-16.3c-6.7-7-17.9-7-25 0c0 0 0 0 0 0c-6.7 7-6.7 18.2 0 25.3l16.6 17c-4.8 5.4-9.9 10.9-15 17l-11.2-11.5c-7-7-17.9-7-25 0c0 0 0 0 0 0c-6.7 7-6.7 18.2 0 25.3l13.4 13.8c-6.1 7.4-12.2 15.4-18.6 24c-37.1 49.6-69.1 102.7-95.7 158.7h-.3z"],
    "snooker": [512,512,[],"e062","M256 512C114.6 512 0 397.4 0 256S114.6 0 256 0s256 114.6 256 256c0 67.8-26.9 133.1-74.9 181.1c-48 48.3-113 75.2-181.1 74.9zm0-476.8c-92.5 0-167.7 75.2-167.7 167.7s75.2 167.7 167.7 167.7 167.7-75.2 167.7-167.7h0c0-92.5-75.2-167.7-167.7-167.7zm0 300.2c-73.3 0-132.5-59.2-132.5-132.5S182.7 70.4 256 70.4 388.5 129.6 388.5 202.9h0c0 73-59.2 132.5-132.5 132.5zm0-236.8c-10.9 0-21.8 1.6-32 6.1c-8 3.5-14.7 9-19.5 16.3c-4.2 6.7-6.4 14.7-6.4 22.4c-.6 15 7.7 29.4 21.4 35.8c-7.7 3.5-14.1 9-18.9 16c-4.5 7.4-6.7 16-6.7 24.6c0 9.9 2.6 19.8 8.3 28.2c5.8 8 13.4 14.1 22.4 17.9c20.2 8.3 42.6 8.3 62.4 0c9-3.8 16.6-9.9 22.4-17.9c5.8-8.3 8.6-17.9 8.3-28.2c0-8.6-2.2-17-6.7-24.3c-4.8-7-11.2-12.8-18.9-16.3c6.4-3.5 11.8-8.3 15.7-14.4c3.8-6.4 6.1-14.1 5.8-21.4c0-8-2.2-15.7-6.4-22.4c-4.8-7-11.5-12.8-19.5-16.3c-9.9-4.2-20.8-6.4-32-6.1h0zm0 141.8c-6.4 0-12.8-1.9-17.6-6.1c-4.5-4.2-6.7-9.9-6.4-15.7c0-6.1 2.2-12.2 6.7-16c4.8-4.2 11.2-6.1 17.3-5.8c6.1 0 12.5 1.9 17 6.1s6.7 9.9 6.4 16c0 5.8-1.9 11.5-6.4 15.7c-4.8 4.2-10.9 6.4-17.3 6.1h0zm0-71.4c-5.1 0-10.2-1.6-14.1-5.1c-3.8-3.8-5.8-9-5.4-14.1c0-11.2 9.6-20.2 20.8-19.8c4.8 0 9.6 1.9 13.1 5.1c3.8 3.8 5.8 9.3 5.4 14.4c0 5.1-1.9 10.2-5.4 14.1c-3.8 3.5-9 5.4-14.4 5.4z"],
    "soccer": [512,512,[],"e06c","M257.3 512c-4.5 0-9 0-13.8-.3l-44.2-72.3 18.6-47.4 134.4-26.2 36.8 29.8-20.8 90.9c-34.6 17-72.6 25.6-111 25.6zm-59.2-6.7h0c-31.7-7.4-61.4-21.1-87.7-39.7l60.5-4.8 27.2 44.5h0zm212.2-44.5h0l13.8-59.8 51.8-13.1c-17 28.5-39 53.1-65.6 73h0zm.3-93.1h0l-36.2-29.1 15.4-132.2 41.3-25.3 78.1 36.2c1.9 12.8 2.9 25.6 2.9 38.7c0 30.7-5.4 61.4-16.3 90.2L410.6 368h0zM212.2 357.1h0l-58.6-111.7 84.2-98.2 116.8 59.2-14.7 125.8-127.4 24.6h0zM67.8 256.3l54.1 4.2 62.7 119.7-17.9 45.4-94.1 7.4c-27.8-29.1-48.3-64.3-59.8-102.7l54.7-73.9zM14.1 172.5C4.8 198.7 0 226.9 0 256C0 265.3 0 274.2 1.6 283.5l35.5-47.7-23-63.4zM200.6 72l-88-28.5c-32 21.4-58.6 49.9-78.1 83.2l34.2 94.4 53.8 4.2 87.7-102.4-9.6-50.9zM255 0c-35.5 0-68.8 7-99.2 20.2L213.8 39 257 0h-2.2zM449 87.4v63l49.6 23.4c-10.9-32.3-28.2-61.4-49.6-86.4zM237.8 66.6l8.6 45.4 126.1 64 41-25.3V54.1c-30.7-24.3-67.2-41.6-106.9-49.3l-69.1 61.8zM413.4 54.1h0s1.6 1 2.2 1.6c-.6-.6-1.6-1-2.2-1.6z"],
    "sportgeneric": [512,512,[],"e05d","M141.4 512v-17.6c0-9.6 8-17.6 17.6-17.6h17.6v-17.6c0-9.6 8-17.6 17.6-17.6h123.5c9.6 0 17.6 8 17.6 17.6v17.6H353c9.6 0 17.6 8 17.6 17.6V512H141.1zm70.4-105.9v-17.6c0-9.6 8-17.6 17.6-17.6v-35.2c-34.9-2.9-66.2-21.1-85.8-50.2c-.6 1.9-1.3 3.8-1.9 5.8c-4.8 10.9-14.4 19.5-25.6 23.4c-6.4 2.2-13.4 3.5-20.2 3.2c-6.7 0-13.8-1-20.5-2.6c-9.6-2.2-15.4-11.8-13.1-21.1c1.9-8 9-13.8 17.3-13.4c1.3 0 2.9 0 4.2 .6c14.7 3.5 23.7 .6 25.6-3.8c1.6-3.5-.6-9.6-7.4-14.1c-.3 0-.6-.3-1-.6c-13.8-10.2-27.5-19.2-39.7-26.9c-17.6-9.9-33.6-22.1-47.4-36.5C0 182.7-3.8 159.7 4.2 139.8c4.8-13.4 14.7-24.6 27.5-30.7c23.7-8.6 49.9-9.6 74.2-2.6V70.4h300.2v36.2c24.3-7 50.2-6.1 74.2 2.6c13.1 6.1 23 17 27.5 30.7c8 19.8 4.5 42.6-9.6 58.9c-13.8 14.4-30.1 26.9-47.4 36.5c-12.2 7.7-25.9 16.6-39.7 26.9c-.3 0-.6 .3-1 .6c-7 4.5-9 10.6-7.4 14.1c1.9 4.5 10.6 7.4 25.6 3.8c1.3-.3 2.9-.6 4.2-.6c9.6 0 17.6 7.7 17.6 17.6c0 8.3-5.4 15.4-13.4 17.3c-6.7 1.6-13.4 2.6-20.5 2.6c-6.7 0-13.8-1-20.2-3.2c-13.4-4.5-24-15.4-27.8-29.1c-19.5 28.8-50.9 47.4-85.8 50.2h0v35.2c9.6 0 17.6 8 17.6 17.6v17.6h-88.3zM406.1 143.4v45.1c0 13.4-2.6 26.6-7 39c11.5-8.3 22.7-15.4 32.6-21.8c14.4-8 27.5-17.9 39.4-29.4c6.1-6.7 7.7-16.6 3.5-24.6c-1.6-4.8-5.1-8.6-9.6-10.6c-6.7-2.9-13.8-4.2-20.8-3.8c-13.1 .3-25.9 2.2-38.4 6.1zM47 141.1c-4.5 1.9-8 5.8-9.6 10.6c-4.2 8.3-2.6 17.9 3.5 24.6c11.8 11.5 25 21.4 39.4 29.4c9.9 6.4 21.1 13.4 32.6 21.8c-4.2-12.5-6.7-25.6-7-39v-45.1c-12.5-3.5-25.3-5.4-38.1-5.8c-7 0-14.1 1-20.8 3.8h0zM105.9 35.2c-9.6 0-17.6-8-17.6-17.6S96.3 0 105.9 0h300.2c9.6 0 17.6 8 17.6 17.6s-8 17.6-17.6 17.6H105.9z"],
    "table-tenn": [512,512,[],"e05c","M406.1 458.9c0-29.1 23.7-53.1 52.8-53.1s52.8 23.7 52.8 53.1-23.7 53.1-52.8 53.1-52.8-23.7-52.8-53.1zM44.2 503L8.6 467.5C-2.6 457.3-3.2 440 7 428.8l121.3-111.4c8.3-8.3 2.2-28.2-.6-36.2c-12.2-18.6-20.5-39.7-24.3-61.4l188.5 188.5c-22.1-3.8-42.9-12.2-61.4-24.3c-6.4-2.2-27.5-9.3-36.2-.6L82.9 504.6c-4.8 4.8-11.2 7.4-17.9 7.4c-8 0-15.4-3.2-20.8-9h0zm293.4-96L105 174.4c5.1-21.1 14.4-41 27.2-58.6c14.1-19.8 30.1-38.4 47.7-55.4C217 23 267.2 1.3 320 0c102.7-3.2 188.8 77.8 192 180.5c0 3.8 0 7.7 0 11.5c-1.3 52.8-23 102.7-60.5 139.8c-17 17.6-35.5 33.6-55.4 47.7c-17.6 12.8-37.4 22.1-58.6 27.2h0z"],
    "tennis": [512,512,[],"e065","M257 512C115.8 512.6 .6 398.4 0 257C-.6 121.6 104 9 238.7 0c-1 15-7.7 29.1-18.2 40l-74.2 75.2-1.3 1.3c-68.8 70.1-68.2 182.7 1.3 252.2c33 33 78.1 51.5 124.8 51.5h1c47 0 92.2-19.2 125.1-52.8l74.6-74.9c10.6-10.9 25-17.3 40.3-18.2c-9.6 134.1-121 238.1-255 238.1h0zM271 384.6c-37.4 0-73.3-14.7-99.8-41.3c-55.7-55.7-56.3-145.9-1-201.9L245.4 65C262.7 47.7 273 24.3 273.9 0c127.7 8.6 229.4 110.7 238.1 238.7c-24.6 1-47.7 11.2-65.3 28.8l-74.6 74.9h0c-26.6 26.9-62.4 42.2-100.2 42.2h-1z"],
    "volley": [512,512,[],"e066","M85.4 448h0c-25.3-22.7-46.1-50.2-60.5-81.3c11.8-29.4 27.5-57.6 46.7-82.9c19.8-26.2 43.5-49.6 70.4-68.5c29.4-20.5 62.4-35.2 97.6-43.2c4.5 25.3 5.1 51.5 1.6 77.1c-28.5 12.2-54.7 28.8-77.8 49.6c-23.7 20.8-42.9 46.4-56.6 74.6c-11.2 23.4-18.6 48.6-21.4 74.6h0zM417 412.8c-14.7 0-29.4-1-44.2-2.9c-32.6-3.8-64.3-12.8-94.4-26.9c-32.3-15.4-61.8-36.8-86.1-63c19.8-17 42.2-30.4 66.6-40h0c23.7 17 49.6 30.4 77.4 39.4c24.3 8 49.9 12.2 75.5 12.5c5.8 0 11.5 0 17-.6c26.6-2.2 52.5-8.6 76.8-19.5c-8 35.5-23 69.1-44.8 98.6c-14.7 1.9-29.4 2.9-44.2 2.9h0zM7.7 319h0C-1 285.1-2.2 249.6 3.2 215c36.2-47.7 109.8-128.3 197.8-132.5c12.8 16.6 22.7 35.5 29.4 55.4c-39.4 9-76.5 25.6-109.4 49c-30.1 21.4-56.6 47-78.4 76.8c-13.1 17.6-24.6 35.8-34.9 55.4h0zm404.8-22.7c-12.8 0-25.3-1.3-37.8-3.8c11.8-38.7 16-79 12.5-119.4c-3.5-36.5-12.5-72.3-27.2-106.2c-8.3-19.2-17.9-38.1-29.1-55.7c34.2 10.6 65.9 28.2 93.1 51.8c14.4 34.9 24.3 71 29.8 108.5c7 41.9 1.3 84.8-17 123.5c-8 1-16.3 1.6-24.6 1.6h0zM480 284.2h0c7.4-22.4 11.2-45.8 11.5-69.4c.3-24.6-1.9-49.3-7-73.3c18.2 35.8 27.5 75.5 27.2 115.5c0 4.2 0 8.3 0 12.5c-10.2 5.8-20.8 10.9-31.7 15h0zm-139.5-1h0c-22.7-8.3-44.5-19.8-64-34.6c3.5-30.4 2.2-61.1-4.2-91.2c-6.4-30.7-18.6-60.2-36.2-86.4c-15.7-23-35.5-42.9-58.2-58.9c-13.8 4.5-26.9 9.9-39.7 16.6c11.5 6.4 22.1 13.8 32.3 22.1c-23 4.8-45.4 13.1-65.9 24.6c-25 14.1-48.3 31-69.1 50.9c3.8-6.4 8-12.8 12.5-19.2c15.4-21.8 34.2-41 55.7-56.6C161.9 7 236.8-9.6 308.5 5.4c-9-1.9-18.2-3.2-27.5-4.2c19.2 24.6 35.2 51.8 47.4 80.6c12.8 30.4 21.1 62.4 24 95.4c2.9 35.8-1 71.7-11.5 105.9h0zm76.8 165.1c-16 0-31.7-1-47.7-2.9c-36.5-4.2-72-14.1-105.3-29.8c-36.5-17-69.4-41-97-70.4c-13.8 16-25 33.9-33.3 53.4c23 33.3 55.4 58.9 92.8 73.6c33.9 14.4 69.1 24.3 105.6 29.4c34.9-10.6 66.6-28.8 94.1-53.4h-9.3zM121.9 441c-1.9 10.9-2.9 21.8-2.9 32.6c33.9 21.4 72.3 34.6 112 38.4c-18.9-7-37.1-15.7-54.4-26.2c-20.2-12.2-38.7-27.2-54.4-44.8z"]

  };
  var prefixes = [null    ,'fak',
    ,'fa-kit'
];
  bunker(() => {
    for (const prefix of prefixes) {
      if (!prefix) continue;
      defineIcons(prefix, icons);
    }
  });

}());


/*!
 * Font Awesome Pro 6.7.2 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license (Commercial License)
 * Copyright 2024 Fonticons, Inc.
 */
(function () {
  'use strict';

  function _defineProperty(e, r, t) {
    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
      value: t,
      enumerable: !0,
      configurable: !0,
      writable: !0
    }) : e[r] = t, e;
  }
  function _inherits(t, e) {
    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, {
      constructor: {
        value: t,
        writable: !0,
        configurable: !0
      }
    }), Object.defineProperty(t, "prototype", {
      writable: !1
    }), e && _setPrototypeOf(t, e);
  }
  function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
      var o = Object.getOwnPropertySymbols(e);
      r && (o = o.filter(function (r) {
        return Object.getOwnPropertyDescriptor(e, r).enumerable;
      })), t.push.apply(t, o);
    }
    return t;
  }
  function _objectSpread2(e) {
    for (var r = 1; r < arguments.length; r++) {
      var t = null != arguments[r] ? arguments[r] : {};
      r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {
        _defineProperty(e, r, t[r]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {
        Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
      });
    }
    return e;
  }
  function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {
      return t.__proto__ = e, t;
    }, _setPrototypeOf(t, e);
  }
  function _toPrimitive(t, r) {
    if ("object" != typeof t || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
      var i = e.call(t, r || "default");
      if ("object" != typeof i) return i;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
  }
  function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == typeof i ? i : i + "";
  }
  function _wrapRegExp() {
    _wrapRegExp = function (e, r) {
      return new BabelRegExp(e, void 0, r);
    };
    var e = RegExp.prototype,
      r = new WeakMap();
    function BabelRegExp(e, t, p) {
      var o = RegExp(e, t);
      return r.set(o, p || r.get(e)), _setPrototypeOf(o, BabelRegExp.prototype);
    }
    function buildGroups(e, t) {
      var p = r.get(t);
      return Object.keys(p).reduce(function (r, t) {
        var o = p[t];
        if ("number" == typeof o) r[t] = e[o];else {
          for (var i = 0; void 0 === e[o[i]] && i + 1 < o.length;) i++;
          r[t] = e[o[i]];
        }
        return r;
      }, Object.create(null));
    }
    return _inherits(BabelRegExp, RegExp), BabelRegExp.prototype.exec = function (r) {
      var t = e.exec.call(this, r);
      if (t) {
        t.groups = buildGroups(t, this);
        var p = t.indices;
        p && (p.groups = buildGroups(p, this));
      }
      return t;
    }, BabelRegExp.prototype[Symbol.replace] = function (t, p) {
      if ("string" == typeof p) {
        var o = r.get(this);
        return e[Symbol.replace].call(this, t, p.replace(/\$<([^>]+)>/g, function (e, r) {
          var t = o[r];
          return "$" + (Array.isArray(t) ? t.join("$") : t);
        }));
      }
      if ("function" == typeof p) {
        var i = this;
        return e[Symbol.replace].call(this, t, function () {
          var e = arguments;
          return "object" != typeof e[e.length - 1] && (e = [].slice.call(e)).push(buildGroups(e, i)), p.apply(this, e);
        });
      }
      return e[Symbol.replace].call(this, t, p);
    }, _wrapRegExp.apply(this, arguments);
  }

  const noop = () => {};
  let _WINDOW = {};
  let _DOCUMENT = {};
  let _MUTATION_OBSERVER = null;
  let _PERFORMANCE = {
    mark: noop,
    measure: noop
  };
  try {
    if (typeof window !== 'undefined') _WINDOW = window;
    if (typeof document !== 'undefined') _DOCUMENT = document;
    if (typeof MutationObserver !== 'undefined') _MUTATION_OBSERVER = MutationObserver;
    if (typeof performance !== 'undefined') _PERFORMANCE = performance;
  } catch (e) {}
  const {
    userAgent = ''
  } = _WINDOW.navigator || {};
  const WINDOW = _WINDOW;
  const DOCUMENT = _DOCUMENT;
  const MUTATION_OBSERVER = _MUTATION_OBSERVER;
  const PERFORMANCE = _PERFORMANCE;
  const IS_BROWSER = !!WINDOW.document;
  const IS_DOM = !!DOCUMENT.documentElement && !!DOCUMENT.head && typeof DOCUMENT.addEventListener === 'function' && typeof DOCUMENT.createElement === 'function';
  const IS_IE = ~userAgent.indexOf('MSIE') || ~userAgent.indexOf('Trident/');

  var p = /fa(s|r|l|t|d|dr|dl|dt|b|k|kd|ss|sr|sl|st|sds|sdr|sdl|sdt)?[\-\ ]/,
    g = /Font ?Awesome ?([56 ]*)(Solid|Regular|Light|Thin|Duotone|Brands|Free|Pro|Sharp Duotone|Sharp|Kit)?.*/i;
  var S = {
      classic: {
        fa: "solid",
        fas: "solid",
        "fa-solid": "solid",
        far: "regular",
        "fa-regular": "regular",
        fal: "light",
        "fa-light": "light",
        fat: "thin",
        "fa-thin": "thin",
        fab: "brands",
        "fa-brands": "brands"
      },
      duotone: {
        fa: "solid",
        fad: "solid",
        "fa-solid": "solid",
        "fa-duotone": "solid",
        fadr: "regular",
        "fa-regular": "regular",
        fadl: "light",
        "fa-light": "light",
        fadt: "thin",
        "fa-thin": "thin"
      },
      sharp: {
        fa: "solid",
        fass: "solid",
        "fa-solid": "solid",
        fasr: "regular",
        "fa-regular": "regular",
        fasl: "light",
        "fa-light": "light",
        fast: "thin",
        "fa-thin": "thin"
      },
      "sharp-duotone": {
        fa: "solid",
        fasds: "solid",
        "fa-solid": "solid",
        fasdr: "regular",
        "fa-regular": "regular",
        fasdl: "light",
        "fa-light": "light",
        fasdt: "thin",
        "fa-thin": "thin"
      }
    },
    A = {
      GROUP: "duotone-group",
      SWAP_OPACITY: "swap-opacity",
      PRIMARY: "primary",
      SECONDARY: "secondary"
    },
    P = ["fa-classic", "fa-duotone", "fa-sharp", "fa-sharp-duotone"];
  var s = "classic",
    t = "duotone",
    r = "sharp",
    o = "sharp-duotone",
    L = [s, t, r, o];
  var G = {
      classic: {
        900: "fas",
        400: "far",
        normal: "far",
        300: "fal",
        100: "fat"
      },
      duotone: {
        900: "fad",
        400: "fadr",
        300: "fadl",
        100: "fadt"
      },
      sharp: {
        900: "fass",
        400: "fasr",
        300: "fasl",
        100: "fast"
      },
      "sharp-duotone": {
        900: "fasds",
        400: "fasdr",
        300: "fasdl",
        100: "fasdt"
      }
    };
  var lt = {
      "Font Awesome 6 Free": {
        900: "fas",
        400: "far"
      },
      "Font Awesome 6 Pro": {
        900: "fas",
        400: "far",
        normal: "far",
        300: "fal",
        100: "fat"
      },
      "Font Awesome 6 Brands": {
        400: "fab",
        normal: "fab"
      },
      "Font Awesome 6 Duotone": {
        900: "fad",
        400: "fadr",
        normal: "fadr",
        300: "fadl",
        100: "fadt"
      },
      "Font Awesome 6 Sharp": {
        900: "fass",
        400: "fasr",
        normal: "fasr",
        300: "fasl",
        100: "fast"
      },
      "Font Awesome 6 Sharp Duotone": {
        900: "fasds",
        400: "fasdr",
        normal: "fasdr",
        300: "fasdl",
        100: "fasdt"
      }
    };
  var pt = new Map([["classic", {
      defaultShortPrefixId: "fas",
      defaultStyleId: "solid",
      styleIds: ["solid", "regular", "light", "thin", "brands"],
      futureStyleIds: [],
      defaultFontWeight: 900
    }], ["sharp", {
      defaultShortPrefixId: "fass",
      defaultStyleId: "solid",
      styleIds: ["solid", "regular", "light", "thin"],
      futureStyleIds: [],
      defaultFontWeight: 900
    }], ["duotone", {
      defaultShortPrefixId: "fad",
      defaultStyleId: "solid",
      styleIds: ["solid", "regular", "light", "thin"],
      futureStyleIds: [],
      defaultFontWeight: 900
    }], ["sharp-duotone", {
      defaultShortPrefixId: "fasds",
      defaultStyleId: "solid",
      styleIds: ["solid", "regular", "light", "thin"],
      futureStyleIds: [],
      defaultFontWeight: 900
    }]]),
    xt = {
      classic: {
        solid: "fas",
        regular: "far",
        light: "fal",
        thin: "fat",
        brands: "fab"
      },
      duotone: {
        solid: "fad",
        regular: "fadr",
        light: "fadl",
        thin: "fadt"
      },
      sharp: {
        solid: "fass",
        regular: "fasr",
        light: "fasl",
        thin: "fast"
      },
      "sharp-duotone": {
        solid: "fasds",
        regular: "fasdr",
        light: "fasdl",
        thin: "fasdt"
      }
    };
  var Ft = ["fak", "fa-kit", "fakd", "fa-kit-duotone"],
    St = {
      kit: {
        fak: "kit",
        "fa-kit": "kit"
      },
      "kit-duotone": {
        fakd: "kit-duotone",
        "fa-kit-duotone": "kit-duotone"
      }
    },
    At = ["kit"];
  var Ct = {
    kit: {
      "fa-kit": "fak"
    },
    "kit-duotone": {
      "fa-kit-duotone": "fakd"
    }
  };
  var Lt = ["fak", "fakd"],
    Wt = {
      kit: {
        fak: "fa-kit"
      },
      "kit-duotone": {
        fakd: "fa-kit-duotone"
      }
    };
  var Et = {
      kit: {
        kit: "fak"
      },
      "kit-duotone": {
        "kit-duotone": "fakd"
      }
    };

  var t$1 = {
      GROUP: "duotone-group",
      SWAP_OPACITY: "swap-opacity",
      PRIMARY: "primary",
      SECONDARY: "secondary"
    },
    r$1 = ["fa-classic", "fa-duotone", "fa-sharp", "fa-sharp-duotone"];
  var bt$1 = ["fak", "fa-kit", "fakd", "fa-kit-duotone"];
  var Yt = {
      "Font Awesome Kit": {
        400: "fak",
        normal: "fak"
      },
      "Font Awesome Kit Duotone": {
        400: "fakd",
        normal: "fakd"
      }
    };
  var ua = {
      classic: {
        "fa-brands": "fab",
        "fa-duotone": "fad",
        "fa-light": "fal",
        "fa-regular": "far",
        "fa-solid": "fas",
        "fa-thin": "fat"
      },
      duotone: {
        "fa-regular": "fadr",
        "fa-light": "fadl",
        "fa-thin": "fadt"
      },
      sharp: {
        "fa-solid": "fass",
        "fa-regular": "fasr",
        "fa-light": "fasl",
        "fa-thin": "fast"
      },
      "sharp-duotone": {
        "fa-solid": "fasds",
        "fa-regular": "fasdr",
        "fa-light": "fasdl",
        "fa-thin": "fasdt"
      }
    },
    I$1 = {
      classic: ["fas", "far", "fal", "fat", "fad"],
      duotone: ["fadr", "fadl", "fadt"],
      sharp: ["fass", "fasr", "fasl", "fast"],
      "sharp-duotone": ["fasds", "fasdr", "fasdl", "fasdt"]
    },
    ga = {
      classic: {
        fab: "fa-brands",
        fad: "fa-duotone",
        fal: "fa-light",
        far: "fa-regular",
        fas: "fa-solid",
        fat: "fa-thin"
      },
      duotone: {
        fadr: "fa-regular",
        fadl: "fa-light",
        fadt: "fa-thin"
      },
      sharp: {
        fass: "fa-solid",
        fasr: "fa-regular",
        fasl: "fa-light",
        fast: "fa-thin"
      },
      "sharp-duotone": {
        fasds: "fa-solid",
        fasdr: "fa-regular",
        fasdl: "fa-light",
        fasdt: "fa-thin"
      }
    },
    x = ["fa-solid", "fa-regular", "fa-light", "fa-thin", "fa-duotone", "fa-brands"],
    Ia = ["fa", "fas", "far", "fal", "fat", "fad", "fadr", "fadl", "fadt", "fab", "fass", "fasr", "fasl", "fast", "fasds", "fasdr", "fasdl", "fasdt", ...r$1, ...x],
    m$1 = ["solid", "regular", "light", "thin", "duotone", "brands"],
    c$1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
    F$1 = c$1.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]),
    ma = [...Object.keys(I$1), ...m$1, "2xs", "xs", "sm", "lg", "xl", "2xl", "beat", "border", "fade", "beat-fade", "bounce", "flip-both", "flip-horizontal", "flip-vertical", "flip", "fw", "inverse", "layers-counter", "layers-text", "layers", "li", "pull-left", "pull-right", "pulse", "rotate-180", "rotate-270", "rotate-90", "rotate-by", "shake", "spin-pulse", "spin-reverse", "spin", "stack-1x", "stack-2x", "stack", "ul", t$1.GROUP, t$1.SWAP_OPACITY, t$1.PRIMARY, t$1.SECONDARY].concat(c$1.map(a => "".concat(a, "x"))).concat(F$1.map(a => "w-".concat(a)));
  var wa = {
      "Font Awesome 5 Free": {
        900: "fas",
        400: "far"
      },
      "Font Awesome 5 Pro": {
        900: "fas",
        400: "far",
        normal: "far",
        300: "fal"
      },
      "Font Awesome 5 Brands": {
        400: "fab",
        normal: "fab"
      },
      "Font Awesome 5 Duotone": {
        900: "fad"
      }
    };

  const NAMESPACE_IDENTIFIER = '___FONT_AWESOME___';
  const UNITS_IN_GRID = 16;
  const DEFAULT_CSS_PREFIX = 'fa';
  const DEFAULT_REPLACEMENT_CLASS = 'svg-inline--fa';
  const DATA_FA_I2SVG = 'data-fa-i2svg';
  const DATA_FA_PSEUDO_ELEMENT = 'data-fa-pseudo-element';
  const DATA_FA_PSEUDO_ELEMENT_PENDING = 'data-fa-pseudo-element-pending';
  const DATA_PREFIX = 'data-prefix';
  const DATA_ICON = 'data-icon';
  const HTML_CLASS_I2SVG_BASE_CLASS = 'fontawesome-i2svg';
  const MUTATION_APPROACH_ASYNC = 'async';
  const TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS = ['HTML', 'HEAD', 'STYLE', 'SCRIPT'];
  const PRODUCTION = (() => {
    try {
      return "production" === 'production';
    } catch (e$$1) {
      return false;
    }
  })();
  function familyProxy(obj) {
    // Defaults to the classic family if family is not available
    return new Proxy(obj, {
      get(target, prop) {
        return prop in target ? target[prop] : target[s];
      }
    });
  }
  const _PREFIX_TO_STYLE = _objectSpread2({}, S);

  // We changed FACSSClassesToStyleId in the icons repo to be canonical and as such, "classic" family does not have any
  // duotone styles.  But we do still need duotone in _PREFIX_TO_STYLE below, so we are manually adding
  // {'fa-duotone': 'duotone'}
  _PREFIX_TO_STYLE[s] = _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, {
    'fa-duotone': 'duotone'
  }), S[s]), St['kit']), St['kit-duotone']);
  const PREFIX_TO_STYLE = familyProxy(_PREFIX_TO_STYLE);
  const _STYLE_TO_PREFIX = _objectSpread2({}, xt);

  // We changed FAStyleIdToShortPrefixId in the icons repo to be canonical and as such, "classic" family does not have any
  // duotone styles.  But we do still need duotone in _STYLE_TO_PREFIX below, so we are manually adding {duotone: 'fad'}
  _STYLE_TO_PREFIX[s] = _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, {
    duotone: 'fad'
  }), _STYLE_TO_PREFIX[s]), Et['kit']), Et['kit-duotone']);
  const STYLE_TO_PREFIX = familyProxy(_STYLE_TO_PREFIX);
  const _PREFIX_TO_LONG_STYLE = _objectSpread2({}, ga);
  _PREFIX_TO_LONG_STYLE[s] = _objectSpread2(_objectSpread2({}, _PREFIX_TO_LONG_STYLE[s]), Wt['kit']);
  const PREFIX_TO_LONG_STYLE = familyProxy(_PREFIX_TO_LONG_STYLE);
  const _LONG_STYLE_TO_PREFIX = _objectSpread2({}, ua);
  _LONG_STYLE_TO_PREFIX[s] = _objectSpread2(_objectSpread2({}, _LONG_STYLE_TO_PREFIX[s]), Ct['kit']);
  const LONG_STYLE_TO_PREFIX = familyProxy(_LONG_STYLE_TO_PREFIX);
  const ICON_SELECTION_SYNTAX_PATTERN = p; // eslint-disable-line no-useless-escape

  const LAYERS_TEXT_CLASSNAME = 'fa-layers-text';
  const FONT_FAMILY_PATTERN = g;
  const _FONT_WEIGHT_TO_PREFIX = _objectSpread2({}, G);
  const FONT_WEIGHT_TO_PREFIX = familyProxy(_FONT_WEIGHT_TO_PREFIX);
  const ATTRIBUTES_WATCHED_FOR_MUTATION = ['class', 'data-prefix', 'data-icon', 'data-fa-transform', 'data-fa-mask'];
  const DUOTONE_CLASSES = A;
  const RESERVED_CLASSES = [...At, ...ma];

  const initial = WINDOW.FontAwesomeConfig || {};
  function getAttrConfig(attr) {
    var element = DOCUMENT.querySelector('script[' + attr + ']');
    if (element) {
      return element.getAttribute(attr);
    }
  }
  function coerce(val) {
    // Getting an empty string will occur if the attribute is set on the HTML tag but without a value
    // We'll assume that this is an indication that it should be toggled to true
    if (val === '') return true;
    if (val === 'false') return false;
    if (val === 'true') return true;
    return val;
  }
  if (DOCUMENT && typeof DOCUMENT.querySelector === 'function') {
    const attrs = [['data-family-prefix', 'familyPrefix'], ['data-css-prefix', 'cssPrefix'], ['data-family-default', 'familyDefault'], ['data-style-default', 'styleDefault'], ['data-replacement-class', 'replacementClass'], ['data-auto-replace-svg', 'autoReplaceSvg'], ['data-auto-add-css', 'autoAddCss'], ['data-auto-a11y', 'autoA11y'], ['data-search-pseudo-elements', 'searchPseudoElements'], ['data-observe-mutations', 'observeMutations'], ['data-mutate-approach', 'mutateApproach'], ['data-keep-original-source', 'keepOriginalSource'], ['data-measure-performance', 'measurePerformance'], ['data-show-missing-icons', 'showMissingIcons']];
    attrs.forEach(_ref => {
      let [attr, key] = _ref;
      const val = coerce(getAttrConfig(attr));
      if (val !== undefined && val !== null) {
        initial[key] = val;
      }
    });
  }
  const _default = {
    styleDefault: 'solid',
    familyDefault: s,
    cssPrefix: DEFAULT_CSS_PREFIX,
    replacementClass: DEFAULT_REPLACEMENT_CLASS,
    autoReplaceSvg: true,
    autoAddCss: true,
    autoA11y: true,
    searchPseudoElements: false,
    observeMutations: true,
    mutateApproach: 'async',
    keepOriginalSource: true,
    measurePerformance: false,
    showMissingIcons: true
  };

  // familyPrefix is deprecated but we must still support it if present
  if (initial.familyPrefix) {
    initial.cssPrefix = initial.familyPrefix;
  }
  const _config = _objectSpread2(_objectSpread2({}, _default), initial);
  if (!_config.autoReplaceSvg) _config.observeMutations = false;
  const config = {};
  Object.keys(_default).forEach(key => {
    Object.defineProperty(config, key, {
      enumerable: true,
      set: function (val) {
        _config[key] = val;
        _onChangeCb.forEach(cb => cb(config));
      },
      get: function () {
        return _config[key];
      }
    });
  });

  // familyPrefix is deprecated as of 6.2.0 and should be removed in 7.0.0
  Object.defineProperty(config, 'familyPrefix', {
    enumerable: true,
    set: function (val) {
      _config.cssPrefix = val;
      _onChangeCb.forEach(cb => cb(config));
    },
    get: function () {
      return _config.cssPrefix;
    }
  });
  WINDOW.FontAwesomeConfig = config;
  const _onChangeCb = [];
  function onChange(cb) {
    _onChangeCb.push(cb);
    return () => {
      _onChangeCb.splice(_onChangeCb.indexOf(cb), 1);
    };
  }

  const d$2 = UNITS_IN_GRID;
  const meaninglessTransform = {
    size: 16,
    x: 0,
    y: 0,
    rotate: 0,
    flipX: false,
    flipY: false
  };
  function bunker(fn) {
    try {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }
      fn(...args);
    } catch (e) {
      if (!PRODUCTION) {
        throw e;
      }
    }
  }
  function insertCss(css) {
    if (!css || !IS_DOM) {
      return;
    }
    const style = DOCUMENT.createElement('style');
    style.setAttribute('type', 'text/css');
    style.innerHTML = css;
    const headChildren = DOCUMENT.head.childNodes;
    let beforeChild = null;
    for (let i = headChildren.length - 1; i > -1; i--) {
      const child = headChildren[i];
      const tagName = (child.tagName || '').toUpperCase();
      if (['STYLE', 'LINK'].indexOf(tagName) > -1) {
        beforeChild = child;
      }
    }
    DOCUMENT.head.insertBefore(style, beforeChild);
    return css;
  }
  const idPool = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
  function nextUniqueId() {
    let size = 12;
    let id = '';
    while (size-- > 0) {
      id += idPool[Math.random() * 62 | 0];
    }
    return id;
  }
  function toArray(obj) {
    const array = [];
    for (let i = (obj || []).length >>> 0; i--;) {
      array[i] = obj[i];
    }
    return array;
  }
  function classArray(node) {
    if (node.classList) {
      return toArray(node.classList);
    } else {
      return (node.getAttribute('class') || '').split(' ').filter(i => i);
    }
  }
  function htmlEscape(str) {
    return "".concat(str).replace(/&/g, '&amp;').replace(/"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
  }
  function joinAttributes(attributes) {
    return Object.keys(attributes || {}).reduce((acc, attributeName) => {
      return acc + "".concat(attributeName, "=\"").concat(htmlEscape(attributes[attributeName]), "\" ");
    }, '').trim();
  }
  function joinStyles(styles) {
    return Object.keys(styles || {}).reduce((acc, styleName) => {
      return acc + "".concat(styleName, ": ").concat(styles[styleName].trim(), ";");
    }, '');
  }
  function transformIsMeaningful(transform) {
    return transform.size !== meaninglessTransform.size || transform.x !== meaninglessTransform.x || transform.y !== meaninglessTransform.y || transform.rotate !== meaninglessTransform.rotate || transform.flipX || transform.flipY;
  }
  function transformForSvg(_ref) {
    let {
      transform,
      containerWidth,
      iconWidth
    } = _ref;
    const outer = {
      transform: "translate(".concat(containerWidth / 2, " 256)")
    };
    const innerTranslate = "translate(".concat(transform.x * 32, ", ").concat(transform.y * 32, ") ");
    const innerScale = "scale(".concat(transform.size / 16 * (transform.flipX ? -1 : 1), ", ").concat(transform.size / 16 * (transform.flipY ? -1 : 1), ") ");
    const innerRotate = "rotate(".concat(transform.rotate, " 0 0)");
    const inner = {
      transform: "".concat(innerTranslate, " ").concat(innerScale, " ").concat(innerRotate)
    };
    const path = {
      transform: "translate(".concat(iconWidth / 2 * -1, " -256)")
    };
    return {
      outer,
      inner,
      path
    };
  }
  function transformForCss(_ref2) {
    let {
      transform,
      width = UNITS_IN_GRID,
      height = UNITS_IN_GRID,
      startCentered = false
    } = _ref2;
    let val = '';
    if (startCentered && IS_IE) {
      val += "translate(".concat(transform.x / d$2 - width / 2, "em, ").concat(transform.y / d$2 - height / 2, "em) ");
    } else if (startCentered) {
      val += "translate(calc(-50% + ".concat(transform.x / d$2, "em), calc(-50% + ").concat(transform.y / d$2, "em)) ");
    } else {
      val += "translate(".concat(transform.x / d$2, "em, ").concat(transform.y / d$2, "em) ");
    }
    val += "scale(".concat(transform.size / d$2 * (transform.flipX ? -1 : 1), ", ").concat(transform.size / d$2 * (transform.flipY ? -1 : 1), ") ");
    val += "rotate(".concat(transform.rotate, "deg) ");
    return val;
  }

  var baseStyles = ":host,:root{--fa-font-solid:normal 900 1em/1 \"Font Awesome 6 Pro\";--fa-font-regular:normal 400 1em/1 \"Font Awesome 6 Pro\";--fa-font-light:normal 300 1em/1 \"Font Awesome 6 Pro\";--fa-font-thin:normal 100 1em/1 \"Font Awesome 6 Pro\";--fa-font-duotone:normal 900 1em/1 \"Font Awesome 6 Duotone\";--fa-font-duotone-regular:normal 400 1em/1 \"Font Awesome 6 Duotone\";--fa-font-duotone-light:normal 300 1em/1 \"Font Awesome 6 Duotone\";--fa-font-duotone-thin:normal 100 1em/1 \"Font Awesome 6 Duotone\";--fa-font-brands:normal 400 1em/1 \"Font Awesome 6 Brands\";--fa-font-sharp-solid:normal 900 1em/1 \"Font Awesome 6 Sharp\";--fa-font-sharp-regular:normal 400 1em/1 \"Font Awesome 6 Sharp\";--fa-font-sharp-light:normal 300 1em/1 \"Font Awesome 6 Sharp\";--fa-font-sharp-thin:normal 100 1em/1 \"Font Awesome 6 Sharp\";--fa-font-sharp-duotone-solid:normal 900 1em/1 \"Font Awesome 6 Sharp Duotone\";--fa-font-sharp-duotone-regular:normal 400 1em/1 \"Font Awesome 6 Sharp Duotone\";--fa-font-sharp-duotone-light:normal 300 1em/1 \"Font Awesome 6 Sharp Duotone\";--fa-font-sharp-duotone-thin:normal 100 1em/1 \"Font Awesome 6 Sharp Duotone\"}svg:not(:host).svg-inline--fa,svg:not(:root).svg-inline--fa{overflow:visible;box-sizing:content-box}.svg-inline--fa{display:var(--fa-display,inline-block);height:1em;overflow:visible;vertical-align:-.125em}.svg-inline--fa.fa-2xs{vertical-align:.1em}.svg-inline--fa.fa-xs{vertical-align:0}.svg-inline--fa.fa-sm{vertical-align:-.0714285705em}.svg-inline--fa.fa-lg{vertical-align:-.2em}.svg-inline--fa.fa-xl{vertical-align:-.25em}.svg-inline--fa.fa-2xl{vertical-align:-.3125em}.svg-inline--fa.fa-pull-left{margin-right:var(--fa-pull-margin,.3em);width:auto}.svg-inline--fa.fa-pull-right{margin-left:var(--fa-pull-margin,.3em);width:auto}.svg-inline--fa.fa-li{width:var(--fa-li-width,2em);top:.25em}.svg-inline--fa.fa-fw{width:var(--fa-fw-width,1.25em)}.fa-layers svg.svg-inline--fa{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0}.fa-layers-counter,.fa-layers-text{display:inline-block;position:absolute;text-align:center}.fa-layers{display:inline-block;height:1em;position:relative;text-align:center;vertical-align:-.125em;width:1em}.fa-layers svg.svg-inline--fa{transform-origin:center center}.fa-layers-text{left:50%;top:50%;transform:translate(-50%,-50%);transform-origin:center center}.fa-layers-counter{background-color:var(--fa-counter-background-color,#ff253a);border-radius:var(--fa-counter-border-radius,1em);box-sizing:border-box;color:var(--fa-inverse,#fff);line-height:var(--fa-counter-line-height,1);max-width:var(--fa-counter-max-width,5em);min-width:var(--fa-counter-min-width,1.5em);overflow:hidden;padding:var(--fa-counter-padding,.25em .5em);right:var(--fa-right,0);text-overflow:ellipsis;top:var(--fa-top,0);transform:scale(var(--fa-counter-scale,.25));transform-origin:top right}.fa-layers-bottom-right{bottom:var(--fa-bottom,0);right:var(--fa-right,0);top:auto;transform:scale(var(--fa-layers-scale,.25));transform-origin:bottom right}.fa-layers-bottom-left{bottom:var(--fa-bottom,0);left:var(--fa-left,0);right:auto;top:auto;transform:scale(var(--fa-layers-scale,.25));transform-origin:bottom left}.fa-layers-top-right{top:var(--fa-top,0);right:var(--fa-right,0);transform:scale(var(--fa-layers-scale,.25));transform-origin:top right}.fa-layers-top-left{left:var(--fa-left,0);right:auto;top:var(--fa-top,0);transform:scale(var(--fa-layers-scale,.25));transform-origin:top left}.fa-1x{font-size:1em}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-6x{font-size:6em}.fa-7x{font-size:7em}.fa-8x{font-size:8em}.fa-9x{font-size:9em}.fa-10x{font-size:10em}.fa-2xs{font-size:.625em;line-height:.1em;vertical-align:.225em}.fa-xs{font-size:.75em;line-height:.0833333337em;vertical-align:.125em}.fa-sm{font-size:.875em;line-height:.0714285718em;vertical-align:.0535714295em}.fa-lg{font-size:1.25em;line-height:.05em;vertical-align:-.075em}.fa-xl{font-size:1.5em;line-height:.0416666682em;vertical-align:-.125em}.fa-2xl{font-size:2em;line-height:.03125em;vertical-align:-.1875em}.fa-fw{text-align:center;width:1.25em}.fa-ul{list-style-type:none;margin-left:var(--fa-li-margin,2.5em);padding-left:0}.fa-ul>li{position:relative}.fa-li{left:calc(-1 * var(--fa-li-width,2em));position:absolute;text-align:center;width:var(--fa-li-width,2em);line-height:inherit}.fa-border{border-color:var(--fa-border-color,#eee);border-radius:var(--fa-border-radius,.1em);border-style:var(--fa-border-style,solid);border-width:var(--fa-border-width,.08em);padding:var(--fa-border-padding,.2em .25em .15em)}.fa-pull-left{float:left;margin-right:var(--fa-pull-margin,.3em)}.fa-pull-right{float:right;margin-left:var(--fa-pull-margin,.3em)}.fa-beat{animation-name:fa-beat;animation-delay:var(--fa-animation-delay,0s);animation-direction:var(--fa-animation-direction,normal);animation-duration:var(--fa-animation-duration,1s);animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-timing-function:var(--fa-animation-timing,ease-in-out)}.fa-bounce{animation-name:fa-bounce;animation-delay:var(--fa-animation-delay,0s);animation-direction:var(--fa-animation-direction,normal);animation-duration:var(--fa-animation-duration,1s);animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-timing-function:var(--fa-animation-timing,cubic-bezier(.28,.84,.42,1))}.fa-fade{animation-name:fa-fade;animation-delay:var(--fa-animation-delay,0s);animation-direction:var(--fa-animation-direction,normal);animation-duration:var(--fa-animation-duration,1s);animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-timing-function:var(--fa-animation-timing,cubic-bezier(.4,0,.6,1))}.fa-beat-fade{animation-name:fa-beat-fade;animation-delay:var(--fa-animation-delay,0s);animation-direction:var(--fa-animation-direction,normal);animation-duration:var(--fa-animation-duration,1s);animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-timing-function:var(--fa-animation-timing,cubic-bezier(.4,0,.6,1))}.fa-flip{animation-name:fa-flip;animation-delay:var(--fa-animation-delay,0s);animation-direction:var(--fa-animation-direction,normal);animation-duration:var(--fa-animation-duration,1s);animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-timing-function:var(--fa-animation-timing,ease-in-out)}.fa-shake{animation-name:fa-shake;animation-delay:var(--fa-animation-delay,0s);animation-direction:var(--fa-animation-direction,normal);animation-duration:var(--fa-animation-duration,1s);animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-timing-function:var(--fa-animation-timing,linear)}.fa-spin{animation-name:fa-spin;animation-delay:var(--fa-animation-delay,0s);animation-direction:var(--fa-animation-direction,normal);animation-duration:var(--fa-animation-duration,2s);animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-timing-function:var(--fa-animation-timing,linear)}.fa-spin-reverse{--fa-animation-direction:reverse}.fa-pulse,.fa-spin-pulse{animation-name:fa-spin;animation-direction:var(--fa-animation-direction,normal);animation-duration:var(--fa-animation-duration,1s);animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-timing-function:var(--fa-animation-timing,steps(8))}@media (prefers-reduced-motion:reduce){.fa-beat,.fa-beat-fade,.fa-bounce,.fa-fade,.fa-flip,.fa-pulse,.fa-shake,.fa-spin,.fa-spin-pulse{animation-delay:-1ms;animation-duration:1ms;animation-iteration-count:1;transition-delay:0s;transition-duration:0s}}@keyframes fa-beat{0%,90%{transform:scale(1)}45%{transform:scale(var(--fa-beat-scale,1.25))}}@keyframes fa-bounce{0%{transform:scale(1,1) translateY(0)}10%{transform:scale(var(--fa-bounce-start-scale-x,1.1),var(--fa-bounce-start-scale-y,.9)) translateY(0)}30%{transform:scale(var(--fa-bounce-jump-scale-x,.9),var(--fa-bounce-jump-scale-y,1.1)) translateY(var(--fa-bounce-height,-.5em))}50%{transform:scale(var(--fa-bounce-land-scale-x,1.05),var(--fa-bounce-land-scale-y,.95)) translateY(0)}57%{transform:scale(1,1) translateY(var(--fa-bounce-rebound,-.125em))}64%{transform:scale(1,1) translateY(0)}100%{transform:scale(1,1) translateY(0)}}@keyframes fa-fade{50%{opacity:var(--fa-fade-opacity,.4)}}@keyframes fa-beat-fade{0%,100%{opacity:var(--fa-beat-fade-opacity,.4);transform:scale(1)}50%{opacity:1;transform:scale(var(--fa-beat-fade-scale,1.125))}}@keyframes fa-flip{50%{transform:rotate3d(var(--fa-flip-x,0),var(--fa-flip-y,1),var(--fa-flip-z,0),var(--fa-flip-angle,-180deg))}}@keyframes fa-shake{0%{transform:rotate(-15deg)}4%{transform:rotate(15deg)}24%,8%{transform:rotate(-18deg)}12%,28%{transform:rotate(18deg)}16%{transform:rotate(-22deg)}20%{transform:rotate(22deg)}32%{transform:rotate(-12deg)}36%{transform:rotate(12deg)}100%,40%{transform:rotate(0)}}@keyframes fa-spin{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}.fa-rotate-90{transform:rotate(90deg)}.fa-rotate-180{transform:rotate(180deg)}.fa-rotate-270{transform:rotate(270deg)}.fa-flip-horizontal{transform:scale(-1,1)}.fa-flip-vertical{transform:scale(1,-1)}.fa-flip-both,.fa-flip-horizontal.fa-flip-vertical{transform:scale(-1,-1)}.fa-rotate-by{transform:rotate(var(--fa-rotate-angle,0))}.fa-stack{display:inline-block;vertical-align:middle;height:2em;position:relative;width:2.5em}.fa-stack-1x,.fa-stack-2x{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0;z-index:var(--fa-stack-z-index,auto)}.svg-inline--fa.fa-stack-1x{height:1em;width:1.25em}.svg-inline--fa.fa-stack-2x{height:2em;width:2.5em}.fa-inverse{color:var(--fa-inverse,#fff)}.fa-sr-only,.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border-width:0}.fa-sr-only-focusable:not(:focus),.sr-only-focusable:not(:focus){position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border-width:0}.svg-inline--fa .fa-primary{fill:var(--fa-primary-color,currentColor);opacity:var(--fa-primary-opacity,1)}.svg-inline--fa .fa-secondary{fill:var(--fa-secondary-color,currentColor);opacity:var(--fa-secondary-opacity,.4)}.svg-inline--fa.fa-swap-opacity .fa-primary{opacity:var(--fa-secondary-opacity,.4)}.svg-inline--fa.fa-swap-opacity .fa-secondary{opacity:var(--fa-primary-opacity,1)}.svg-inline--fa mask .fa-primary,.svg-inline--fa mask .fa-secondary{fill:#000}";

  function css() {
    const dcp = DEFAULT_CSS_PREFIX;
    const drc = DEFAULT_REPLACEMENT_CLASS;
    const fp = config.cssPrefix;
    const rc = config.replacementClass;
    let s = baseStyles;
    if (fp !== dcp || rc !== drc) {
      const dPatt = new RegExp("\\.".concat(dcp, "\\-"), 'g');
      const customPropPatt = new RegExp("\\--".concat(dcp, "\\-"), 'g');
      const rPatt = new RegExp("\\.".concat(drc), 'g');
      s = s.replace(dPatt, ".".concat(fp, "-")).replace(customPropPatt, "--".concat(fp, "-")).replace(rPatt, ".".concat(rc));
    }
    return s;
  }
  let _cssInserted = false;
  function ensureCss() {
    if (config.autoAddCss && !_cssInserted) {
      insertCss(css());
      _cssInserted = true;
    }
  }
  var InjectCSS = {
    mixout() {
      return {
        dom: {
          css,
          insertCss: ensureCss
        }
      };
    },
    hooks() {
      return {
        beforeDOMElementCreation() {
          ensureCss();
        },
        beforeI2svg() {
          ensureCss();
        }
      };
    }
  };

  const w = WINDOW || {};
  if (!w[NAMESPACE_IDENTIFIER]) w[NAMESPACE_IDENTIFIER] = {};
  if (!w[NAMESPACE_IDENTIFIER].styles) w[NAMESPACE_IDENTIFIER].styles = {};
  if (!w[NAMESPACE_IDENTIFIER].hooks) w[NAMESPACE_IDENTIFIER].hooks = {};
  if (!w[NAMESPACE_IDENTIFIER].shims) w[NAMESPACE_IDENTIFIER].shims = [];
  var namespace = w[NAMESPACE_IDENTIFIER];

  const functions = [];
  const listener = function () {
    DOCUMENT.removeEventListener('DOMContentLoaded', listener);
    loaded = 1;
    functions.map(fn => fn());
  };
  let loaded = false;
  if (IS_DOM) {
    loaded = (DOCUMENT.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(DOCUMENT.readyState);
    if (!loaded) DOCUMENT.addEventListener('DOMContentLoaded', listener);
  }
  function domready (fn) {
    if (!IS_DOM) return;
    loaded ? setTimeout(fn, 0) : functions.push(fn);
  }

  function toHtml(abstractNodes) {
    const {
      tag,
      attributes = {},
      children = []
    } = abstractNodes;
    if (typeof abstractNodes === 'string') {
      return htmlEscape(abstractNodes);
    } else {
      return "<".concat(tag, " ").concat(joinAttributes(attributes), ">").concat(children.map(toHtml).join(''), "</").concat(tag, ">");
    }
  }

  function iconFromMapping(mapping, prefix, iconName) {
    if (mapping && mapping[prefix] && mapping[prefix][iconName]) {
      return {
        prefix,
        iconName,
        icon: mapping[prefix][iconName]
      };
    }
  }

  /**
   * Internal helper to bind a function known to have 4 arguments
   * to a given context.
   */
  var bindInternal4 = function bindInternal4(func, thisContext) {
    return function (a, b, c, d) {
      return func.call(thisContext, a, b, c, d);
    };
  };

  /**
   * # Reduce
   *
   * A fast object `.reduce()` implementation.
   *
   * @param  {Object}   subject      The object to reduce over.
   * @param  {Function} fn           The reducer function.
   * @param  {mixed}    initialValue The initial value for the reducer, defaults to subject[0].
   * @param  {Object}   thisContext  The context for the reducer.
   * @return {mixed}                 The final result.
   */
  var reduce = function fastReduceObject(subject, fn, initialValue, thisContext) {
    var keys = Object.keys(subject),
      length = keys.length,
      iterator = thisContext !== undefined ? bindInternal4(fn, thisContext) : fn,
      i,
      key,
      result;
    if (initialValue === undefined) {
      i = 1;
      result = subject[keys[0]];
    } else {
      i = 0;
      result = initialValue;
    }
    for (; i < length; i++) {
      key = keys[i];
      result = iterator(result, subject[key], key, subject);
    }
    return result;
  };

  /**
   * ucs2decode() and codePointAt() are both works of Mathias Bynens and licensed under MIT
   *
   * Copyright Mathias Bynens <https://mathiasbynens.be/>

   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:

   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.

   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
   * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
   * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
   * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
   * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
   */

  function ucs2decode(string) {
    const output = [];
    let counter = 0;
    const length = string.length;
    while (counter < length) {
      const value = string.charCodeAt(counter++);
      if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
        const extra = string.charCodeAt(counter++);
        if ((extra & 0xFC00) == 0xDC00) {
          // eslint-disable-line eqeqeq
          output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
        } else {
          output.push(value);
          counter--;
        }
      } else {
        output.push(value);
      }
    }
    return output;
  }
  function toHex(unicode) {
    const decoded = ucs2decode(unicode);
    return decoded.length === 1 ? decoded[0].toString(16) : null;
  }
  function codePointAt(string, index) {
    const size = string.length;
    let first = string.charCodeAt(index);
    let second;
    if (first >= 0xD800 && first <= 0xDBFF && size > index + 1) {
      second = string.charCodeAt(index + 1);
      if (second >= 0xDC00 && second <= 0xDFFF) {
        return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;
      }
    }
    return first;
  }

  function normalizeIcons(icons) {
    return Object.keys(icons).reduce((acc, iconName) => {
      const icon = icons[iconName];
      const expanded = !!icon.icon;
      if (expanded) {
        acc[icon.iconName] = icon.icon;
      } else {
        acc[iconName] = icon;
      }
      return acc;
    }, {});
  }
  function defineIcons(prefix, icons) {
    let params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    const {
      skipHooks = false
    } = params;
    const normalized = normalizeIcons(icons);
    if (typeof namespace.hooks.addPack === 'function' && !skipHooks) {
      namespace.hooks.addPack(prefix, normalizeIcons(icons));
    } else {
      namespace.styles[prefix] = _objectSpread2(_objectSpread2({}, namespace.styles[prefix] || {}), normalized);
    }

    /**
     * Font Awesome 4 used the prefix of `fa` for all icons. With the introduction
     * of new styles we needed to differentiate between them. Prefix `fa` is now an alias
     * for `fas` so we'll ease the upgrade process for our users by automatically defining
     * this as well.
     */
    if (prefix === 'fas') {
      defineIcons('fa', icons);
    }
  }

  const duotonePathRe = [/*#__PURE__*/_wrapRegExp(/path d="([^"]+)".*path d="([^"]+)"/, {
    d1: 1,
    d2: 2
  }), /*#__PURE__*/_wrapRegExp(/path class="([^"]+)".*d="([^"]+)".*path class="([^"]+)".*d="([^"]+)"/, {
    cls1: 1,
    d1: 2,
    cls2: 3,
    d2: 4
  }), /*#__PURE__*/_wrapRegExp(/path class="([^"]+)".*d="([^"]+)"/, {
    cls1: 1,
    d1: 2
  })];

  const {
    styles,
    shims
  } = namespace;
  const FAMILY_NAMES = Object.keys(PREFIX_TO_LONG_STYLE);
  const PREFIXES_FOR_FAMILY = FAMILY_NAMES.reduce((acc, familyId) => {
    acc[familyId] = Object.keys(PREFIX_TO_LONG_STYLE[familyId]);
    return acc;
  }, {});
  let _defaultUsablePrefix = null;
  let _byUnicode = {};
  let _byLigature = {};
  let _byOldName = {};
  let _byOldUnicode = {};
  let _byAlias = {};
  function isReserved(name) {
    return ~RESERVED_CLASSES.indexOf(name);
  }
  function getIconName(cssPrefix, cls) {
    const parts = cls.split('-');
    const prefix = parts[0];
    const iconName = parts.slice(1).join('-');
    if (prefix === cssPrefix && iconName !== '' && !isReserved(iconName)) {
      return iconName;
    } else {
      return null;
    }
  }
  const build = () => {
    const lookup = reducer => {
      return reduce(styles, (o$$1, style, prefix) => {
        o$$1[prefix] = reduce(style, reducer, {});
        return o$$1;
      }, {});
    };
    _byUnicode = lookup((acc, icon, iconName) => {
      if (icon[3]) {
        acc[icon[3]] = iconName;
      }
      if (icon[2]) {
        const aliases = icon[2].filter(a$$1 => {
          return typeof a$$1 === 'number';
        });
        aliases.forEach(alias => {
          acc[alias.toString(16)] = iconName;
        });
      }
      return acc;
    });
    _byLigature = lookup((acc, icon, iconName) => {
      acc[iconName] = iconName;
      if (icon[2]) {
        const aliases = icon[2].filter(a$$1 => {
          return typeof a$$1 === 'string';
        });
        aliases.forEach(alias => {
          acc[alias] = iconName;
        });
      }
      return acc;
    });
    _byAlias = lookup((acc, icon, iconName) => {
      const aliases = icon[2];
      acc[iconName] = iconName;
      aliases.forEach(alias => {
        acc[alias] = iconName;
      });
      return acc;
    });

    // If we have a Kit, we can't determine if regular is available since we
    // could be auto-fetching it. We'll have to assume that it is available.
    const hasRegular = 'far' in styles || config.autoFetchSvg;
    const shimLookups = reduce(shims, (acc, shim) => {
      const maybeNameMaybeUnicode = shim[0];
      let prefix = shim[1];
      const iconName = shim[2];
      if (prefix === 'far' && !hasRegular) {
        prefix = 'fas';
      }
      if (typeof maybeNameMaybeUnicode === 'string') {
        acc.names[maybeNameMaybeUnicode] = {
          prefix,
          iconName
        };
      }
      if (typeof maybeNameMaybeUnicode === 'number') {
        acc.unicodes[maybeNameMaybeUnicode.toString(16)] = {
          prefix,
          iconName
        };
      }
      return acc;
    }, {
      names: {},
      unicodes: {}
    });
    _byOldName = shimLookups.names;
    _byOldUnicode = shimLookups.unicodes;
    _defaultUsablePrefix = getCanonicalPrefix(config.styleDefault, {
      family: config.familyDefault
    });
  };
  onChange(c$$1 => {
    _defaultUsablePrefix = getCanonicalPrefix(c$$1.styleDefault, {
      family: config.familyDefault
    });
  });
  build();
  function byUnicode(prefix, unicode) {
    return (_byUnicode[prefix] || {})[unicode];
  }
  function byLigature(prefix, ligature) {
    return (_byLigature[prefix] || {})[ligature];
  }
  function byAlias(prefix, alias) {
    return (_byAlias[prefix] || {})[alias];
  }
  function byOldName(name) {
    return _byOldName[name] || {
      prefix: null,
      iconName: null
    };
  }
  function byOldUnicode(unicode) {
    const oldUnicode = _byOldUnicode[unicode];
    const newUnicode = byUnicode('fas', unicode);
    return oldUnicode || (newUnicode ? {
      prefix: 'fas',
      iconName: newUnicode
    } : null) || {
      prefix: null,
      iconName: null
    };
  }
  function getDefaultUsablePrefix() {
    return _defaultUsablePrefix;
  }
  const emptyCanonicalIcon = () => {
    return {
      prefix: null,
      iconName: null,
      rest: []
    };
  };
  function getFamilyId(values) {
    let family = s;
    const famProps = FAMILY_NAMES.reduce((acc, familyId) => {
      acc[familyId] = "".concat(config.cssPrefix, "-").concat(familyId);
      return acc;
    }, {});
    L.forEach(familyId => {
      if (values.includes(famProps[familyId]) || values.some(v$$1 => PREFIXES_FOR_FAMILY[familyId].includes(v$$1))) {
        family = familyId;
      }
    });
    return family;
  }
  function getCanonicalPrefix(styleOrPrefix) {
    let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    const {
      family = s
    } = params;
    const style = PREFIX_TO_STYLE[family][styleOrPrefix];

    // handles the exception of passing in only a family of 'duotone' with no style
    if (family === t && !styleOrPrefix) {
      return 'fad';
    }
    const prefix = STYLE_TO_PREFIX[family][styleOrPrefix] || STYLE_TO_PREFIX[family][style];
    const defined = styleOrPrefix in namespace.styles ? styleOrPrefix : null;
    const result = prefix || defined || null;
    return result;
  }
  function moveNonFaClassesToRest(classNames) {
    let rest = [];
    let iconName = null;
    classNames.forEach(cls => {
      const result = getIconName(config.cssPrefix, cls);
      if (result) {
        iconName = result;
      } else if (cls) {
        rest.push(cls);
      }
    });
    return {
      iconName,
      rest
    };
  }
  function sortedUniqueValues(arr) {
    return arr.sort().filter((value, index, arr) => {
      return arr.indexOf(value) === index;
    });
  }
  function getCanonicalIcon(values) {
    let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    const {
      skipLookups = false
    } = params;
    let givenPrefix = null;
    const faCombinedClasses = Ia.concat(bt$1);
    const faStyleOrFamilyClasses = sortedUniqueValues(values.filter(cls => faCombinedClasses.includes(cls)));
    const nonStyleOrFamilyClasses = sortedUniqueValues(values.filter(cls => !Ia.includes(cls)));
    const faStyles = faStyleOrFamilyClasses.filter(cls => {
      givenPrefix = cls;
      return !P.includes(cls);
    });
    const [styleFromValues = null] = faStyles;
    const family = getFamilyId(faStyleOrFamilyClasses);
    const canonical = _objectSpread2(_objectSpread2({}, moveNonFaClassesToRest(nonStyleOrFamilyClasses)), {}, {
      prefix: getCanonicalPrefix(styleFromValues, {
        family
      })
    });
    return _objectSpread2(_objectSpread2(_objectSpread2({}, canonical), getDefaultCanonicalPrefix({
      values,
      family,
      styles,
      config,
      canonical,
      givenPrefix
    })), applyShimAndAlias(skipLookups, givenPrefix, canonical));
  }
  function applyShimAndAlias(skipLookups, givenPrefix, canonical) {
    let {
      prefix,
      iconName
    } = canonical;
    if (skipLookups || !prefix || !iconName) {
      return {
        prefix,
        iconName
      };
    }
    const shim = givenPrefix === 'fa' ? byOldName(iconName) : {};
    const aliasIconName = byAlias(prefix, iconName);
    iconName = shim.iconName || aliasIconName || iconName;
    prefix = shim.prefix || prefix;
    if (prefix === 'far' && !styles['far'] && styles['fas'] && !config.autoFetchSvg) {
      // Allow a fallback from the regular style to solid if regular is not available
      // but only if we aren't auto-fetching SVGs
      prefix = 'fas';
    }
    return {
      prefix,
      iconName
    };
  }
  const newCanonicalFamilies = L.filter(familyId => {
    return familyId !== s || familyId !== t;
  });
  const newCanonicalStyles = Object.keys(ga).filter(key => key !== s).map(key => Object.keys(ga[key])).flat();
  function getDefaultCanonicalPrefix(prefixOptions) {
    const {
      values,
      family,
      canonical,
      givenPrefix = '',
      styles = {},
      config: config$$1 = {}
    } = prefixOptions;
    const isDuotoneFamily = family === t;
    const valuesHasDuotone = values.includes('fa-duotone') || values.includes('fad');
    const defaultFamilyIsDuotone = config$$1.familyDefault === 'duotone';
    const canonicalPrefixIsDuotone = canonical.prefix === 'fad' || canonical.prefix === 'fa-duotone';
    if (!isDuotoneFamily && (valuesHasDuotone || defaultFamilyIsDuotone || canonicalPrefixIsDuotone)) {
      canonical.prefix = 'fad';
    }
    if (values.includes('fa-brands') || values.includes('fab')) {
      canonical.prefix = 'fab';
    }
    if (!canonical.prefix && newCanonicalFamilies.includes(family)) {
      const validPrefix = Object.keys(styles).find(key => newCanonicalStyles.includes(key));
      if (validPrefix || config$$1.autoFetchSvg) {
        const defaultPrefix = pt.get(family).defaultShortPrefixId;
        canonical.prefix = defaultPrefix;
        canonical.iconName = byAlias(canonical.prefix, canonical.iconName) || canonical.iconName;
      }
    }
    if (canonical.prefix === 'fa' || givenPrefix === 'fa') {
      // The fa prefix is not canonical. So if it has made it through until this point
      // we will shift it to the correct prefix.
      canonical.prefix = getDefaultUsablePrefix() || 'fas';
    }
    return canonical;
  }

  class Library {
    constructor() {
      this.definitions = {};
    }
    add() {
      for (var _len = arguments.length, definitions = new Array(_len), _key = 0; _key < _len; _key++) {
        definitions[_key] = arguments[_key];
      }
      const additions = definitions.reduce(this._pullDefinitions, {});
      Object.keys(additions).forEach(key => {
        this.definitions[key] = _objectSpread2(_objectSpread2({}, this.definitions[key] || {}), additions[key]);
        defineIcons(key, additions[key]);

        // TODO can we stop doing this? We can't get the icons by 'fa-solid' any longer so this probably needs to change
        const longPrefix = PREFIX_TO_LONG_STYLE[s][key];
        if (longPrefix) defineIcons(longPrefix, additions[key]);
        build();
      });
    }
    reset() {
      this.definitions = {};
    }
    _pullDefinitions(additions, definition) {
      const normalized = definition.prefix && definition.iconName && definition.icon ? {
        0: definition
      } : definition;
      Object.keys(normalized).map(key => {
        const {
          prefix,
          iconName,
          icon
        } = normalized[key];
        const aliases = icon[2];
        if (!additions[prefix]) additions[prefix] = {};
        if (aliases.length > 0) {
          aliases.forEach(alias => {
            if (typeof alias === 'string') {
              additions[prefix][alias] = icon;
            }
          });
        }
        additions[prefix][iconName] = icon;
      });
      return additions;
    }
  }

  let _plugins = [];
  let _hooks = {};
  const providers = {};
  const defaultProviderKeys = Object.keys(providers);
  function registerPlugins(nextPlugins, _ref) {
    let {
      mixoutsTo: obj
    } = _ref;
    _plugins = nextPlugins;
    _hooks = {};
    Object.keys(providers).forEach(k => {
      if (defaultProviderKeys.indexOf(k) === -1) {
        delete providers[k];
      }
    });
    _plugins.forEach(plugin => {
      const mixout = plugin.mixout ? plugin.mixout() : {};
      Object.keys(mixout).forEach(tk => {
        if (typeof mixout[tk] === 'function') {
          obj[tk] = mixout[tk];
        }
        if (typeof mixout[tk] === 'object') {
          Object.keys(mixout[tk]).forEach(sk => {
            if (!obj[tk]) {
              obj[tk] = {};
            }
            obj[tk][sk] = mixout[tk][sk];
          });
        }
      });
      if (plugin.hooks) {
        const hooks = plugin.hooks();
        Object.keys(hooks).forEach(hook => {
          if (!_hooks[hook]) {
            _hooks[hook] = [];
          }
          _hooks[hook].push(hooks[hook]);
        });
      }
      if (plugin.provides) {
        plugin.provides(providers);
      }
    });
    return obj;
  }
  function chainHooks(hook, accumulator) {
    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }
    const hookFns = _hooks[hook] || [];
    hookFns.forEach(hookFn => {
      accumulator = hookFn.apply(null, [accumulator, ...args]); // eslint-disable-line no-useless-call
    });
    return accumulator;
  }
  function callHooks(hook) {
    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }
    const hookFns = _hooks[hook] || [];
    hookFns.forEach(hookFn => {
      hookFn.apply(null, args);
    });
    return undefined;
  }
  function callProvided() {
    const hook = arguments[0];
    const args = Array.prototype.slice.call(arguments, 1);
    return providers[hook] ? providers[hook].apply(null, args) : undefined;
  }

  function findIconDefinition(iconLookup) {
    if (iconLookup.prefix === 'fa') {
      iconLookup.prefix = 'fas';
    }
    let {
      iconName
    } = iconLookup;
    const prefix = iconLookup.prefix || getDefaultUsablePrefix();
    if (!iconName) return;
    iconName = byAlias(prefix, iconName) || iconName;
    return iconFromMapping(library.definitions, prefix, iconName) || iconFromMapping(namespace.styles, prefix, iconName);
  }
  const library = new Library();
  const noAuto = () => {
    config.autoReplaceSvg = false;
    config.observeMutations = false;
    callHooks('noAuto');
  };
  const dom = {
    i2svg: function () {
      let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      if (IS_DOM) {
        callHooks('beforeI2svg', params);
        callProvided('pseudoElements2svg', params);
        return callProvided('i2svg', params);
      } else {
        return Promise.reject(new Error('Operation requires a DOM of some kind.'));
      }
    },
    watch: function () {
      let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      const {
        autoReplaceSvgRoot
      } = params;
      if (config.autoReplaceSvg === false) {
        config.autoReplaceSvg = true;
      }
      config.observeMutations = true;
      domready(() => {
        autoReplace({
          autoReplaceSvgRoot
        });
        callHooks('watch', params);
      });
    }
  };
  const parse = {
    icon: icon => {
      if (icon === null) {
        return null;
      }
      if (typeof icon === 'object' && icon.prefix && icon.iconName) {
        return {
          prefix: icon.prefix,
          iconName: byAlias(icon.prefix, icon.iconName) || icon.iconName
        };
      }
      if (Array.isArray(icon) && icon.length === 2) {
        const iconName = icon[1].indexOf('fa-') === 0 ? icon[1].slice(3) : icon[1];
        const prefix = getCanonicalPrefix(icon[0]);
        return {
          prefix,
          iconName: byAlias(prefix, iconName) || iconName
        };
      }
      if (typeof icon === 'string' && (icon.indexOf("".concat(config.cssPrefix, "-")) > -1 || icon.match(ICON_SELECTION_SYNTAX_PATTERN))) {
        const canonicalIcon = getCanonicalIcon(icon.split(' '), {
          skipLookups: true
        });
        return {
          prefix: canonicalIcon.prefix || getDefaultUsablePrefix(),
          iconName: byAlias(canonicalIcon.prefix, canonicalIcon.iconName) || canonicalIcon.iconName
        };
      }
      if (typeof icon === 'string') {
        const prefix = getDefaultUsablePrefix();
        return {
          prefix,
          iconName: byAlias(prefix, icon) || icon
        };
      }
    }
  };
  const api = {
    noAuto,
    config,
    dom,
    parse,
    library,
    findIconDefinition,
    toHtml
  };
  const autoReplace = function () {
    let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    const {
      autoReplaceSvgRoot = DOCUMENT
    } = params;
    if ((Object.keys(namespace.styles).length > 0 || config.autoFetchSvg) && IS_DOM && config.autoReplaceSvg) api.dom.i2svg({
      node: autoReplaceSvgRoot
    });
  };
  function bootstrap(plugins) {
    if (IS_BROWSER) {
      if (!WINDOW.FontAwesome) {
        WINDOW.FontAwesome = api;
      }
      domready(() => {
        autoReplace();
        callHooks('bootstrap');
      });
    }
    namespace.hooks = _objectSpread2(_objectSpread2({}, namespace.hooks), {}, {
      addPack: (prefix, icons) => {
        namespace.styles[prefix] = _objectSpread2(_objectSpread2({}, namespace.styles[prefix] || {}), icons);
        build();
        autoReplace();
      },
      addPacks: packs => {
        packs.forEach(_ref => {
          let [prefix, icons] = _ref;
          namespace.styles[prefix] = _objectSpread2(_objectSpread2({}, namespace.styles[prefix] || {}), icons);
        });
        build();
        autoReplace();
      },
      addShims: shims => {
        namespace.shims.push(...shims);
        build();
        autoReplace();
      }
    });
  }

  function domVariants(val, abstractCreator) {
    Object.defineProperty(val, 'abstract', {
      get: abstractCreator
    });
    Object.defineProperty(val, 'html', {
      get: function () {
        return val.abstract.map(a => toHtml(a));
      }
    });
    Object.defineProperty(val, 'node', {
      get: function () {
        if (!IS_DOM) return;
        const container = DOCUMENT.createElement('div');
        container.innerHTML = val.html;
        return container.children;
      }
    });
    return val;
  }

  function asIcon (_ref) {
    let {
      children,
      main,
      mask,
      attributes,
      styles,
      transform
    } = _ref;
    if (transformIsMeaningful(transform) && main.found && !mask.found) {
      const {
        width,
        height
      } = main;
      const offset = {
        x: width / height / 2,
        y: 0.5
      };
      attributes['style'] = joinStyles(_objectSpread2(_objectSpread2({}, styles), {}, {
        'transform-origin': "".concat(offset.x + transform.x / 16, "em ").concat(offset.y + transform.y / 16, "em")
      }));
    }
    return [{
      tag: 'svg',
      attributes,
      children
    }];
  }

  function asSymbol (_ref) {
    let {
      prefix,
      iconName,
      children,
      attributes,
      symbol
    } = _ref;
    const id = symbol === true ? "".concat(prefix, "-").concat(config.cssPrefix, "-").concat(iconName) : symbol;
    return [{
      tag: 'svg',
      attributes: {
        style: 'display: none;'
      },
      children: [{
        tag: 'symbol',
        attributes: _objectSpread2(_objectSpread2({}, attributes), {}, {
          id
        }),
        children
      }]
    }];
  }

  function makeInlineSvgAbstract(params) {
    const {
      icons: {
        main,
        mask
      },
      prefix,
      iconName,
      transform,
      symbol,
      title,
      maskId,
      titleId,
      extra,
      watchable = false
    } = params;
    const {
      width,
      height
    } = mask.found ? mask : main;
    const isUploadedIcon = Lt.includes(prefix);
    const attrClass = [config.replacementClass, iconName ? "".concat(config.cssPrefix, "-").concat(iconName) : ''].filter(c$$1 => extra.classes.indexOf(c$$1) === -1).filter(c$$1 => c$$1 !== '' || !!c$$1).concat(extra.classes).join(' ');
    let content = {
      children: [],
      attributes: _objectSpread2(_objectSpread2({}, extra.attributes), {}, {
        'data-prefix': prefix,
        'data-icon': iconName,
        'class': attrClass,
        'role': extra.attributes.role || 'img',
        'xmlns': 'http://www.w3.org/2000/svg',
        'viewBox': "0 0 ".concat(width, " ").concat(height)
      })
    };
    const uploadedIconWidthStyle = isUploadedIcon && !~extra.classes.indexOf('fa-fw') ? {
      width: "".concat(width / height * 16 * 0.0625, "em")
    } : {};
    if (watchable) {
      content.attributes[DATA_FA_I2SVG] = '';
    }
    if (title) {
      content.children.push({
        tag: 'title',
        attributes: {
          id: content.attributes['aria-labelledby'] || "title-".concat(titleId || nextUniqueId())
        },
        children: [title]
      });
      delete content.attributes.title;
    }
    const args = _objectSpread2(_objectSpread2({}, content), {}, {
      prefix,
      iconName,
      main,
      mask,
      maskId,
      transform,
      symbol,
      styles: _objectSpread2(_objectSpread2({}, uploadedIconWidthStyle), extra.styles)
    });
    const {
      children,
      attributes
    } = mask.found && main.found ? callProvided('generateAbstractMask', args) || {
      children: [],
      attributes: {}
    } : callProvided('generateAbstractIcon', args) || {
      children: [],
      attributes: {}
    };
    args.children = children;
    args.attributes = attributes;
    if (symbol) {
      return asSymbol(args);
    } else {
      return asIcon(args);
    }
  }
  function makeLayersTextAbstract(params) {
    const {
      content,
      width,
      height,
      transform,
      title,
      extra,
      watchable = false
    } = params;
    const attributes = _objectSpread2(_objectSpread2(_objectSpread2({}, extra.attributes), title ? {
      'title': title
    } : {}), {}, {
      'class': extra.classes.join(' ')
    });
    if (watchable) {
      attributes[DATA_FA_I2SVG] = '';
    }
    const styles = _objectSpread2({}, extra.styles);
    if (transformIsMeaningful(transform)) {
      styles['transform'] = transformForCss({
        transform,
        startCentered: true,
        width,
        height
      });
      styles['-webkit-transform'] = styles['transform'];
    }
    const styleString = joinStyles(styles);
    if (styleString.length > 0) {
      attributes['style'] = styleString;
    }
    const val = [];
    val.push({
      tag: 'span',
      attributes,
      children: [content]
    });
    if (title) {
      val.push({
        tag: 'span',
        attributes: {
          class: 'sr-only'
        },
        children: [title]
      });
    }
    return val;
  }
  function makeLayersCounterAbstract(params) {
    const {
      content,
      title,
      extra
    } = params;
    const attributes = _objectSpread2(_objectSpread2(_objectSpread2({}, extra.attributes), title ? {
      'title': title
    } : {}), {}, {
      'class': extra.classes.join(' ')
    });
    const styleString = joinStyles(extra.styles);
    if (styleString.length > 0) {
      attributes['style'] = styleString;
    }
    const val = [];
    val.push({
      tag: 'span',
      attributes,
      children: [content]
    });
    if (title) {
      val.push({
        tag: 'span',
        attributes: {
          class: 'sr-only'
        },
        children: [title]
      });
    }
    return val;
  }

  const {
    styles: styles$1
  } = namespace;
  function asFoundIcon(icon) {
    const width = icon[0];
    const height = icon[1];
    const [vectorData] = icon.slice(4);
    let element = null;
    if (Array.isArray(vectorData)) {
      element = {
        tag: 'g',
        attributes: {
          class: "".concat(config.cssPrefix, "-").concat(DUOTONE_CLASSES.GROUP)
        },
        children: [{
          tag: 'path',
          attributes: {
            class: "".concat(config.cssPrefix, "-").concat(DUOTONE_CLASSES.SECONDARY),
            fill: 'currentColor',
            d: vectorData[0]
          }
        }, {
          tag: 'path',
          attributes: {
            class: "".concat(config.cssPrefix, "-").concat(DUOTONE_CLASSES.PRIMARY),
            fill: 'currentColor',
            d: vectorData[1]
          }
        }]
      };
    } else {
      element = {
        tag: 'path',
        attributes: {
          fill: 'currentColor',
          d: vectorData
        }
      };
    }
    return {
      found: true,
      width,
      height,
      icon: element
    };
  }
  const missingIconResolutionMixin = {
    found: false,
    width: 512,
    height: 512
  };
  function maybeNotifyMissing(iconName, prefix) {
    if (!PRODUCTION && !config.showMissingIcons && iconName) {
      console.error("Icon with name \"".concat(iconName, "\" and prefix \"").concat(prefix, "\" is missing."));
    }
  }
  function findIcon(iconName, prefix) {
    let givenPrefix = prefix;
    if (prefix === 'fa' && config.styleDefault !== null) {
      prefix = getDefaultUsablePrefix();
    }
    return new Promise((resolve, reject) => {
      if (givenPrefix === 'fa') {
        const shim = byOldName(iconName) || {};
        iconName = shim.iconName || iconName;
        prefix = shim.prefix || prefix;
      }
      if (iconName && prefix && styles$1[prefix] && styles$1[prefix][iconName]) {
        const icon = styles$1[prefix][iconName];
        return resolve(asFoundIcon(icon));
      }
      maybeNotifyMissing(iconName, prefix);
      resolve(_objectSpread2(_objectSpread2({}, missingIconResolutionMixin), {}, {
        icon: config.showMissingIcons && iconName ? callProvided('missingIconAbstract') || {} : {}
      }));
    });
  }

  const noop$1 = () => {};
  const p$2 = config.measurePerformance && PERFORMANCE && PERFORMANCE.mark && PERFORMANCE.measure ? PERFORMANCE : {
    mark: noop$1,
    measure: noop$1
  };
  const preamble = "FA \"6.7.2\"";
  const begin = name => {
    p$2.mark("".concat(preamble, " ").concat(name, " begins"));
    return () => end(name);
  };
  const end = name => {
    p$2.mark("".concat(preamble, " ").concat(name, " ends"));
    p$2.measure("".concat(preamble, " ").concat(name), "".concat(preamble, " ").concat(name, " begins"), "".concat(preamble, " ").concat(name, " ends"));
  };
  var perf = {
    begin,
    end
  };

  const noop$2 = () => {};
  function isWatched(node) {
    const i2svg = node.getAttribute ? node.getAttribute(DATA_FA_I2SVG) : null;
    return typeof i2svg === 'string';
  }
  function hasPrefixAndIcon(node) {
    const prefix = node.getAttribute ? node.getAttribute(DATA_PREFIX) : null;
    const icon = node.getAttribute ? node.getAttribute(DATA_ICON) : null;
    return prefix && icon;
  }
  function hasBeenReplaced(node) {
    return node && node.classList && node.classList.contains && node.classList.contains(config.replacementClass);
  }
  function getMutator() {
    if (config.autoReplaceSvg === true) {
      return mutators.replace;
    }
    const mutator = mutators[config.autoReplaceSvg];
    return mutator || mutators.replace;
  }
  function createElementNS(tag) {
    return DOCUMENT.createElementNS('http://www.w3.org/2000/svg', tag);
  }
  function createElement(tag) {
    return DOCUMENT.createElement(tag);
  }
  function convertSVG(abstractObj) {
    let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    const {
      ceFn = abstractObj.tag === 'svg' ? createElementNS : createElement
    } = params;
    if (typeof abstractObj === 'string') {
      return DOCUMENT.createTextNode(abstractObj);
    }
    const tag = ceFn(abstractObj.tag);
    Object.keys(abstractObj.attributes || []).forEach(function (key) {
      tag.setAttribute(key, abstractObj.attributes[key]);
    });
    const children = abstractObj.children || [];
    children.forEach(function (child) {
      tag.appendChild(convertSVG(child, {
        ceFn
      }));
    });
    return tag;
  }
  function nodeAsComment(node) {
    let comment = " ".concat(node.outerHTML, " ");
    return comment;
  }
  const mutators = {
    replace: function (mutation) {
      const node = mutation[0];
      if (node.parentNode) {
        mutation[1].forEach(abstract => {
          node.parentNode.insertBefore(convertSVG(abstract), node);
        });
        if (node.getAttribute(DATA_FA_I2SVG) === null && config.keepOriginalSource) {
          let comment = DOCUMENT.createComment(nodeAsComment(node));
          node.parentNode.replaceChild(comment, node);
        } else {
          node.remove();
        }
      }
    },
    nest: function (mutation) {
      const node = mutation[0];
      const abstract = mutation[1];

      // If we already have a replaced node we do not want to continue nesting within it.
      // Short-circuit to the standard replacement
      if (~classArray(node).indexOf(config.replacementClass)) {
        return mutators.replace(mutation);
      }
      const forSvg = new RegExp("".concat(config.cssPrefix, "-.*"));
      delete abstract[0].attributes.id;
      if (abstract[0].attributes.class) {
        const splitClasses = abstract[0].attributes.class.split(' ').reduce((acc, cls) => {
          if (cls === config.replacementClass || cls.match(forSvg)) {
            acc.toSvg.push(cls);
          } else {
            acc.toNode.push(cls);
          }
          return acc;
        }, {
          toNode: [],
          toSvg: []
        });
        abstract[0].attributes.class = splitClasses.toSvg.join(' ');
        if (splitClasses.toNode.length === 0) {
          node.removeAttribute('class');
        } else {
          node.setAttribute('class', splitClasses.toNode.join(' '));
        }
      }
      const newInnerHTML = abstract.map(a => toHtml(a)).join('\n');
      node.setAttribute(DATA_FA_I2SVG, '');
      node.innerHTML = newInnerHTML;
    }
  };
  function performOperationSync(op) {
    op();
  }
  function perform(mutations, callback) {
    const callbackFunction = typeof callback === 'function' ? callback : noop$2;
    if (mutations.length === 0) {
      callbackFunction();
    } else {
      let frame = performOperationSync;
      if (config.mutateApproach === MUTATION_APPROACH_ASYNC) {
        frame = WINDOW.requestAnimationFrame || performOperationSync;
      }
      frame(() => {
        const mutator = getMutator();
        const mark = perf.begin('mutate');
        mutations.map(mutator);
        mark();
        callbackFunction();
      });
    }
  }
  let disabled = false;
  function disableObservation() {
    disabled = true;
  }
  function enableObservation() {
    disabled = false;
  }
  let mo = null;
  function observe(options) {
    if (!MUTATION_OBSERVER) {
      return;
    }
    if (!config.observeMutations) {
      return;
    }
    const {
      treeCallback = noop$2,
      nodeCallback = noop$2,
      pseudoElementsCallback = noop$2,
      observeMutationsRoot = DOCUMENT
    } = options;
    mo = new MUTATION_OBSERVER(objects => {
      if (disabled) return;
      const defaultPrefix = getDefaultUsablePrefix();
      toArray(objects).forEach(mutationRecord => {
        if (mutationRecord.type === 'childList' && mutationRecord.addedNodes.length > 0 && !isWatched(mutationRecord.addedNodes[0])) {
          if (config.searchPseudoElements) {
            pseudoElementsCallback(mutationRecord.target);
          }
          treeCallback(mutationRecord.target);
        }
        if (mutationRecord.type === 'attributes' && mutationRecord.target.parentNode && config.searchPseudoElements) {
          pseudoElementsCallback(mutationRecord.target.parentNode);
        }
        if (mutationRecord.type === 'attributes' && isWatched(mutationRecord.target) && ~ATTRIBUTES_WATCHED_FOR_MUTATION.indexOf(mutationRecord.attributeName)) {
          if (mutationRecord.attributeName === 'class' && hasPrefixAndIcon(mutationRecord.target)) {
            const {
              prefix,
              iconName
            } = getCanonicalIcon(classArray(mutationRecord.target));
            mutationRecord.target.setAttribute(DATA_PREFIX, prefix || defaultPrefix);
            if (iconName) mutationRecord.target.setAttribute(DATA_ICON, iconName);
          } else if (hasBeenReplaced(mutationRecord.target)) {
            nodeCallback(mutationRecord.target);
          }
        }
      });
    });
    if (!IS_DOM) return;
    mo.observe(observeMutationsRoot, {
      childList: true,
      attributes: true,
      characterData: true,
      subtree: true
    });
  }
  function disconnect() {
    if (!mo) return;
    mo.disconnect();
  }

  function styleParser (node) {
    const style = node.getAttribute('style');
    let val = [];
    if (style) {
      val = style.split(';').reduce((acc, style) => {
        const styles = style.split(':');
        const prop = styles[0];
        const value = styles.slice(1);
        if (prop && value.length > 0) {
          acc[prop] = value.join(':').trim();
        }
        return acc;
      }, {});
    }
    return val;
  }

  function classParser (node) {
    const existingPrefix = node.getAttribute('data-prefix');
    const existingIconName = node.getAttribute('data-icon');
    const innerText = node.innerText !== undefined ? node.innerText.trim() : '';
    let val = getCanonicalIcon(classArray(node));
    if (!val.prefix) {
      val.prefix = getDefaultUsablePrefix();
    }
    if (existingPrefix && existingIconName) {
      val.prefix = existingPrefix;
      val.iconName = existingIconName;
    }
    if (val.iconName && val.prefix) {
      return val;
    }
    if (val.prefix && innerText.length > 0) {
      val.iconName = byLigature(val.prefix, node.innerText) || byUnicode(val.prefix, toHex(node.innerText));
    }
    if (!val.iconName && config.autoFetchSvg && node.firstChild && node.firstChild.nodeType === Node.TEXT_NODE) {
      val.iconName = node.firstChild.data;
    }
    return val;
  }

  function attributesParser (node) {
    const extraAttributes = toArray(node.attributes).reduce((acc, attr) => {
      if (acc.name !== 'class' && acc.name !== 'style') {
        acc[attr.name] = attr.value;
      }
      return acc;
    }, {});
    const title = node.getAttribute('title');
    const titleId = node.getAttribute('data-fa-title-id');
    if (config.autoA11y) {
      if (title) {
        extraAttributes['aria-labelledby'] = "".concat(config.replacementClass, "-title-").concat(titleId || nextUniqueId());
      } else {
        extraAttributes['aria-hidden'] = 'true';
        extraAttributes['focusable'] = 'false';
      }
    }
    return extraAttributes;
  }

  function blankMeta() {
    return {
      iconName: null,
      title: null,
      titleId: null,
      prefix: null,
      transform: meaninglessTransform,
      symbol: false,
      mask: {
        iconName: null,
        prefix: null,
        rest: []
      },
      maskId: null,
      extra: {
        classes: [],
        styles: {},
        attributes: {}
      }
    };
  }
  function parseMeta(node) {
    let parser = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
      styleParser: true
    };
    const {
      iconName,
      prefix,
      rest: extraClasses
    } = classParser(node);
    const extraAttributes = attributesParser(node);
    const pluginMeta = chainHooks('parseNodeAttributes', {}, node);
    let extraStyles = parser.styleParser ? styleParser(node) : [];
    return _objectSpread2({
      iconName,
      title: node.getAttribute('title'),
      titleId: node.getAttribute('data-fa-title-id'),
      prefix,
      transform: meaninglessTransform,
      mask: {
        iconName: null,
        prefix: null,
        rest: []
      },
      maskId: null,
      symbol: false,
      extra: {
        classes: extraClasses,
        styles: extraStyles,
        attributes: extraAttributes
      }
    }, pluginMeta);
  }

  const {
    styles: styles$2
  } = namespace;
  function generateMutation(node) {
    const nodeMeta = config.autoReplaceSvg === 'nest' ? parseMeta(node, {
      styleParser: false
    }) : parseMeta(node);
    if (~nodeMeta.extra.classes.indexOf(LAYERS_TEXT_CLASSNAME)) {
      return callProvided('generateLayersText', node, nodeMeta);
    } else {
      return callProvided('generateSvgReplacementMutation', node, nodeMeta);
    }
  }
  function getKnownPrefixes() {
    return [...Ft, ...Ia];
  }
  function onTree(root) {
    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
    if (!IS_DOM) return Promise.resolve();
    const htmlClassList = DOCUMENT.documentElement.classList;
    const hclAdd = suffix => htmlClassList.add("".concat(HTML_CLASS_I2SVG_BASE_CLASS, "-").concat(suffix));
    const hclRemove = suffix => htmlClassList.remove("".concat(HTML_CLASS_I2SVG_BASE_CLASS, "-").concat(suffix));
    const prefixes = config.autoFetchSvg ? getKnownPrefixes() : P.concat(Object.keys(styles$2));
    if (!prefixes.includes('fa')) {
      prefixes.push('fa');
    }
    const prefixesDomQuery = [".".concat(LAYERS_TEXT_CLASSNAME, ":not([").concat(DATA_FA_I2SVG, "])")].concat(prefixes.map(p$$1 => ".".concat(p$$1, ":not([").concat(DATA_FA_I2SVG, "])"))).join(', ');
    if (prefixesDomQuery.length === 0) {
      return Promise.resolve();
    }
    let candidates = [];
    try {
      candidates = toArray(root.querySelectorAll(prefixesDomQuery));
    } catch (e$$1) {
      // noop
    }
    if (candidates.length > 0) {
      hclAdd('pending');
      hclRemove('complete');
    } else {
      return Promise.resolve();
    }
    const mark = perf.begin('onTree');
    const mutations = candidates.reduce((acc, node) => {
      try {
        const mutation = generateMutation(node);
        if (mutation) {
          acc.push(mutation);
        }
      } catch (e$$1) {
        if (!PRODUCTION) {
          if (e$$1.name === 'MissingIcon') {
            console.error(e$$1);
          }
        }
      }
      return acc;
    }, []);
    return new Promise((resolve, reject) => {
      Promise.all(mutations).then(resolvedMutations => {
        perform(resolvedMutations, () => {
          hclAdd('active');
          hclAdd('complete');
          hclRemove('pending');
          if (typeof callback === 'function') callback();
          mark();
          resolve();
        });
      }).catch(e$$1 => {
        mark();
        reject(e$$1);
      });
    });
  }
  function onNode(node) {
    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
    generateMutation(node).then(mutation => {
      if (mutation) {
        perform([mutation], callback);
      }
    });
  }
  function resolveIcons(next) {
    return function (maybeIconDefinition) {
      let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      const iconDefinition = (maybeIconDefinition || {}).icon ? maybeIconDefinition : findIconDefinition(maybeIconDefinition || {});
      let {
        mask
      } = params;
      if (mask) {
        mask = (mask || {}).icon ? mask : findIconDefinition(mask || {});
      }
      return next(iconDefinition, _objectSpread2(_objectSpread2({}, params), {}, {
        mask
      }));
    };
  }
  const render = function (iconDefinition) {
    let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    const {
      transform = meaninglessTransform,
      symbol = false,
      mask = null,
      maskId = null,
      title = null,
      titleId = null,
      classes = [],
      attributes = {},
      styles = {}
    } = params;
    if (!iconDefinition) return;
    const {
      prefix,
      iconName,
      icon
    } = iconDefinition;
    return domVariants(_objectSpread2({
      type: 'icon'
    }, iconDefinition), () => {
      callHooks('beforeDOMElementCreation', {
        iconDefinition,
        params
      });
      if (config.autoA11y) {
        if (title) {
          attributes['aria-labelledby'] = "".concat(config.replacementClass, "-title-").concat(titleId || nextUniqueId());
        } else {
          attributes['aria-hidden'] = 'true';
          attributes['focusable'] = 'false';
        }
      }
      return makeInlineSvgAbstract({
        icons: {
          main: asFoundIcon(icon),
          mask: mask ? asFoundIcon(mask.icon) : {
            found: false,
            width: null,
            height: null,
            icon: {}
          }
        },
        prefix,
        iconName,
        transform: _objectSpread2(_objectSpread2({}, meaninglessTransform), transform),
        symbol,
        title,
        maskId,
        titleId,
        extra: {
          attributes,
          styles,
          classes
        }
      });
    });
  };
  var ReplaceElements = {
    mixout() {
      return {
        icon: resolveIcons(render)
      };
    },
    hooks() {
      return {
        mutationObserverCallbacks(accumulator) {
          accumulator.treeCallback = onTree;
          accumulator.nodeCallback = onNode;
          return accumulator;
        }
      };
    },
    provides(providers$$1) {
      providers$$1.i2svg = function (params) {
        const {
          node = DOCUMENT,
          callback = () => {}
        } = params;
        return onTree(node, callback);
      };
      providers$$1.generateSvgReplacementMutation = function (node, nodeMeta) {
        const {
          iconName,
          title,
          titleId,
          prefix,
          transform,
          symbol,
          mask,
          maskId,
          extra
        } = nodeMeta;
        return new Promise((resolve, reject) => {
          Promise.all([findIcon(iconName, prefix), mask.iconName ? findIcon(mask.iconName, mask.prefix) : Promise.resolve({
            found: false,
            width: 512,
            height: 512,
            icon: {}
          })]).then(_ref => {
            let [main, mask] = _ref;
            resolve([node, makeInlineSvgAbstract({
              icons: {
                main,
                mask
              },
              prefix,
              iconName,
              transform,
              symbol,
              maskId,
              title,
              titleId,
              extra,
              watchable: true
            })]);
          }).catch(reject);
        });
      };
      providers$$1.generateAbstractIcon = function (_ref2) {
        let {
          children,
          attributes,
          main,
          transform,
          styles
        } = _ref2;
        const styleString = joinStyles(styles);
        if (styleString.length > 0) {
          attributes['style'] = styleString;
        }
        let nextChild;
        if (transformIsMeaningful(transform)) {
          nextChild = callProvided('generateAbstractTransformGrouping', {
            main,
            transform,
            containerWidth: main.width,
            iconWidth: main.width
          });
        }
        children.push(nextChild || main.icon);
        return {
          children,
          attributes
        };
      };
    }
  };

  var Layers = {
    mixout() {
      return {
        layer(assembler) {
          let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
          const {
            classes = []
          } = params;
          return domVariants({
            type: 'layer'
          }, () => {
            callHooks('beforeDOMElementCreation', {
              assembler,
              params
            });
            let children = [];
            assembler(args => {
              Array.isArray(args) ? args.map(a => {
                children = children.concat(a.abstract);
              }) : children = children.concat(args.abstract);
            });
            return [{
              tag: 'span',
              attributes: {
                class: ["".concat(config.cssPrefix, "-layers"), ...classes].join(' ')
              },
              children
            }];
          });
        }
      };
    }
  };

  var LayersCounter = {
    mixout() {
      return {
        counter(content) {
          let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
          const {
            title = null,
            classes = [],
            attributes = {},
            styles = {}
          } = params;
          return domVariants({
            type: 'counter',
            content
          }, () => {
            callHooks('beforeDOMElementCreation', {
              content,
              params
            });
            return makeLayersCounterAbstract({
              content: content.toString(),
              title,
              extra: {
                attributes,
                styles,
                classes: ["".concat(config.cssPrefix, "-layers-counter"), ...classes]
              }
            });
          });
        }
      };
    }
  };

  var LayersText = {
    mixout() {
      return {
        text(content) {
          let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
          const {
            transform = meaninglessTransform,
            title = null,
            classes = [],
            attributes = {},
            styles = {}
          } = params;
          return domVariants({
            type: 'text',
            content
          }, () => {
            callHooks('beforeDOMElementCreation', {
              content,
              params
            });
            return makeLayersTextAbstract({
              content,
              transform: _objectSpread2(_objectSpread2({}, meaninglessTransform), transform),
              title,
              extra: {
                attributes,
                styles,
                classes: ["".concat(config.cssPrefix, "-layers-text"), ...classes]
              }
            });
          });
        }
      };
    },
    provides(providers$$1) {
      providers$$1.generateLayersText = function (node, nodeMeta) {
        const {
          title,
          transform,
          extra
        } = nodeMeta;
        let width = null;
        let height = null;
        if (IS_IE) {
          const computedFontSize = parseInt(getComputedStyle(node).fontSize, 10);
          const boundingClientRect = node.getBoundingClientRect();
          width = boundingClientRect.width / computedFontSize;
          height = boundingClientRect.height / computedFontSize;
        }
        if (config.autoA11y && !title) {
          extra.attributes['aria-hidden'] = 'true';
        }
        return Promise.resolve([node, makeLayersTextAbstract({
          content: node.innerHTML,
          width,
          height,
          transform,
          title,
          extra,
          watchable: true
        })]);
      };
    }
  };

  const CLEAN_CONTENT_PATTERN = new RegExp('\u{22}', 'ug');
  const SECONDARY_UNICODE_RANGE = [1105920, 1112319];
  const _FONT_FAMILY_WEIGHT_TO_PREFIX = _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, {
    FontAwesome: {
      normal: 'fas',
      400: 'fas'
    }
  }), lt), wa), Yt);
  const FONT_FAMILY_WEIGHT_TO_PREFIX = Object.keys(_FONT_FAMILY_WEIGHT_TO_PREFIX).reduce((acc, key) => {
    acc[key.toLowerCase()] = _FONT_FAMILY_WEIGHT_TO_PREFIX[key];
    return acc;
  }, {});
  const FONT_FAMILY_WEIGHT_FALLBACK = Object.keys(FONT_FAMILY_WEIGHT_TO_PREFIX).reduce((acc, fontFamily) => {
    const weights = FONT_FAMILY_WEIGHT_TO_PREFIX[fontFamily];
    acc[fontFamily] = weights[900] || [...Object.entries(weights)][0][1];
    return acc;
  }, {});
  function hexValueFromContent(content) {
    const cleaned = content.replace(CLEAN_CONTENT_PATTERN, '');
    const codePoint = codePointAt(cleaned, 0);
    const isPrependTen = codePoint >= SECONDARY_UNICODE_RANGE[0] && codePoint <= SECONDARY_UNICODE_RANGE[1];
    const isDoubled = cleaned.length === 2 ? cleaned[0] === cleaned[1] : false;
    return {
      value: isDoubled ? toHex(cleaned[0]) : toHex(cleaned),
      isSecondary: isPrependTen || isDoubled
    };
  }
  function getPrefix(fontFamily, fontWeight) {
    const fontFamilySanitized = fontFamily.replace(/^['"]|['"]$/g, '').toLowerCase();
    const fontWeightInteger = parseInt(fontWeight);
    const fontWeightSanitized = isNaN(fontWeightInteger) ? 'normal' : fontWeightInteger;
    return (FONT_FAMILY_WEIGHT_TO_PREFIX[fontFamilySanitized] || {})[fontWeightSanitized] || FONT_FAMILY_WEIGHT_FALLBACK[fontFamilySanitized];
  }
  function replaceForPosition(node, position) {
    const pendingAttribute = "".concat(DATA_FA_PSEUDO_ELEMENT_PENDING).concat(position.replace(':', '-'));
    return new Promise((resolve, reject) => {
      if (node.getAttribute(pendingAttribute) !== null) {
        // This node is already being processed
        return resolve();
      }
      const children = toArray(node.children);
      const alreadyProcessedPseudoElement = children.filter(c$$1 => c$$1.getAttribute(DATA_FA_PSEUDO_ELEMENT) === position)[0];
      const styles = WINDOW.getComputedStyle(node, position);
      const fontFamily = styles.getPropertyValue('font-family');
      const fontFamilyMatch = fontFamily.match(FONT_FAMILY_PATTERN);
      const fontWeight = styles.getPropertyValue('font-weight');
      const content = styles.getPropertyValue('content');
      if (alreadyProcessedPseudoElement && !fontFamilyMatch) {
        // If we've already processed it but the current computed style does not result in a font-family,
        // that probably means that a class name that was previously present to make the icon has been
        // removed. So we now should delete the icon.
        node.removeChild(alreadyProcessedPseudoElement);
        return resolve();
      } else if (fontFamilyMatch && content !== 'none' && content !== '') {
        const content = styles.getPropertyValue('content');
        let prefix = getPrefix(fontFamily, fontWeight);
        const {
          value: hexValue,
          isSecondary
        } = hexValueFromContent(content);
        const isV4 = fontFamilyMatch[0].startsWith('FontAwesome');
        let iconName = byUnicode(prefix, hexValue);
        let iconIdentifier = iconName;
        if (isV4) {
          const iconName4 = byOldUnicode(hexValue);
          if (iconName4.iconName && iconName4.prefix) {
            iconName = iconName4.iconName;
            prefix = iconName4.prefix;
          }
        }

        // Only convert the pseudo element in this ::before/::after position into an icon if we haven't
        // already done so with the same prefix and iconName
        if (iconName && !isSecondary && (!alreadyProcessedPseudoElement || alreadyProcessedPseudoElement.getAttribute(DATA_PREFIX) !== prefix || alreadyProcessedPseudoElement.getAttribute(DATA_ICON) !== iconIdentifier)) {
          node.setAttribute(pendingAttribute, iconIdentifier);
          if (alreadyProcessedPseudoElement) {
            // Delete the old one, since we're replacing it with a new one
            node.removeChild(alreadyProcessedPseudoElement);
          }
          const meta = blankMeta();
          const {
            extra
          } = meta;
          extra.attributes[DATA_FA_PSEUDO_ELEMENT] = position;
          findIcon(iconName, prefix).then(main => {
            const abstract = makeInlineSvgAbstract(_objectSpread2(_objectSpread2({}, meta), {}, {
              icons: {
                main,
                mask: emptyCanonicalIcon()
              },
              prefix,
              iconName: iconIdentifier,
              extra,
              watchable: true
            }));
            const element = DOCUMENT.createElementNS('http://www.w3.org/2000/svg', 'svg');
            if (position === '::before') {
              node.insertBefore(element, node.firstChild);
            } else {
              node.appendChild(element);
            }
            element.outerHTML = abstract.map(a$$1 => toHtml(a$$1)).join('\n');
            node.removeAttribute(pendingAttribute);
            resolve();
          }).catch(reject);
        } else {
          resolve();
        }
      } else {
        resolve();
      }
    });
  }
  function replace(node) {
    return Promise.all([replaceForPosition(node, '::before'), replaceForPosition(node, '::after')]);
  }
  function processable(node) {
    return node.parentNode !== document.head && !~TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS.indexOf(node.tagName.toUpperCase()) && !node.getAttribute(DATA_FA_PSEUDO_ELEMENT) && (!node.parentNode || node.parentNode.tagName !== 'svg');
  }
  function searchPseudoElements(root) {
    if (!IS_DOM) return;
    return new Promise((resolve, reject) => {
      const operations = toArray(root.querySelectorAll('*')).filter(processable).map(replace);
      const end = perf.begin('searchPseudoElements');
      disableObservation();
      Promise.all(operations).then(() => {
        end();
        enableObservation();
        resolve();
      }).catch(() => {
        end();
        enableObservation();
        reject();
      });
    });
  }
  var PseudoElements = {
    hooks() {
      return {
        mutationObserverCallbacks(accumulator) {
          accumulator.pseudoElementsCallback = searchPseudoElements;
          return accumulator;
        }
      };
    },
    provides(providers) {
      providers.pseudoElements2svg = function (params) {
        const {
          node = DOCUMENT
        } = params;
        if (config.searchPseudoElements) {
          searchPseudoElements(node);
        }
      };
    }
  };

  let _unwatched = false;
  var MutationObserver$1 = {
    mixout() {
      return {
        dom: {
          unwatch() {
            disableObservation();
            _unwatched = true;
          }
        }
      };
    },
    hooks() {
      return {
        bootstrap() {
          observe(chainHooks('mutationObserverCallbacks', {}));
        },
        noAuto() {
          disconnect();
        },
        watch(params) {
          const {
            observeMutationsRoot
          } = params;
          if (_unwatched) {
            enableObservation();
          } else {
            observe(chainHooks('mutationObserverCallbacks', {
              observeMutationsRoot
            }));
          }
        }
      };
    }
  };

  const parseTransformString = transformString => {
    let transform = {
      size: 16,
      x: 0,
      y: 0,
      flipX: false,
      flipY: false,
      rotate: 0
    };
    return transformString.toLowerCase().split(' ').reduce((acc, n) => {
      const parts = n.toLowerCase().split('-');
      const first = parts[0];
      let rest = parts.slice(1).join('-');
      if (first && rest === 'h') {
        acc.flipX = true;
        return acc;
      }
      if (first && rest === 'v') {
        acc.flipY = true;
        return acc;
      }
      rest = parseFloat(rest);
      if (isNaN(rest)) {
        return acc;
      }
      switch (first) {
        case 'grow':
          acc.size = acc.size + rest;
          break;
        case 'shrink':
          acc.size = acc.size - rest;
          break;
        case 'left':
          acc.x = acc.x - rest;
          break;
        case 'right':
          acc.x = acc.x + rest;
          break;
        case 'up':
          acc.y = acc.y - rest;
          break;
        case 'down':
          acc.y = acc.y + rest;
          break;
        case 'rotate':
          acc.rotate = acc.rotate + rest;
          break;
      }
      return acc;
    }, transform);
  };
  var PowerTransforms = {
    mixout() {
      return {
        parse: {
          transform: transformString => {
            return parseTransformString(transformString);
          }
        }
      };
    },
    hooks() {
      return {
        parseNodeAttributes(accumulator, node) {
          const transformString = node.getAttribute('data-fa-transform');
          if (transformString) {
            accumulator.transform = parseTransformString(transformString);
          }
          return accumulator;
        }
      };
    },
    provides(providers) {
      providers.generateAbstractTransformGrouping = function (_ref) {
        let {
          main,
          transform,
          containerWidth,
          iconWidth
        } = _ref;
        const outer = {
          transform: "translate(".concat(containerWidth / 2, " 256)")
        };
        const innerTranslate = "translate(".concat(transform.x * 32, ", ").concat(transform.y * 32, ") ");
        const innerScale = "scale(".concat(transform.size / 16 * (transform.flipX ? -1 : 1), ", ").concat(transform.size / 16 * (transform.flipY ? -1 : 1), ") ");
        const innerRotate = "rotate(".concat(transform.rotate, " 0 0)");
        const inner = {
          transform: "".concat(innerTranslate, " ").concat(innerScale, " ").concat(innerRotate)
        };
        const path = {
          transform: "translate(".concat(iconWidth / 2 * -1, " -256)")
        };
        const operations = {
          outer,
          inner,
          path
        };
        return {
          tag: 'g',
          attributes: _objectSpread2({}, operations.outer),
          children: [{
            tag: 'g',
            attributes: _objectSpread2({}, operations.inner),
            children: [{
              tag: main.icon.tag,
              children: main.icon.children,
              attributes: _objectSpread2(_objectSpread2({}, main.icon.attributes), operations.path)
            }]
          }]
        };
      };
    }
  };

  const ALL_SPACE = {
    x: 0,
    y: 0,
    width: '100%',
    height: '100%'
  };
  function fillBlack(abstract) {
    let force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
    if (abstract.attributes && (abstract.attributes.fill || force)) {
      abstract.attributes.fill = 'black';
    }
    return abstract;
  }
  function deGroup(abstract) {
    if (abstract.tag === 'g') {
      return abstract.children;
    } else {
      return [abstract];
    }
  }
  var Masks = {
    hooks() {
      return {
        parseNodeAttributes(accumulator, node) {
          const maskData = node.getAttribute('data-fa-mask');
          const mask = !maskData ? emptyCanonicalIcon() : getCanonicalIcon(maskData.split(' ').map(i => i.trim()));
          if (!mask.prefix) {
            mask.prefix = getDefaultUsablePrefix();
          }
          accumulator.mask = mask;
          accumulator.maskId = node.getAttribute('data-fa-mask-id');
          return accumulator;
        }
      };
    },
    provides(providers) {
      providers.generateAbstractMask = function (_ref) {
        let {
          children,
          attributes,
          main,
          mask,
          maskId: explicitMaskId,
          transform
        } = _ref;
        const {
          width: mainWidth,
          icon: mainPath
        } = main;
        const {
          width: maskWidth,
          icon: maskPath
        } = mask;
        const trans = transformForSvg({
          transform,
          containerWidth: maskWidth,
          iconWidth: mainWidth
        });
        const maskRect = {
          tag: 'rect',
          attributes: _objectSpread2(_objectSpread2({}, ALL_SPACE), {}, {
            fill: 'white'
          })
        };
        const maskInnerGroupChildrenMixin = mainPath.children ? {
          children: mainPath.children.map(fillBlack)
        } : {};
        const maskInnerGroup = {
          tag: 'g',
          attributes: _objectSpread2({}, trans.inner),
          children: [fillBlack(_objectSpread2({
            tag: mainPath.tag,
            attributes: _objectSpread2(_objectSpread2({}, mainPath.attributes), trans.path)
          }, maskInnerGroupChildrenMixin))]
        };
        const maskOuterGroup = {
          tag: 'g',
          attributes: _objectSpread2({}, trans.outer),
          children: [maskInnerGroup]
        };
        const maskId = "mask-".concat(explicitMaskId || nextUniqueId());
        const clipId = "clip-".concat(explicitMaskId || nextUniqueId());
        const maskTag = {
          tag: 'mask',
          attributes: _objectSpread2(_objectSpread2({}, ALL_SPACE), {}, {
            id: maskId,
            maskUnits: 'userSpaceOnUse',
            maskContentUnits: 'userSpaceOnUse'
          }),
          children: [maskRect, maskOuterGroup]
        };
        const defs = {
          tag: 'defs',
          children: [{
            tag: 'clipPath',
            attributes: {
              id: clipId
            },
            children: deGroup(maskPath)
          }, maskTag]
        };
        children.push(defs, {
          tag: 'rect',
          attributes: _objectSpread2({
            fill: 'currentColor',
            'clip-path': "url(#".concat(clipId, ")"),
            mask: "url(#".concat(maskId, ")")
          }, ALL_SPACE)
        });
        return {
          children,
          attributes
        };
      };
    }
  };

  var MissingIconIndicator = {
    provides(providers) {
      let reduceMotion = false;
      if (WINDOW.matchMedia) {
        reduceMotion = WINDOW.matchMedia('(prefers-reduced-motion: reduce)').matches;
      }
      providers.missingIconAbstract = function () {
        const gChildren = [];
        const FILL = {
          fill: 'currentColor'
        };
        const ANIMATION_BASE = {
          attributeType: 'XML',
          repeatCount: 'indefinite',
          dur: '2s'
        };

        // Ring
        gChildren.push({
          tag: 'path',
          attributes: _objectSpread2(_objectSpread2({}, FILL), {}, {
            d: 'M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z'
          })
        });
        const OPACITY_ANIMATE = _objectSpread2(_objectSpread2({}, ANIMATION_BASE), {}, {
          attributeName: 'opacity'
        });
        const dot = {
          tag: 'circle',
          attributes: _objectSpread2(_objectSpread2({}, FILL), {}, {
            cx: '256',
            cy: '364',
            r: '28'
          }),
          children: []
        };
        if (!reduceMotion) {
          dot.children.push({
            tag: 'animate',
            attributes: _objectSpread2(_objectSpread2({}, ANIMATION_BASE), {}, {
              attributeName: 'r',
              values: '28;14;28;28;14;28;'
            })
          }, {
            tag: 'animate',
            attributes: _objectSpread2(_objectSpread2({}, OPACITY_ANIMATE), {}, {
              values: '1;0;1;1;0;1;'
            })
          });
        }
        gChildren.push(dot);
        gChildren.push({
          tag: 'path',
          attributes: _objectSpread2(_objectSpread2({}, FILL), {}, {
            opacity: '1',
            d: 'M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z'
          }),
          children: reduceMotion ? [] : [{
            tag: 'animate',
            attributes: _objectSpread2(_objectSpread2({}, OPACITY_ANIMATE), {}, {
              values: '1;0;0;0;0;1;'
            })
          }]
        });
        if (!reduceMotion) {
          // Exclamation
          gChildren.push({
            tag: 'path',
            attributes: _objectSpread2(_objectSpread2({}, FILL), {}, {
              opacity: '0',
              d: 'M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z'
            }),
            children: [{
              tag: 'animate',
              attributes: _objectSpread2(_objectSpread2({}, OPACITY_ANIMATE), {}, {
                values: '0;0;1;1;0;0;'
              })
            }]
          });
        }
        return {
          tag: 'g',
          attributes: {
            'class': 'missing'
          },
          children: gChildren
        };
      };
    }
  };

  var SvgSymbols = {
    hooks() {
      return {
        parseNodeAttributes(accumulator, node) {
          const symbolData = node.getAttribute('data-fa-symbol');
          const symbol = symbolData === null ? false : symbolData === '' ? true : symbolData;
          accumulator['symbol'] = symbol;
          return accumulator;
        }
      };
    }
  };

  var plugins = [InjectCSS, ReplaceElements, Layers, LayersCounter, LayersText, PseudoElements, MutationObserver$1, PowerTransforms, Masks, MissingIconIndicator, SvgSymbols];

  registerPlugins(plugins, {
    mixoutsTo: api
  });
  bunker(bootstrap);

}());
